{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Computational Economics and Data Science","text":"A Comprehensive Graduate-Level Course <p>     Master the computational methods that power modern economic research and data science   </p>"},{"location":"#about-this-course","title":"About This Course","text":"<p>This course provides a rigorous, hands-on introduction to computational methods in economics and data science. Designed for graduate students and researchers, it covers everything from Python fundamentals to frontier research methods in machine learning and econometrics.</p>"},{"location":"#what-youll-learn","title":"What You'll Learn","text":"Core SkillsAdvanced TopicsPractical Tools <ul> <li>Python Programming: From basics to advanced scientific computing</li> <li>Numerical Methods: Optimization, root-finding, and integration algorithms</li> <li>Economic Modeling: Dynamic programming, general equilibrium, and DSGE models</li> <li>Data Science: Statistical analysis, visualization, and data acquisition</li> </ul> <ul> <li>Machine Learning: Deep learning, transformers, causal ML</li> <li>Econometrics: Causal inference, IV, GMM, and Bayesian methods</li> <li>Time Series: ARMA, VAR, GARCH, and forecasting</li> <li>Computational Finance: Option pricing, portfolio optimization</li> <li>Agent-Based Models: Heterogeneous agents and network economics</li> </ul> <ul> <li>NumPy, Pandas, SciPy for scientific computing</li> <li>TensorFlow, PyTorch for deep learning</li> <li>statsmodels, scikit-learn for econometrics</li> <li>Jupyter notebooks for interactive analysis</li> <li>Git, conda for professional development</li> </ul>"},{"location":"#course-structure","title":"Course Structure","text":"<p>The course is organized into 10 comprehensive modules plus appendices:</p> <ul> <li> <p> Module 1: Foundations</p> <p>Python fundamentals, NumPy, Pandas, data visualization, and professional development tools</p> <p> Start learning</p> </li> <li> <p> Module 2: Numerical Methods</p> <p>Linear algebra, optimization, root-finding, interpolation, and differential equations</p> <p> Explore</p> </li> <li> <p> Module 3: Economic Modeling</p> <p>Dynamic programming, value function iteration, and policy iteration</p> <p> Learn more</p> </li> <li> <p> Module 4: Macro Models</p> <p>Job search, growth models, RBC, OLG, and New Keynesian models</p> <p> Discover</p> </li> <li> <p> Module 5: Micro Models</p> <p>Consumer theory, general equilibrium, game theory, and discrete choice</p> <p> Explore</p> </li> <li> <p> Module 6: Econometrics</p> <p>OLS, MLE, causal inference, GMM, IV, and Bayesian methods</p> <p> Learn</p> </li> <li> <p> Module 7: Machine Learning</p> <p>ML for economists, deep learning, CNNs, RNNs, transformers, and causal ML</p> <p> Dive in</p> </li> <li> <p> Module 8: Time Series</p> <p>ARMA, ARIMA, VAR, GARCH, and cointegration models</p> <p> Study</p> </li> <li> <p> Module 9: Finance</p> <p>Portfolio theory, asset pricing, option pricing, and continuous-time finance</p> <p> Explore</p> </li> <li> <p> Module 10: Specialized Models</p> <p>Agent-based models, heterogeneous agents, and network economics</p> <p> Advanced topics</p> </li> </ul>"},{"location":"#quick-start","title":"Quick Start","text":"<p>Get up and running in minutes:</p> <pre><code># Clone the repository\ngit clone https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.git\ncd Computational-Economics-and-Data-Science\n\n# Create conda environment\nconda env create -f environment.yml\nconda activate computational-econ\n\n# Start Jupyter Lab\njupyter lab\n</code></pre> <p> Installation Guide  Quick Start Tutorial</p>"},{"location":"#key-features","title":"Key Features","text":"<p>World-Class Content</p> <ul> <li>116 comprehensive Jupyter notebooks</li> <li>50+ hours of instructional material</li> <li>Real-world applications and datasets</li> <li>Rigorous mathematical foundations</li> </ul> <p>Hands-On Learning</p> <ul> <li>Interactive code examples</li> <li>Step-by-step tutorials</li> <li>Practice problems and exercises</li> <li>Complete worked solutions</li> </ul> <p>Modern Tools</p> <ul> <li>Latest Python libraries (NumPy 2.x, TensorFlow 2.x, PyTorch)</li> <li>Professional development workflow</li> <li>Best practices and code style guidelines</li> <li>Comprehensive test suites</li> </ul> <p>Open Source</p> <ul> <li>MIT License for code</li> <li>CC BY 4.0 for educational content</li> <li>Community contributions welcome</li> <li>Active development and maintenance</li> </ul>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>This course assumes:</p> <ul> <li>Mathematics: Calculus, linear algebra, probability, and statistics</li> <li>Economics: Intermediate micro and macroeconomics</li> <li>Programming: Basic familiarity with programming concepts (any language)</li> </ul> <p>New to Programming?</p> <p>Module 1 starts from the basics! If you're new to Python or programming, you'll learn everything you need.</p>"},{"location":"#license","title":"License","text":"<p>This course is dual-licensed:</p> <ul> <li>Code: MIT License - Use freely in your projects</li> <li>Content: Creative Commons BY 4.0 - Share and adapt with attribution</li> </ul>"},{"location":"#about-the-author","title":"About the Author","text":"<p>Amirreza Farnam Taheri Tehran Institute for Advanced Studies (TeIAS)</p> <p> GitHub  LinkedIn</p>"},{"location":"#material-citation-citation","title":":material-citation: Citation","text":"<p>If you use this course in your research or teaching, please cite:</p> <pre><code>@misc{farnamtaheri2025compecon,\n  author = {Farnam Taheri, Amirreza},\n  title = {Computational Economics and Data Science},\n  year = {2025},\n  publisher = {GitHub},\n  url = {https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science}\n}\n</code></pre> <p> Full Citation Details</p>"},{"location":"#support-this-project","title":"Support This ProjectReady to Begin?","text":"<p>If you find this course helpful, please:</p> <ul> <li> Star the GitHub repository</li> <li> Share with colleagues and students</li> <li> Report issues or suggest improvements</li> <li> Contribute improvements</li> </ul> <p>     Start your journey into computational economics and data science today   </p>      Install &amp; Setup         Start Module 1"},{"location":"CODE_STYLE/","title":"Code Style Guide","text":"<p>This document outlines the coding standards and best practices for the Computational Economics and Data Science course materials.</p>"},{"location":"CODE_STYLE/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Naming Conventions</li> <li>Documentation</li> <li>Type Hints</li> <li>Function Design</li> <li>Error Handling</li> <li>Testing</li> <li>Performance</li> <li>NumPy and Scientific Computing</li> <li>Jupyter Notebooks</li> <li>Import Organization</li> </ol>"},{"location":"CODE_STYLE/#naming-conventions","title":"Naming Conventions","text":""},{"location":"CODE_STYLE/#general-rules","title":"General Rules","text":"<ul> <li>Classes: PascalCase (<code>EconomicAgent</code>, <code>MarketSimulator</code>, <code>DSGEModel</code>)</li> <li>Functions/Methods: snake_case (<code>solve_bellman</code>, <code>compute_equilibrium</code>, <code>calculate_pv</code>)</li> <li>Variables: snake_case (<code>discount_factor</code>, <code>price_level</code>, <code>value_function</code>)</li> <li>Constants: UPPER_SNAKE_CASE (<code>MAX_ITER</code>, <code>TOLERANCE</code>, <code>DEFAULT_PARAMS</code>)</li> <li>Private attributes/methods: _leading_underscore (<code>_internal_helper</code>, <code>_cache</code>)</li> <li>\"Magic\" methods: Double underscore (<code>__init__</code>, <code>__repr__</code>)</li> </ul>"},{"location":"CODE_STYLE/#economics-specific-conventions","title":"Economics-Specific Conventions","text":"<pre><code># Good: Clear, domain-specific names\nbeta = 0.96              # Discount factor\ngamma = 2.0              # CRRA coefficient\ncapital_stock = 100.0    # Current capital\nvalue_function = np.zeros(n)\n\n# Bad: Vague or confusing names\nb = 0.96\ng = 2.0\nk = 100.0\nv = np.zeros(n)\n</code></pre>"},{"location":"CODE_STYLE/#abbreviations","title":"Abbreviations","text":"<p>Use standard economics abbreviations, but define them: <pre><code># Standard abbreviations (acceptable)\ngdp = compute_gdp()       # Gross Domestic Product\ncpi = get_inflation()     # Consumer Price Index\nvar_model = VAR(data)     # Vector Autoregression\n\n# Define less common abbreviations in docstrings\ndef compute_efp(params):\n    \"\"\"Compute External Finance Premium (EFP).\"\"\"\n    pass\n</code></pre></p>"},{"location":"CODE_STYLE/#documentation","title":"Documentation","text":""},{"location":"CODE_STYLE/#docstring-style","title":"Docstring Style","text":"<p>Always use NumPy-style docstrings for consistency with scientific Python ecosystem.</p>"},{"location":"CODE_STYLE/#function-documentation","title":"Function Documentation","text":"<pre><code>def solve_dp_problem(V_init, params, tol=1e-6, max_iter=1000):\n    \"\"\"\n    Solve dynamic programming problem via value function iteration.\n\n    This function implements the standard value function iteration algorithm\n    for discrete-state dynamic programming problems. It iterates until\n    convergence or maximum iterations are reached.\n\n    Parameters\n    ----------\n    V_init : np.ndarray\n        Initial value function guess, shape (n_states,)\n    params : dict\n        Model parameters containing:\n        - 'beta' : float, discount factor\n        - 'gamma' : float, risk aversion coefficient\n        - Additional model-specific parameters\n    tol : float, default=1e-6\n        Convergence tolerance for sup norm\n    max_iter : int, default=1000\n        Maximum number of iterations\n\n    Returns\n    -------\n    V : np.ndarray\n        Converged value function, shape (n_states,)\n    policy : np.ndarray\n        Optimal policy function (indices), shape (n_states,)\n    converged : bool\n        Whether algorithm converged\n\n    Raises\n    ------\n    ValueError\n        If V_init has wrong shape or params missing required keys\n    RuntimeError\n        If algorithm fails to converge within max_iter\n\n    Notes\n    -----\n    The algorithm implements the Bellman operator:\n    .. math::\n        T(V)(s) = \\max_{a} u(s, a) + \\beta \\sum_{s'} P(s'|s, a) V(s')\n\n    References\n    ----------\n    .. [1] Stokey, Lucas, and Prescott (1989), \"Recursive Methods in\n           Economic Dynamics\"\n\n    Examples\n    --------\n    &gt;&gt;&gt; params = {'beta': 0.96, 'gamma': 2.0}\n    &gt;&gt;&gt; V0 = np.zeros(100)\n    &gt;&gt;&gt; V, policy, converged = solve_dp_problem(V0, params)\n    &gt;&gt;&gt; print(f\"Converged: {converged}\")\n    Converged: True\n    \"\"\"\n    pass\n</code></pre>"},{"location":"CODE_STYLE/#class-documentation","title":"Class Documentation","text":"<pre><code>class DSGEModel:\n    \"\"\"\n    Dynamic Stochastic General Equilibrium model solver.\n\n    This class provides methods for solving and simulating linear\n    DSGE models using the Klein (2000) solution method.\n\n    Parameters\n    ----------\n    equations : list of str\n        Model equations in string format\n    parameters : dict\n        Calibrated parameter values\n    shock_std : dict, optional\n        Standard deviations of shocks\n\n    Attributes\n    ----------\n    n_vars : int\n        Number of endogenous variables\n    solution : dict\n        Solved policy and transition matrices\n    is_solved : bool\n        Whether model has been solved\n\n    Methods\n    -------\n    solve()\n        Solve the model using Klein method\n    impulse_response(shock_name, periods=40)\n        Generate impulse response functions\n    simulate(T=1000, burn=100)\n        Simulate model time series\n\n    Examples\n    --------\n    &gt;&gt;&gt; model = DSGEModel(equations, params)\n    &gt;&gt;&gt; model.solve()\n    &gt;&gt;&gt; irfs = model.impulse_response('technology', periods=50)\n\n    References\n    ----------\n    .. [1] Klein, P. (2000). \"Using the generalized Schur form to solve\n           a multivariate linear rational expectations model.\" Journal of\n           Economic Dynamics and Control, 24(10), 1405-1423.\n    \"\"\"\n    pass\n</code></pre>"},{"location":"CODE_STYLE/#inline-comments","title":"Inline Comments","text":"<pre><code># Good: Explain WHY, not WHAT\n# Use Euler equation approximation to avoid solving implicit equation\nconsumption = income - savings  # Budget constraint\n\n# Bad: Obvious comment\n# Set x to 5\nx = 5\n</code></pre>"},{"location":"CODE_STYLE/#type-hints","title":"Type Hints","text":"<p>Use type hints for function signatures to improve code clarity and enable static analysis.</p>"},{"location":"CODE_STYLE/#basic-type-hints","title":"Basic Type Hints","text":"<pre><code>from typing import Optional, Union, List, Dict, Tuple, Callable\nimport numpy as np\nimport pandas as pd\nfrom numpy.typing import NDArray\n\ndef calculate_pv(\n    fv: float,\n    r: float,\n    n: int\n) -&gt; float:\n    \"\"\"Calculate present value.\"\"\"\n    return fv / (1 + r) ** n\n\ndef solve_model(\n    params: Dict[str, float],\n    grid_size: int = 100,\n    tol: float = 1e-6\n) -&gt; Tuple[NDArray[np.float64], NDArray[np.float64]]:\n    \"\"\"\n    Solve economic model.\n\n    Returns\n    -------\n    value_function : NDArray[np.float64]\n        Value function on grid\n    policy_function : NDArray[np.float64]\n        Policy function on grid\n    \"\"\"\n    pass\n</code></pre>"},{"location":"CODE_STYLE/#advanced-type-hints","title":"Advanced Type Hints","text":"<pre><code>from typing import Protocol, TypeVar, Generic\n\n# Protocol for callables\nclass UtilityFunction(Protocol):\n    def __call__(self, consumption: float, labor: float) -&gt; float: ...\n\n# Generic types\nT = TypeVar('T', bound=np.ndarray)\n\ndef normalize(data: T) -&gt; T:\n    \"\"\"Normalize data preserving type.\"\"\"\n    return data / data.sum()\n</code></pre>"},{"location":"CODE_STYLE/#function-design","title":"Function Design","text":""},{"location":"CODE_STYLE/#parameter-dictionaries","title":"Parameter Dictionaries","text":"<p>For functions with many parameters (&gt;5), use parameter dictionaries:</p> <pre><code># Good: Parameter dictionary\ndef rbc_model(params: Dict[str, float]) -&gt; Dict[str, NDArray]:\n    \"\"\"\n    Solve RBC model.\n\n    Parameters\n    ----------\n    params : dict\n        Model parameters:\n        - 'beta' : float, discount factor (0 &lt; beta &lt; 1)\n        - 'alpha' : float, capital share (0 &lt; alpha &lt; 1)\n        - 'delta' : float, depreciation rate (0 &lt; delta &lt; 1)\n        - 'sigma' : float, risk aversion (sigma &gt; 0)\n        - 'rho' : float, TFP persistence (0 &lt; rho &lt; 1)\n        - 'sigma_eps' : float, TFP shock std dev (sigma_eps &gt; 0)\n    \"\"\"\n    beta = params['beta']\n    alpha = params['alpha']\n    # ... model solution ...\n    return {'capital': k_grid, 'consumption': c_grid}\n\n# Bad: Too many positional arguments\ndef rbc_model(beta, alpha, delta, sigma, rho, sigma_eps, gamma, phi, psi):\n    pass\n</code></pre>"},{"location":"CODE_STYLE/#default-parameters","title":"Default Parameters","text":"<pre><code># Good: Sensible defaults in signature\ndef value_iteration(\n    bellman_operator: Callable,\n    V_init: NDArray,\n    tol: float = 1e-6,\n    max_iter: int = 1000,\n    verbose: bool = False\n) -&gt; Tuple[NDArray, bool]:\n    \"\"\"Value function iteration with clear defaults.\"\"\"\n    pass\n\n# Bad: Mutable default arguments\ndef bad_function(data, cache={}):  # DON'T DO THIS!\n    pass\n\n# Good: Use None and create in function\ndef good_function(data, cache=None):\n    if cache is None:\n        cache = {}\n    pass\n</code></pre>"},{"location":"CODE_STYLE/#return-values","title":"Return Values","text":"<pre><code># Good: Return dictionary for multiple values with clear names\ndef estimate_model(data):\n    results = {\n        'coefficients': beta_hat,\n        'std_errors': se,\n        'r_squared': r2,\n        'residuals': resid\n    }\n    return results\n\n# Also good: Named tuple\nfrom collections import namedtuple\nRegressionResults = namedtuple('RegressionResults',\n                               ['coefficients', 'std_errors', 'r_squared'])\n\ndef estimate_model(data):\n    return RegressionResults(beta_hat, se, r2)\n</code></pre>"},{"location":"CODE_STYLE/#error-handling","title":"Error Handling","text":""},{"location":"CODE_STYLE/#validation","title":"Validation","text":"<p>Always validate inputs for economic models:</p> <pre><code>def utility(c: float, gamma: float) -&gt; float:\n    \"\"\"\n    CRRA utility function.\n\n    Parameters\n    ----------\n    c : float\n        Consumption (must be positive)\n    gamma : float\n        Risk aversion coefficient (must be positive)\n\n    Raises\n    ------\n    ValueError\n        If c &lt;= 0 or gamma &lt;= 0\n    \"\"\"\n    if c &lt;= 0:\n        raise ValueError(f\"Consumption must be positive, got {c}\")\n    if gamma &lt;= 0:\n        raise ValueError(f\"Risk aversion must be positive, got {gamma}\")\n\n    if gamma == 1:\n        return np.log(c)\n    else:\n        return (c ** (1 - gamma) - 1) / (1 - gamma)\n</code></pre>"},{"location":"CODE_STYLE/#exception-handling","title":"Exception Handling","text":"<pre><code># Good: Specific exceptions\ntry:\n    data = pd.read_csv(filename)\nexcept FileNotFoundError:\n    print(f\"Data file {filename} not found\")\n    raise\nexcept pd.errors.ParserError:\n    print(f\"Could not parse {filename}\")\n    raise\n\n# Bad: Bare except\ntry:\n    data = pd.read_csv(filename)\nexcept:  # DON'T DO THIS\n    pass\n</code></pre>"},{"location":"CODE_STYLE/#custom-exceptions","title":"Custom Exceptions","text":"<pre><code>class ConvergenceError(Exception):\n    \"\"\"Raised when numerical algorithm fails to converge.\"\"\"\n    pass\n\nclass ModelSpecificationError(Exception):\n    \"\"\"Raised when model is incorrectly specified.\"\"\"\n    pass\n\ndef solve_model(params):\n    for iteration in range(max_iter):\n        # ... solution code ...\n        if converged:\n            return solution\n\n    raise ConvergenceError(\n        f\"Algorithm did not converge after {max_iter} iterations. \"\n        f\"Final error: {error:.2e}\"\n    )\n</code></pre>"},{"location":"CODE_STYLE/#testing","title":"Testing","text":""},{"location":"CODE_STYLE/#test-organization","title":"Test Organization","text":"<pre><code># test_module.py\nimport pytest\nimport numpy as np\nfrom module import function_to_test\n\n\nclass TestFunctionName:\n    \"\"\"Tests for function_name.\"\"\"\n\n    def test_standard_case(self):\n        \"\"\"Test with standard inputs.\"\"\"\n        result = function_to_test(10, 0.05)\n        assert result == pytest.approx(9.5238, rel=1e-4)\n\n    def test_edge_case_zero(self):\n        \"\"\"Test with zero input.\"\"\"\n        result = function_to_test(0, 0.05)\n        assert result == 0\n\n    def test_raises_on_negative(self):\n        \"\"\"Test that negative input raises ValueError.\"\"\"\n        with pytest.raises(ValueError):\n            function_to_test(-1, 0.05)\n\n    @pytest.mark.parametrize(\"input,expected\", [\n        (10, 9.52),\n        (100, 95.24),\n        (1000, 952.38),\n    ])\n    def test_parametrized(self, input, expected):\n        \"\"\"Parametrized tests.\"\"\"\n        result = function_to_test(input, 0.05)\n        assert result == pytest.approx(expected, rel=1e-2)\n</code></pre>"},{"location":"CODE_STYLE/#performance","title":"Performance","text":""},{"location":"CODE_STYLE/#numpy-vectorization","title":"NumPy Vectorization","text":"<pre><code># Good: Vectorized operations\ndef crra_utility(c: NDArray, gamma: float) -&gt; NDArray:\n    \"\"\"Vectorized CRRA utility.\"\"\"\n    if gamma == 1:\n        return np.log(c)\n    else:\n        return (c ** (1 - gamma) - 1) / (1 - gamma)\n\n# Bad: Loops over arrays\ndef crra_utility_slow(c: NDArray, gamma: float) -&gt; NDArray:\n    u = np.zeros_like(c)\n    for i in range(len(c)):  # SLOW!\n        if gamma == 1:\n            u[i] = np.log(c[i])\n        else:\n            u[i] = (c[i] ** (1 - gamma) - 1) / (1 - gamma)\n    return u\n</code></pre>"},{"location":"CODE_STYLE/#numba-for-loops","title":"Numba for Loops","text":"<pre><code>from numba import jit, njit\n\n@njit\ndef value_iteration_step(V, states, actions, params):\n    \"\"\"\n    JIT-compiled value iteration step.\n\n    Note: Only use @njit for functions that don't call\n    unsupported libraries (e.g., scipy.stats).\n    \"\"\"\n    V_new = np.zeros_like(V)\n    for i in range(len(states)):\n        max_val = -np.inf\n        for a in actions:\n            val = utility(states[i], a) + params['beta'] * V[i]\n            if val &gt; max_val:\n                max_val = val\n        V_new[i] = max_val\n    return V_new\n</code></pre>"},{"location":"CODE_STYLE/#numpy-and-scientific-computing","title":"NumPy and Scientific Computing","text":""},{"location":"CODE_STYLE/#array-creation","title":"Array Creation","text":"<pre><code># Good: Specify dtype for clarity\ngrid = np.linspace(0, 10, 100, dtype=np.float64)\nindices = np.arange(10, dtype=np.int32)\n\n# Preallocate arrays\nresults = np.empty((1000, 50), dtype=np.float64)\n\n# Use zeros/ones with explicit shapes\nvalue_function = np.zeros((n_states, n_actions))\n</code></pre>"},{"location":"CODE_STYLE/#broadcasting","title":"Broadcasting","text":"<pre><code># Leverage broadcasting for cleaner code\nprices = np.array([[10], [20], [30]])  # shape (3, 1)\nquantities = np.array([1, 2, 3, 4])    # shape (4,)\n\n# Automatic broadcasting: (3, 1) \u00d7 (4,) \u2192 (3, 4)\nrevenues = prices * quantities\n</code></pre>"},{"location":"CODE_STYLE/#numerical-stability","title":"Numerical Stability","text":"<pre><code># Good: Log-sum-exp trick\ndef log_sum_exp(x):\n    \"\"\"Numerically stable log-sum-exp.\"\"\"\n    c = x.max()\n    return c + np.log(np.sum(np.exp(x - c)))\n\n# Good: Avoid dividing by potentially small numbers\ndef safe_divide(a, b, fill=0.0):\n    \"\"\"Division with fallback for division by zero.\"\"\"\n    return np.divide(a, b, out=np.full_like(a, fill), where=b != 0)\n</code></pre>"},{"location":"CODE_STYLE/#jupyter-notebooks","title":"Jupyter Notebooks","text":""},{"location":"CODE_STYLE/#cell-organization","title":"Cell Organization","text":"<ol> <li>Imports cell - All imports at the top</li> <li>Configuration cell - Plotting settings, random seeds</li> <li>Functions/classes - Reusable code</li> <li>Analysis cells - One concept per cell</li> <li>Visualization cells - Separate plotting from computation</li> </ol>"},{"location":"CODE_STYLE/#notebook-structure","title":"Notebook Structure","text":"<pre><code># Cell 1: Imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy import optimize\n\n# Cell 2: Configuration\n%matplotlib inline\nplt.style.use('seaborn-v0_8-darkgrid')\nnp.random.seed(42)\npd.options.display.max_rows = 100\n\n# Cell 3: Functions\ndef compute_equilibrium(params):\n    \"\"\"Compute market equilibrium.\"\"\"\n    pass\n\n# Cell 4: Analysis\nparams = {'alpha': 0.3, 'beta': 0.96}\nresult = compute_equilibrium(params)\n\n# Cell 5: Visualization\nfig, ax = plt.subplots()\nax.plot(result['prices'])\nax.set_title('Equilibrium Prices')\nplt.show()\n</code></pre>"},{"location":"CODE_STYLE/#markdown-cells","title":"Markdown Cells","text":"<ul> <li>Use headers to structure content</li> <li>Include mathematical notation in LaTeX: <code>$\\beta$</code> or <code>$$E[x]$$</code></li> <li>Add explanations before code cells</li> <li>Include references and citations</li> </ul>"},{"location":"CODE_STYLE/#import-organization","title":"Import Organization","text":""},{"location":"CODE_STYLE/#import-order-pep-8","title":"Import Order (PEP 8)","text":"<pre><code># 1. Standard library imports\nimport os\nimport sys\nfrom pathlib import Path\nfrom typing import Dict, List, Tuple\n\n# 2. Third-party imports\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom scipy import optimize, stats\n\n# 3. Local application imports\nfrom models.dsge import DSGEModel\nfrom utils.plotting import plot_irf\n</code></pre>"},{"location":"CODE_STYLE/#avoid-wildcard-imports","title":"Avoid Wildcard Imports","text":"<pre><code># Bad\nfrom numpy import *\nfrom scipy.stats import *\n\n# Good\nimport numpy as np\nfrom scipy.stats import norm, t\n</code></pre>"},{"location":"CODE_STYLE/#additional-best-practices","title":"Additional Best Practices","text":""},{"location":"CODE_STYLE/#magic-numbers","title":"Magic Numbers","text":"<pre><code># Bad\nresult = value * 0.05\n\n# Good\nDISCOUNT_RATE = 0.05\nresult = value * DISCOUNT_RATE\n</code></pre>"},{"location":"CODE_STYLE/#listdict-comprehensions","title":"List/Dict Comprehensions","text":"<pre><code># Good: Readable comprehensions\nsquared = [x**2 for x in range(10)]\nparams = {k: v * 1.1 for k, v in old_params.items() if v &gt; 0}\n\n# Bad: Overly complex comprehensions (use regular loops instead)\nresult = [f(g(h(x))) for x in data if condition1(x) and condition2(x)]\n</code></pre>"},{"location":"CODE_STYLE/#f-strings-for-formatting","title":"F-strings for Formatting","text":"<pre><code># Good: F-strings (Python 3.6+)\nname = \"GDP\"\nvalue = 1234.56\nprint(f\"{name}: ${value:,.2f}\")\n\n# Also good for expressions\nprint(f\"Mean: {np.mean(data):.3f}\")\n</code></pre>"},{"location":"CODE_STYLE/#summary-checklist","title":"Summary Checklist","text":"<ul> <li> Use descriptive, domain-appropriate variable names</li> <li> Include NumPy-style docstrings for all public functions</li> <li> Add type hints to function signatures</li> <li> Validate inputs and handle errors explicitly</li> <li> Write tests for edge cases and standard cases</li> <li> Vectorize operations instead of using loops</li> <li> Document parameter dictionaries thoroughly</li> <li> Organize imports following PEP 8</li> <li> Use f-strings for string formatting</li> <li> Follow PEP 8 style guidelines</li> </ul>"},{"location":"COPYRIGHT_NOTICE/","title":"Notebook Copyright Notice Template","text":"<p>Add the following markdown cell at the top of each Jupyter notebook to clarify licensing for learners and collaborators:</p> <pre><code>&gt; **License Notice**\n&gt; \n&gt; This notebook is part of the *Computational Economics and Data Science* course.\n&gt; \n&gt; - Code cells are released under the MIT License. You are free to use and adapt the code with attribution.\n&gt; - Text, figures, and other non-code content are released under the Creative Commons Attribution 4.0 International License.\n&gt; \n&gt; Please retain this notice and credit Amirreza \"Farnam\" Taheri when sharing adaptations.\n</code></pre> <p>For notebooks that already contain attribution or acknowledgements, place this notice immediately after those sections to keep licensing information prominent.</p>"},{"location":"IMAGE_CATALOG/","title":"Image Catalog","text":""},{"location":"IMAGE_CATALOG/#foundations","title":"Foundations","text":"Image Path Source License Git Three States <code>foundations/git/three_states.png</code> Generated Course Big-O Comparison <code>foundations/complexity/big_o_chart.png</code> Generated Course"},{"location":"IMAGE_CATALOG/#numerical-methods","title":"Numerical Methods","text":"Image Path Source License RCK Phase Diagram <code>numerical_methods/phase_diagrams/rck_model.png</code> Generated Course Lotka-Volterra <code>numerical_methods/phase_diagrams/lotka_volterra.png</code> Generated Course"},{"location":"IMAGE_CATALOG/#finance","title":"Finance","text":"Image Path Source License Call and Put Payoffs <code>finance/options/call_put_payoffs.png</code> Generated Course Iron Condor <code>finance/options/iron_condor.png</code> Generated Course"},{"location":"IMAGE_CATALOG/#machine-learning","title":"Machine Learning","text":"Image Path Source License Agent-Environment Loop <code>machine_learning/rl/agent_environment_loop.png</code> Sutton &amp; Barto RL Book Educational Use"},{"location":"IMAGE_CATALOG/#micromacro","title":"Micro/Macro","text":"Image Path Source License Supply and Demand <code>micro_macro/micro/supply_demand.png</code> EconGraphs.org Open Source"},{"location":"about/","title":"About This Course","text":"<p>Learn about the Computational Economics and Data Science course, its author, and how to contribute.</p>"},{"location":"about/#course-overview","title":"Course Overview","text":"<p>This course provides a comprehensive, rigorous introduction to computational methods in economics and data science. It's designed for:</p> <ul> <li>Graduate students in economics</li> <li>Researchers in computational economics</li> <li>Data scientists working with economic data</li> <li>Quantitative analysts in finance</li> <li>Anyone interested in applying computational methods to economics</li> </ul>"},{"location":"about/#what-makes-this-course-different","title":"What Makes This Course Different?","text":"<p>1. Comprehensive Coverage - 10 modules covering foundations to frontier methods - 116 carefully crafted Jupyter notebooks - 300+ hours of instructional content</p> <p>2. Hands-On Learning - Interactive code examples - Real-world economic datasets - Complete worked solutions - Practice exercises throughout</p> <p>3. Modern Tools - Latest Python libraries (NumPy 2.x, TensorFlow 2.x) - Professional development workflows - Industry best practices - Production-ready code</p> <p>4. Open Source - Free forever - Community-driven - Transparent development - Continuous improvements</p>"},{"location":"about/#course-philosophy","title":"Course Philosophy","text":""},{"location":"about/#learning-by-doing","title":"Learning by Doing","text":"<p>We believe the best way to learn computational economics is through:</p> <ol> <li>Active coding - Type code yourself, don't just read</li> <li>Experimentation - Modify parameters, try variations</li> <li>Real data - Work with actual economic datasets</li> <li>Incremental complexity - Build from foundations to advanced topics</li> </ol>"},{"location":"about/#rigor-meets-practicality","title":"Rigor Meets Practicality","text":"<p>This course balances:</p> <ul> <li>Theoretical foundations - Understand the mathematics</li> <li>Practical implementation - Write working code</li> <li>Economic intuition - Know why methods work</li> <li>Best practices - Write production-quality code</li> </ul>"},{"location":"about/#author","title":"Author","text":"Amirreza Farnam Taheri <p>Tehran Institute for Advanced Studies (TeIAS)</p>  **Background:** - Research in computational economics and data science - Expertise in numerical methods and machine learning - Passionate about open-source education - Committed to making advanced economics accessible"},{"location":"about/#connect","title":"Connect","text":"<ul> <li> GitHub</li> <li> LinkedIn</li> <li> Contact</li> </ul>"},{"location":"about/#project-history","title":"Project History","text":"<p>2024: Initial course development 2025: Public release with comprehensive website Ongoing: Community contributions and updates</p>"},{"location":"about/#acknowledgments","title":"Acknowledgments","text":"<p>This course builds on the work of many contributors to:</p> <ul> <li>Open-source Python scientific stack (NumPy, SciPy, Pandas, etc.)</li> <li>QuantEcon project and lectures</li> <li>Economics research community</li> <li>Open-source education movement</li> </ul> <p>Special thanks to: - All contributors and issue reporters - Students who provided feedback - The broader Python and economics communities</p>"},{"location":"about/#course-statistics","title":"Course Statistics","text":""},{"location":"about/#content","title":"Content","text":"<ul> <li>116 Jupyter notebooks</li> <li>10 comprehensive modules</li> <li>300+ hours of material</li> <li>50+ datasets included</li> </ul>"},{"location":"about/#code","title":"Code","text":"<ul> <li>~50,000 lines of Python code</li> <li>100+ diagrams and visualizations</li> <li>1,000+ code examples</li> <li>Fully tested and validated</li> </ul>"},{"location":"about/#reach","title":"Reach","text":"<ul> <li>Open source and free forever</li> <li>Global audience across 6 continents</li> <li>Multiple languages (contributions welcome)</li> <li>Growing community of learners</li> </ul>"},{"location":"about/#funding-support","title":"Funding &amp; Support","text":"<p>This course is:</p> <ul> <li>\u2705 Completely free to use</li> <li>\u2705 Open source (MIT/CC BY 4.0)</li> <li>\u2705 Ad-free and always will be</li> <li>\u2705 Community-supported</li> </ul> <p>No paywalls. No subscriptions. No tracking.</p> <p>If you find this course valuable:</p> <ul> <li>\u2b50 Star the GitHub repository</li> <li>\ud83d\udce2 Share with colleagues and students</li> <li>\ud83d\udc1b Report issues and suggest improvements</li> <li>\ud83e\udd1d Contribute improvements</li> </ul>"},{"location":"about/#legal","title":"Legal","text":""},{"location":"about/#license","title":"License","text":"<ul> <li>Code: MIT License - Use freely in your projects</li> <li>Content: CC BY 4.0 - Share with attribution</li> </ul>"},{"location":"about/#privacy","title":"Privacy","text":"<p>This course: - Doesn't collect personal data - Doesn't use cookies (beyond necessary GitHub Pages) - Doesn't track users - Respects your privacy</p>"},{"location":"about/#academic-integrity","title":"Academic Integrity","text":"<p>If using this course for teaching or research:</p> <ul> <li>\u2705 Attribution is required (CC BY 4.0)</li> <li>\u2705 Sharing and remixing encouraged</li> <li>\u2705 Commercial use allowed</li> <li>\u2705 Must cite properly</li> </ul> <p>See Citation Guide for details.</p>"},{"location":"about/#future-plans","title":"Future Plans","text":""},{"location":"about/#planned-additions","title":"Planned Additions","text":"<ul> <li> Video lectures for key topics</li> <li> Interactive visualizations</li> <li> Additional practice problems</li> <li> More real-world case studies</li> <li> Translations to other languages</li> </ul>"},{"location":"about/#community-wishlist","title":"Community Wishlist","text":"<p>Submit feature requests via GitHub Issues.</p>"},{"location":"about/#contact","title":"Contact","text":"<p>Have questions, suggestions, or just want to say hi?</p> <p> Get in Touch  GitHub</p>"},{"location":"about/citation/","title":"How to Cite","text":"<p>If you use this course in your research, teaching, or projects, please cite it appropriately.</p>"},{"location":"about/citation/#bibtex-citation","title":"BibTeX Citation","text":"<p>For LaTeX/BibTeX users:</p> <pre><code>@misc{farnamtaheri2025compecon,\n  author       = {Farnam Taheri, Amirreza},\n  title        = {Computational Economics and Data Science:\n                  A Comprehensive Graduate-Level Course},\n  year         = {2025},\n  publisher    = {GitHub},\n  journal      = {GitHub repository},\n  howpublished = {\\url{https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science}},\n  url          = {https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science},\n  note         = {Licensed under MIT (code) and CC BY 4.0 (content)}\n}\n</code></pre>"},{"location":"about/citation/#apa-style-7th-edition","title":"APA Style (7<sup>th</sup> Edition)","text":"<pre><code>Farnam Taheri, A. (2025). Computational economics and data science:\nA comprehensive graduate-level course [Course materials]. GitHub.\nhttps://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"about/citation/#mla-style-9th-edition","title":"MLA Style (9<sup>th</sup> Edition)","text":"<pre><code>Farnam Taheri, Amirreza. \"Computational Economics and Data Science:\nA Comprehensive Graduate-Level Course.\" GitHub, 2025,\ngithub.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.\n</code></pre>"},{"location":"about/citation/#chicago-style-17th-edition","title":"Chicago Style (17<sup>th</sup> Edition)","text":"<p>Author-Date: <pre><code>Farnam Taheri, Amirreza. 2025. \"Computational Economics and Data Science:\nA Comprehensive Graduate-Level Course.\" GitHub.\nhttps://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.\n</code></pre></p> <p>Notes and Bibliography: <pre><code>Farnam Taheri, Amirreza. \"Computational Economics and Data Science:\nA Comprehensive Graduate-Level Course.\" GitHub, 2025.\nhttps://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.\n</code></pre></p>"},{"location":"about/citation/#plain-text","title":"Plain Text","text":"<pre><code>Farnam Taheri, A. (2025). Computational Economics and Data Science.\nAvailable at: https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"about/citation/#citing-specific-modules","title":"Citing Specific Modules","text":"<p>If you're using or referencing a specific module:</p> <pre><code>@misc{farnamtaheri2025compecon-module3,\n  author       = {Farnam Taheri, Amirreza},\n  title        = {Module 3: Economic Modeling},\n  year         = {2025},\n  howpublished = {Part of Computational Economics and Data Science course},\n  url          = {https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science},\n  note         = {Module 3 of 10}\n}\n</code></pre> <p>In-text (APA): <pre><code>... as demonstrated in Module 3: Economic Modeling (Farnam Taheri, 2025)...\n</code></pre></p>"},{"location":"about/citation/#citing-specific-notebooks","title":"Citing Specific Notebooks","text":"<p>For referencing a particular notebook:</p> <pre><code>@misc{farnamtaheri2025compecon-dynprog,\n  author       = {Farnam Taheri, Amirreza},\n  title        = {Dynamic Programming},\n  year         = {2025},\n  howpublished = {Notebook 01 in Module 3: Economic Modeling,\n                  Computational Economics and Data Science course},\n  url          = {https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science/blob/main/03-Economic-Modeling/01_Dynamic_Programming.ipynb}\n}\n</code></pre>"},{"location":"about/citation/#attribution-in-teaching-materials","title":"Attribution in Teaching Materials","text":"<p>If you're using this course in your teaching:</p>"},{"location":"about/citation/#in-course-syllabus","title":"In Course Syllabus","text":"<pre><code>This course uses materials from:\n\nFarnam Taheri, A. (2025). Computational Economics and Data Science.\nRetrieved from https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\n\nLicensed under MIT (code) and CC BY 4.0 (content).\n</code></pre>"},{"location":"about/citation/#on-slides-or-handouts","title":"On Slides or Handouts","text":"<pre><code>Adapted from Computational Economics and Data Science\nby Amirreza Farnam Taheri (CC BY 4.0)\nhttps://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"about/citation/#in-course-website","title":"In Course Website","text":"<pre><code>&lt;p&gt;Course materials adapted from\n&lt;a href=\"https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\"&gt;\nComputational Economics and Data Science&lt;/a&gt;\nby Amirreza Farnam Taheri, licensed under\n&lt;a href=\"https://creativecommons.org/licenses/by/4.0/\"&gt;CC BY 4.0&lt;/a&gt;.&lt;/p&gt;\n</code></pre>"},{"location":"about/citation/#attribution-in-research","title":"Attribution in Research","text":""},{"location":"about/citation/#in-academic-papers","title":"In Academic Papers","text":"<p>If you used methods or code from this course:</p> <p>Acknowledgments Section: <pre><code>The author acknowledges the use of course materials from\n\"Computational Economics and Data Science\" by Amirreza Farnam Taheri\n(https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science).\n</code></pre></p> <p>In Methods Section: <pre><code>We implement the algorithm following Farnam Taheri (2025),\nwith modifications for our specific application.\n</code></pre></p> <p>If You Modified the Code: <pre><code>Our implementation builds upon code from Farnam Taheri (2025),\nwith extensions to handle [specific case]. The original code is\navailable under the MIT License.\n</code></pre></p>"},{"location":"about/citation/#doi-citation-future","title":"DOI Citation (Future)","text":"<p>We're working on registering a DOI for persistent citation. Check back for updates!</p>"},{"location":"about/citation/#license-information","title":"License Information","text":"<p>When citing, please note the dual license:</p> <ul> <li>Code (Python scripts, notebooks): MIT License</li> <li>Free to use, modify, and distribute</li> <li> <p>No warranty</p> </li> <li> <p>Educational Content (text, explanations, diagrams): CC BY 4.0</p> </li> <li>Share and adapt with attribution</li> <li>Commercial use allowed</li> <li>Modifications allowed</li> </ul> <p>Both licenses require attribution.</p>"},{"location":"about/citation/#examples-of-proper-attribution","title":"Examples of Proper Attribution","text":""},{"location":"about/citation/#correct-attribution","title":"\u2705 Correct Attribution","text":"<pre><code>\"\"\"\nThis code implements value function iteration for solving\ndynamic programming problems.\n\nBased on: Farnam Taheri, A. (2025). Computational Economics\nand Data Science. https://github.com/AmirrezaFarnamTaheri/\nComputational-Economics-and-Data-Science\nLicensed under MIT.\n\"\"\"\n\ndef value_iteration(V_init, params, tol=1e-6):\n    # Implementation...\n    pass\n</code></pre>"},{"location":"about/citation/#also-correct","title":"\u2705 Also Correct","text":"<p>In a Jupyter notebook: <pre><code>## Value Function Iteration\n\nThis notebook implements the value function iteration algorithm.\n\n**Source:** Adapted from Module 3 of [Computational Economics and\nData Science](https://github.com/AmirrezaFarnamTaheri/\nComputational-Economics-and-Data-Science) by Amirreza Farnam Taheri,\nlicensed under CC BY 4.0.\n</code></pre></p>"},{"location":"about/citation/#insufficient-attribution","title":"\u274c Insufficient Attribution","text":"<pre><code># From an online course\ndef value_iteration(V_init, params):\n    pass\n</code></pre> <p>Why insufficient: No specific source, no author, no license information.</p>"},{"location":"about/citation/#for-presentations-talks","title":"For Presentations &amp; Talks","text":""},{"location":"about/citation/#slide-footer","title":"Slide Footer","text":"<pre><code>Source: Computational Economics and Data Science |\nFarnam Taheri (2025) | CC BY 4.0\n</code></pre>"},{"location":"about/citation/#title-slide","title":"Title Slide","text":"<pre><code>Based on materials from:\nComputational Economics and Data Science\nAmirreza Farnam Taheri\ngithub.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"about/citation/#for-blog-posts-articles","title":"For Blog Posts &amp; Articles","text":"<pre><code>I recently worked through the excellent [Computational Economics\nand Data Science](https://github.com/AmirrezaFarnamTaheri/\nComputational-Economics-and-Data-Science) course by Amirreza\nFarnam Taheri. Here's what I learned...\n\nThe course is freely available under MIT and CC BY 4.0 licenses.\n</code></pre>"},{"location":"about/citation/#citation-export","title":"Citation Export","text":""},{"location":"about/citation/#ris-format-for-reference-managers","title":"RIS Format (for Reference Managers)","text":"<pre><code>TY  - COMP\nAU  - Farnam Taheri, Amirreza\nTI  - Computational Economics and Data Science: A Comprehensive Graduate-Level Course\nPY  - 2025\nUR  - https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\nPB  - GitHub\nER  -\n</code></pre>"},{"location":"about/citation/#endnote","title":"EndNote","text":"<pre><code>%0 Computer Program\n%A Farnam Taheri, Amirreza\n%T Computational Economics and Data Science: A Comprehensive Graduate-Level Course\n%D 2025\n%U https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science\n%I GitHub\n</code></pre>"},{"location":"about/citation/#questions-about-citation","title":"Questions About Citation?","text":"<ul> <li>Legal questions: See License</li> <li>Usage questions: See FAQ</li> <li>Other questions: Contact us</li> </ul>"},{"location":"about/citation/#thank-you","title":"Thank You!","text":"<p>Proper attribution helps: - Give credit where due - Track course impact - Encourage open-source education - Build the community</p> <p>Your citations help demonstrate the value of open educational resources!</p> <p> View License  Contact  Home</p>"},{"location":"about/contact/","title":"Contact","text":"<p>Get in touch with questions, feedback, or collaboration opportunities.</p>"},{"location":"about/contact/#quick-links","title":"Quick Links","text":"<p>For common inquiries, these resources may help:</p> <ul> <li>\ud83d\udcda Frequently Asked Questions</li> <li>\ud83d\udcac GitHub Discussions</li> <li>\ud83d\udc1b Report Issues</li> <li>\ud83e\udd1d Contributing Guide</li> </ul>"},{"location":"about/contact/#github-preferred","title":"GitHub (Preferred)","text":"<p>For course-related questions and issues, please use GitHub:</p>"},{"location":"about/contact/#for-questions-discussions","title":"For Questions &amp; Discussions","text":"<p> GitHub Discussions</p> <p>Use for: - General questions about course content - Implementation questions - Sharing your projects - Feature suggestions - Course discussions</p>"},{"location":"about/contact/#for-bug-reports","title":"For Bug Reports","text":"<p> GitHub Issues</p> <p>Use for: - Errors in code or notebooks - Broken links or images - Installation problems - Documentation issues</p> <p>When reporting issues, please include: - Notebook name and cell number (if applicable) - Your operating system and Python version - Full error message - Steps to reproduce the problem</p>"},{"location":"about/contact/#social-media","title":"Social Media","text":"<p>Connect with the author:</p> <ul> <li> GitHub - Code and projects</li> <li> LinkedIn - Professional network</li> </ul>"},{"location":"about/contact/#email","title":"Email","text":"<p>For private inquiries, you can reach out directly.</p> <p>Response Time</p> <p>Please allow 3-5 business days for email responses. For faster answers, try GitHub Discussions first.</p> <p>Email: Available via GitHub profile</p> <p>Best for: - Collaboration opportunities - Media inquiries - Private concerns - Institutional partnerships</p> <p>Not for: - Course questions (use GitHub Discussions) - Bug reports (use GitHub Issues) - Homework help (we can't do your assignments!)</p>"},{"location":"about/contact/#contributing","title":"Contributing","text":"<p>Want to improve the course?</p> <p> Contribution Guide</p> <p>Ways to contribute: - Fix typos or errors - Improve explanations - Add examples - Create translations - Suggest new topics</p>"},{"location":"about/contact/#office-hours","title":"Office Hours","text":"<p>Currently, there are no regular office hours. However:</p> <ul> <li>Active monitoring of GitHub Discussions</li> <li>Regular responses to GitHub Issues</li> <li>Community members often help each other</li> </ul>"},{"location":"about/contact/#institutional-use","title":"Institutional Use","text":"<p>Using this course for teaching or research?</p> <p>We'd love to hear from you!</p> <p>Please let us know: - Your institution - How you're using the course - Number of students - Any adaptations you've made</p> <p>This helps us: - Track impact - Improve content - Connect instructors - Build community</p>"},{"location":"about/contact/#media-press","title":"Media &amp; Press","text":"<p>For media inquiries:</p> <ul> <li>Course usage statistics available on request</li> <li>High-resolution images and logos: Available in repo</li> <li>Author interviews: Contact via email</li> <li>Course reviews and features: Always welcome</li> </ul>"},{"location":"about/contact/#support-the-project","title":"Support the Project","text":"<p>While the course is free and always will be, you can support it by:</p> <ul> <li>\u2b50 Starring the GitHub repository</li> <li>\ud83d\udd04 Sharing with colleagues and students</li> <li>\ud83d\udcdd Contributing improvements</li> <li>\ud83d\udcac Participating in discussions</li> <li>\ud83d\udce3 Spreading the word on social media</li> </ul>"},{"location":"about/contact/#academic-collaboration","title":"Academic Collaboration","text":"<p>Interested in:</p> <ul> <li>Joint research projects</li> <li>Course development collaboration</li> <li>Institutional partnerships</li> <li>Guest lectures or workshops</li> </ul> <p>Contact via email or LinkedIn.</p>"},{"location":"about/contact/#feedback","title":"Feedback","text":"<p>Your feedback helps improve the course for everyone.</p> <p>Share your experience: - What worked well? - What could be improved? - What topics would you like to see added? - How are you using the course?</p> <p>Leave feedback via: - GitHub Discussions (public) - GitHub Issues (for specific problems) - Email (private)</p>"},{"location":"about/contact/#stay-updated","title":"Stay Updated","text":"<p>Follow development: - Watch the GitHub repository for updates - Check the Changelog for new releases - Join discussions to hear about new features</p> <p>Thank You</p> <p>Thank you for your interest in Computational Economics and Data Science. Whether you're a student, instructor, or researcher, we're excited to have you as part of our community!</p> <p> Back to Home</p>"},{"location":"about/contributing/","title":"Contributing","text":"<p>Thank you for your interest in contributing to Computational Economics and Data Science! This guide will help you get started.</p>"},{"location":"about/contributing/#ways-to-contribute","title":"Ways to Contribute","text":"<p>You don't need to be an expert to contribute! Here are many ways to help:</p>"},{"location":"about/contributing/#report-bugs","title":"\ud83d\udc1b Report Bugs","text":"<p>Found an error? Help us fix it!</p> <ul> <li>Check if it's already reported in GitHub Issues</li> <li>If not, open a new issue</li> <li>Include: notebook name, cell number, error message, your setup</li> </ul>"},{"location":"about/contributing/#improve-documentation","title":"\ud83d\udcdd Improve Documentation","text":"<ul> <li>Fix typos and grammar</li> <li>Clarify confusing explanations</li> <li>Add missing docstrings</li> <li>Improve code comments</li> </ul>"},{"location":"about/contributing/#suggest-enhancements","title":"\ud83d\udca1 Suggest Enhancements","text":"<ul> <li>New topics or modules</li> <li>Additional examples</li> <li>Better visualizations</li> <li>Improved exercises</li> </ul>"},{"location":"about/contributing/#fix-issues","title":"\ud83d\udd27 Fix Issues","text":"<ul> <li>Browse open issues</li> <li>Look for issues labeled <code>good first issue</code> or <code>help wanted</code></li> <li>Comment on an issue you'd like to work on</li> </ul>"},{"location":"about/contributing/#add-features","title":"\u2728 Add Features","text":"<ul> <li>New notebook content</li> <li>Additional datasets</li> <li>Utility functions</li> <li>Interactive visualizations</li> </ul>"},{"location":"about/contributing/#getting-started","title":"Getting Started","text":""},{"location":"about/contributing/#1-fork-the-repository","title":"1. Fork the Repository","text":"<p>Click the \"Fork\" button on GitHub.</p>"},{"location":"about/contributing/#2-clone-your-fork","title":"2. Clone Your Fork","text":"<pre><code>git clone https://github.com/YOUR-USERNAME/Computational-Economics-and-Data-Science.git\ncd Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"about/contributing/#3-set-up-development-environment","title":"3. Set Up Development Environment","text":"<pre><code># Create conda environment\nconda env create -f environment.yml\nconda activate computational-econ\n\n# Add upstream remote\ngit remote add upstream https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.git\n</code></pre>"},{"location":"about/contributing/#4-create-a-branch","title":"4. Create a Branch","text":"<pre><code>git checkout -b feature/your-feature-name\n# or\ngit checkout -b fix/your-bug-fix\n</code></pre> <p>Branch naming: - <code>feature/</code> for new features - <code>fix/</code> for bug fixes - <code>docs/</code> for documentation - <code>refactor/</code> for code refactoring</p>"},{"location":"about/contributing/#making-changes","title":"Making Changes","text":""},{"location":"about/contributing/#code-style","title":"Code Style","text":"<p>Follow the project's Code Style Guide:</p> <p>Python: - PEP 8 style - NumPy-style docstrings - Type hints where appropriate - Meaningful variable names</p> <p>Notebooks: - Clear markdown explanations - One concept per cell - Output visible (run all cells) - Kernel restarted before committing</p> <p>Example:</p> <pre><code>def calculate_present_value(future_value: float, rate: float, periods: int) -&gt; float:\n    \"\"\"\n    Calculate present value using the discount formula.\n\n    Parameters\n    ----------\n    future_value : float\n        Future cash flow value\n    rate : float\n        Discount rate (annual)\n    periods : int\n        Number of periods\n\n    Returns\n    -------\n    float\n        Present value\n\n    Examples\n    --------\n    &gt;&gt;&gt; calculate_present_value(110, 0.10, 1)\n    100.0\n    ```\n\n### Testing\n\nRun existing tests before submitting:\n\n```bash\n# Run Python tests\npytest\n\n# Validate notebooks\npython scripts/validate_notebooks.py\n\n# Check code style\nflake8 scripts/\n</code></pre>"},{"location":"about/contributing/#commit-messages","title":"Commit Messages","text":"<p>Write clear, descriptive commit messages:</p> <p>Good: <pre><code>Fix: Correct discount factor formula in Module 3\n\nThe formula in cell 15 was using addition instead of multiplication.\nAlso updated the docstring to clarify the discount_factor parameter.\n\nFixes #123\n</code></pre></p> <p>Bad: <pre><code>fixed stuff\n</code></pre></p> <p>Format: <pre><code>&lt;type&gt;: &lt;short summary&gt;\n\n&lt;detailed description&gt;\n\n&lt;issue reference&gt;\n</code></pre></p> <p>Types: - <code>Fix:</code> Bug fixes - <code>Feat:</code> New features - <code>Docs:</code> Documentation changes - <code>Style:</code> Code style improvements - <code>Refactor:</code> Code refactoring - <code>Test:</code> Test additions/changes - <code>Chore:</code> Maintenance tasks</p>"},{"location":"about/contributing/#submitting-changes","title":"Submitting Changes","text":""},{"location":"about/contributing/#1-push-to-your-fork","title":"1. Push to Your Fork","text":"<pre><code>git add .\ngit commit -m \"Fix: your change description\"\ngit push origin feature/your-feature-name\n</code></pre>"},{"location":"about/contributing/#2-create-pull-request","title":"2. Create Pull Request","text":"<ol> <li>Go to your fork on GitHub</li> <li>Click \"New Pull Request\"</li> <li>Select your branch</li> <li>Fill out the template:</li> <li>Description: What does this PR do?</li> <li>Motivation: Why is this change needed?</li> <li>Testing: How did you test it?</li> <li>Screenshots: If applicable</li> </ol>"},{"location":"about/contributing/#3-wait-for-review","title":"3. Wait for Review","text":"<ul> <li>Maintainers will review your PR</li> <li>Address any requested changes</li> <li>Once approved, it will be merged!</li> </ul>"},{"location":"about/contributing/#contribution-guidelines","title":"Contribution Guidelines","text":""},{"location":"about/contributing/#what-were-looking-for","title":"What We're Looking For","text":"<p>\u2705 We love: - Bug fixes - Improved explanations - Additional examples - Better visualizations - Test additions - Documentation improvements</p> <p>\u26a0\ufe0f Please discuss first: - Major new features - New modules or topics - Significant restructuring - Breaking changes</p> <p>\u274c Please don't: - Add unnecessary dependencies - Change code style without discussion - Submit AI-generated content without review - Remove working features without reason</p>"},{"location":"about/contributing/#quality-standards","title":"Quality Standards","text":"<p>All contributions should:</p> <ul> <li>Work correctly - Test your changes</li> <li>Follow style guide - Consistent with existing code</li> <li>Include documentation - Explain what and why</li> <li>Be self-contained - Don't break other features</li> <li>Add value - Improve the course meaningfully</li> </ul>"},{"location":"about/contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"about/contributing/#documentation-improvements","title":"Documentation Improvements","text":"<p>Examples: - Fix typos - Clarify confusing sections - Add missing explanations - Improve formatting</p> <p>How to contribute: 1. Edit markdown or notebook cells 2. Ensure clarity and correctness 3. Preview changes locally 4. Submit PR</p>"},{"location":"about/contributing/#code-improvements","title":"Code Improvements","text":"<p>Examples: - Fix bugs - Optimize performance - Add error handling - Improve readability</p> <p>How to contribute: 1. Identify issue 2. Write fix 3. Test thoroughly 4. Add tests if applicable 5. Submit PR</p>"},{"location":"about/contributing/#new-content","title":"New Content","text":"<p>Examples: - Additional exercises - New examples - Extended explanations - New datasets</p> <p>How to contribute: 1. Discuss in issue first 2. Follow existing structure 3. Ensure high quality 4. Include documentation 5. Submit PR</p>"},{"location":"about/contributing/#translations","title":"Translations","text":"<p>Interested in translating?</p> <ol> <li>Open an issue to discuss</li> <li>Follow translation guidelines</li> <li>Maintain technical accuracy</li> <li>Keep formatting consistent</li> </ol>"},{"location":"about/contributing/#development-workflow","title":"Development Workflow","text":""},{"location":"about/contributing/#daily-development","title":"Daily Development","text":"<pre><code># Start of day: Get latest changes\ngit checkout main\ngit pull upstream main\n\n# Create feature branch\ngit checkout -b feature/my-feature\n\n# Make changes...\n# ... edit files ...\n\n# Test changes\npytest\npython scripts/validate_notebooks.py\n\n# Commit\ngit add .\ngit commit -m \"Feat: add new feature\"\n\n# Push to your fork\ngit push origin feature/my-feature\n</code></pre>"},{"location":"about/contributing/#before-submitting-pr","title":"Before Submitting PR","text":"<pre><code># Update from upstream\ngit fetch upstream\ngit rebase upstream/main\n\n# Run all checks\npytest\nflake8\npython scripts/validate_notebooks.py\n\n# Push\ngit push origin feature/my-feature --force-with-lease\n</code></pre>"},{"location":"about/contributing/#code-review-process","title":"Code Review Process","text":""},{"location":"about/contributing/#what-reviewers-look-for","title":"What Reviewers Look For","text":"<ol> <li>Correctness - Does it work?</li> <li>Quality - Is it well-written?</li> <li>Style - Does it match project standards?</li> <li>Documentation - Is it explained?</li> <li>Tests - Is it tested?</li> <li>Impact - Does it improve the course?</li> </ol>"},{"location":"about/contributing/#addressing-feedback","title":"Addressing Feedback","text":"<ul> <li>Be open to suggestions</li> <li>Ask questions if unclear</li> <li>Make requested changes promptly</li> <li>Don't take it personally - we're all learning!</li> </ul>"},{"location":"about/contributing/#approval-process","title":"Approval Process","text":"<ol> <li>Automated checks must pass</li> <li>At least one review from maintainer</li> <li>All discussions resolved</li> <li>Squash and merge to main branch</li> </ol>"},{"location":"about/contributing/#community-guidelines","title":"Community Guidelines","text":""},{"location":"about/contributing/#be-respectful","title":"Be Respectful","text":"<ul> <li>Use welcoming and inclusive language</li> <li>Respect differing viewpoints</li> <li>Accept constructive criticism gracefully</li> <li>Focus on what's best for the community</li> </ul>"},{"location":"about/contributing/#be-professional","title":"Be Professional","text":"<ul> <li>Provide constructive feedback</li> <li>Help newcomers</li> <li>Give credit where due</li> <li>Follow code of conduct</li> </ul>"},{"location":"about/contributing/#be-patient","title":"Be Patient","text":"<ul> <li>Reviewers are volunteers</li> <li>Response may take a few days</li> <li>Be understanding of timelines</li> <li>Follow up politely if needed</li> </ul>"},{"location":"about/contributing/#recognition","title":"Recognition","text":""},{"location":"about/contributing/#contributors","title":"Contributors","text":"<p>All contributors are recognized in: - GitHub contributors page - Release notes - Project documentation</p>"},{"location":"about/contributing/#major-contributors","title":"Major Contributors","text":"<p>Significant contributors may be: - Listed in README - Invited as collaborators - Consulted on major decisions</p>"},{"location":"about/contributing/#getting-help","title":"Getting Help","text":""},{"location":"about/contributing/#questions-about-contributing","title":"Questions About Contributing?","text":"<ul> <li>General questions: GitHub Discussions</li> <li>Specific issues: Comment on the issue</li> <li>Private concerns: Contact us</li> </ul>"},{"location":"about/contributing/#resources","title":"Resources","text":"<ul> <li>Code Style Guide</li> <li>GitHub Flow Guide</li> <li>How to Write Good Commit Messages</li> </ul>"},{"location":"about/contributing/#thank-you","title":"Thank You!","text":"<p>Every contribution, no matter how small, makes this course better for everyone. Thank you for being part of our community!</p> <p> View on GitHub  Report Issue  Join Discussion</p>"},{"location":"about/license/","title":"License","text":"<p>This course material is dual-licensed to accommodate both code reuse and educational purposes.</p>"},{"location":"about/license/#code-license-mit","title":"Code License: MIT","text":"<p>All Python code, scripts, and software implementations are licensed under the MIT License.</p>"},{"location":"about/license/#mit-license-text","title":"MIT License Text","text":"<pre><code>MIT License\n\nCopyright (c) 2024-2025 Amirreza Farnam Taheri\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"about/license/#what-this-means","title":"What This Means","text":"<ul> <li>\u2713 Use the code in your own projects (commercial or non-commercial)</li> <li>\u2713 Modify and distribute the code</li> <li>\u2713 Include the code in your research</li> <li>\u2713 No warranty or liability</li> </ul>"},{"location":"about/license/#educational-content-license-cc-by-40","title":"Educational Content License: CC BY 4.0","text":"<p>All educational content, including: - Jupyter notebooks - Documentation - Explanatory text - Diagrams and figures (except where noted)</p> <p>...is licensed under the Creative Commons Attribution 4.0 International License.</p> <p></p>"},{"location":"about/license/#what-this-means_1","title":"What This Means","text":"<p>You are free to:</p> <ul> <li>Share \u2014 copy and redistribute the material in any medium or format</li> <li>Adapt \u2014 remix, transform, and build upon the material for any purpose, even commercially</li> </ul> <p>Under the following terms:</p> <ul> <li>Attribution \u2014 You must give appropriate credit, provide a link to the license, and indicate if changes were made</li> </ul>"},{"location":"about/license/#how-to-attribute","title":"How to Attribute","text":"<p>When using this material, please include:</p> <pre><code>This work is based on \"Computational Economics and Data Science\" by Amirreza Farnam Taheri\n(https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science),\nlicensed under CC BY 4.0.\n</code></pre> <p>Or in BibTeX:</p> <pre><code>@misc{farnamtaheri2025compecon,\n  author = {Farnam Taheri, Amirreza},\n  title = {Computational Economics and Data Science},\n  year = {2025},\n  publisher = {GitHub},\n  url = {https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science},\n  note = {Licensed under CC BY 4.0}\n}\n</code></pre>"},{"location":"about/license/#third-party-content","title":"Third-Party Content","text":"<p>Some images and datasets used in this course are from third-party sources and are governed by their respective licenses. See <code>docs/IMAGE_CATALOG.md</code> for detailed attribution.</p>"},{"location":"about/license/#questions","title":"Questions?","text":"<p>If you have questions about licensing or would like to use this material in a way not covered by the licenses, please contact the author.</p>"},{"location":"appendices/","title":"Appendices","text":"<p>Mathematical foundations and supplementary materials.</p>"},{"location":"appendices/#mathematical-reviews","title":"Mathematical Reviews","text":"<ul> <li>A1: Real Analysis - Metric spaces, continuity, compactness</li> <li>A2: Multivariate Calculus - Gradients, Jacobians, optimization</li> <li>A3: Probability Theory - Probability spaces, random variables, distributions</li> <li>A4: Linear Algebra - Vectors, matrices, eigenvalues</li> </ul>"},{"location":"appendices/#replication-publishing","title":"Replication &amp; Publishing","text":"<ul> <li>Replication Exercise: Chetty (2014) - Reproducing empirical research</li> <li>Publishing with Quarto - Creating reproducible research documents</li> <li>Autograding with Otter - Automated assessment tools</li> </ul> <p> Back to Home</p>"},{"location":"appendices/autograding/","title":"Autograding with Otter-Grader","text":"<p>Learn to create auto-graded assignments for computational economics courses.</p>"},{"location":"appendices/autograding/#overview","title":"Overview","text":"<p>This appendix teaches you how to use Otter-Grader, an open-source autograding tool for Jupyter notebooks, to create and grade programming assignments. This is invaluable for instructors teaching computational economics and students wanting to self-assess their understanding.</p> <p>Notebook: <code>Appendix/02_Autograding_with_Otter.ipynb</code></p>"},{"location":"appendices/autograding/#what-is-otter-grader","title":"What is Otter-Grader?","text":"<p>Otter-Grader is an autograding tool developed at UC Berkeley for Jupyter notebook assignments. It enables:</p> <ul> <li>Automated Testing: Check student code against test cases</li> <li>Instant Feedback: Students see test results immediately</li> <li>Gradescope Integration: Upload to Gradescope for grading</li> <li>Local Grading: Command-line grading without cloud services</li> <li>Partial Credit: Flexible scoring for complex problems</li> <li>Hidden Tests: Prevent hardcoding solutions</li> </ul>"},{"location":"appendices/autograding/#why-use-autograding-in-economics","title":"Why Use Autograding in Economics?","text":"<ol> <li>Scalability: Grade hundreds of submissions automatically</li> <li>Consistency: Same standards applied to all students</li> <li>Instant Feedback: Students learn from mistakes immediately</li> <li>Time Savings: Instructors focus on conceptual help, not syntax errors</li> <li>Academic Integrity: Harder to share solutions (hidden tests)</li> </ol>"},{"location":"appendices/autograding/#installation","title":"Installation","text":"<pre><code># Install Otter-Grader\npip install otter-grader\n\n# Verify installation\notter --version\n\n# Optional: Gradescope integration\npip install otter-grader[gradescope]\n</code></pre>"},{"location":"appendices/autograding/#workflow-overview","title":"Workflow Overview","text":""},{"location":"appendices/autograding/#instructor-workflow","title":"Instructor Workflow","text":"<ol> <li>Create Master Notebook: Write problems with solutions</li> <li>Add Tests: Write test cases for each question</li> <li>Generate Assignment: Use Otter to create student version</li> <li>Distribute: Share student notebook (tests included)</li> <li>Collect Submissions: Via LMS or file upload</li> <li>Grade: Run Otter on submissions</li> <li>Return: Share results with students</li> </ol>"},{"location":"appendices/autograding/#student-workflow","title":"Student Workflow","text":"<ol> <li>Receive Assignment: Download notebook</li> <li>Complete Problems: Write code in designated cells</li> <li>Run Tests: Execute test cells to check work</li> <li>Submit: Upload completed notebook</li> <li>Receive Feedback: View autograder results</li> </ol>"},{"location":"appendices/autograding/#creating-assignments","title":"Creating Assignments","text":""},{"location":"appendices/autograding/#basic-structure","title":"Basic Structure","text":"<pre><code># Master notebook: assignment.ipynb\n\n## Question 1: OLS Estimation\n\nImplement ordinary least squares regression.\n\n# BEGIN SOLUTION\nimport numpy as np\n\ndef ols(X, y):\n    \"\"\"\n    Compute OLS estimator.\n\n    Parameters\n    ----------\n    X : np.ndarray\n        Design matrix (n x k)\n    y : np.ndarray\n        Dependent variable (n x 1)\n\n    Returns\n    -------\n    beta_hat : np.ndarray\n        OLS estimates (k x 1)\n    \"\"\"\n    return np.linalg.inv(X.T @ X) @ X.T @ y\n# END SOLUTION\n\n# BEGIN TESTS\nimport numpy as np\nfrom numpy.testing import assert_array_almost_equal\n\n# Test 1: Simple case\nX_test = np.array([[1, 1], [1, 2], [1, 3]])\ny_test = np.array([[1], [2], [3]])\nbeta_expected = np.array([[0], [1]])\nassert_array_almost_equal(ols(X_test, y_test), beta_expected, decimal=6)\n\n# Test 2: Different data\nX_test2 = np.array([[1, 2], [1, 4], [1, 6]])\ny_test2 = np.array([[3], [5], [7]])\nbeta_expected2 = np.array([[1], [1]])\nassert_array_almost_equal(ols(X_test2, y_test2), beta_expected2, decimal=6)\n# END TESTS\n</code></pre>"},{"location":"appendices/autograding/#generate-student-version","title":"Generate Student Version","text":"<pre><code># Generate student notebook (removes solutions)\notter assign assignment.ipynb output_dir/\n\n# This creates:\n# - autograder.zip (for Gradescope)\n# - student/ (student notebooks)\n# - .otter (grading config)\n</code></pre> <p>The student version will have:</p> <pre><code>## Question 1: OLS Estimation\n\nImplement ordinary least squares regression.\n\ndef ols(X, y):\n    \"\"\"\n    Compute OLS estimator.\n\n    Parameters\n    ----------\n    X : np.ndarray\n        Design matrix (n x k)\n    y : np.ndarray\n        Dependent variable (n x 1)\n\n    Returns\n    -------\n    beta_hat : np.ndarray\n        OLS estimates (k x 1)\n    \"\"\"\n    # YOUR CODE HERE\n    raise NotImplementedError()\n</code></pre>"},{"location":"appendices/autograding/#test-design","title":"Test Design","text":""},{"location":"appendices/autograding/#test-cell-format","title":"Test Cell Format","text":"<pre><code># HIDDEN\n# This test is hidden from students\nimport numpy as np\nfrom numpy.testing import assert_allclose\n\nX = np.random.randn(100, 5)\nbeta_true = np.array([1, 2, 3, 4, 5])\ny = X @ beta_true + np.random.randn(100) * 0.1\n\nbeta_hat = ols(X, y)\nassert_allclose(beta_hat, beta_true, atol=0.5)\n</code></pre> <p>Test types:</p> <ul> <li>Public Tests: Visible to students (basic checks)</li> <li>Hidden Tests: Run during grading only (prevent hardcoding)</li> <li>Edge Cases: Empty arrays, singular matrices, etc.</li> </ul>"},{"location":"appendices/autograding/#best-practices","title":"Best Practices","text":"<ol> <li>Test Incrementally: Start with simple cases, then complex</li> <li>Use Multiple Tests: Different data, edge cases</li> <li>Informative Errors: Help students debug</li> <li>Hidden Tests: At least 50% should be hidden</li> <li>Partial Credit: Use <code>@points()</code> decorator</li> </ol>"},{"location":"appendices/autograding/#otter-configuration","title":"Otter Configuration","text":"<p>Create <code>.otter</code> file:</p> <pre><code>name: \"Computational Economics Problem Set 1\"\nsolutions_pdf: false\nexport_cell: true\nseed: 42\ngenerate: true\nsave_environment: false\nvariables:\n  tolerance: 0.01\n\ntests:\n  q1:\n    name: \"OLS Estimation\"\n    points: 10\n  q2:\n    name: \"GMM Estimation\"\n    points: 15\n  q3:\n    name: \"Bootstrap Inference\"\n    points: 20\n</code></pre>"},{"location":"appendices/autograding/#advanced-features","title":"Advanced Features","text":""},{"location":"appendices/autograding/#partial-credit","title":"Partial Credit","text":"<pre><code># BEGIN SOLUTION\ndef gmm_estimation(X, y, W):\n    \"\"\"GMM estimator implementation\"\"\"\n    # Step 1: Compute moments (5 points)\n    moments = compute_moments(X, y)\n\n    # Step 2: Optimize (5 points)\n    theta_hat = minimize_objective(moments, W)\n\n    return theta_hat\n# END SOLUTION\n\n# BEGIN TESTS\n# @points(5)\n# Test moments computation\nassert moments.shape == (10, 1)\n\n# @points(5)\n# Test optimization\nassert np.linalg.norm(gradient(theta_hat)) &lt; 1e-6\n# END TESTS\n</code></pre>"},{"location":"appendices/autograding/#custom-test-functions","title":"Custom Test Functions","text":"<pre><code># In otter_config.py\ndef check_convergence(result, tol=1e-6):\n    \"\"\"Custom test for convergence\"\"\"\n    return result['converged'] and result['fun'] &lt; tol\n\ndef check_economic_interpretation(beta, X):\n    \"\"\"Check if estimates make economic sense\"\"\"\n    # Marginal effects should be reasonable\n    return all(beta &gt; 0) and all(beta &lt; 100)\n</code></pre>"},{"location":"appendices/autograding/#hidden-tests","title":"Hidden Tests","text":"<pre><code># HIDDEN TEST\n# This test is not visible in student notebook\nimport numpy as np\n\n# Use different random seed\nnp.random.seed(9999)\nX_hidden = np.random.randn(200, 10)\ny_hidden = X_hidden @ np.ones(10) + np.random.randn(200)\n\nbeta_student = ols(X_hidden, y_hidden)\nassert beta_student.shape == (10, 1)\nassert np.allclose(beta_student, np.ones((10, 1)), atol=0.5)\n</code></pre>"},{"location":"appendices/autograding/#grading-submissions","title":"Grading Submissions","text":""},{"location":"appendices/autograding/#local-grading","title":"Local Grading","text":"<pre><code># Grade all submissions in a directory\notter grade -p submissions/ -a autograder.zip -o results/\n\n# Grade single submission\notter grade -p student_submission.ipynb -a autograder.zip\n\n# Export grades to CSV\notter export results/ --csv grades.csv\n</code></pre>"},{"location":"appendices/autograding/#gradescope-integration","title":"Gradescope Integration","text":"<ol> <li>Upload Autograder: Upload <code>autograder.zip</code> to Gradescope</li> <li>Configure: Set language to Python, timeout, etc.</li> <li>Students Submit: Upload <code>.ipynb</code> files</li> <li>Automatic Grading: Gradescope runs tests</li> <li>Manual Grading: Review and adjust as needed</li> </ol>"},{"location":"appendices/autograding/#example-economics-problems","title":"Example Economics Problems","text":""},{"location":"appendices/autograding/#problem-1-optimization","title":"Problem 1: Optimization","text":"<pre><code>## Question: Utility Maximization\n\n# Implement utility maximization subject to budget constraint\n# U(x, y) = x^\u03b1 * y^(1-\u03b1)\n# Subject to: p_x * x + p_y * y = I\n\n# BEGIN SOLUTION\nfrom scipy.optimize import minimize\n\ndef utility_max(alpha, p_x, p_y, I):\n    \"\"\"\n    Find optimal consumption bundle.\n\n    Returns (x*, y*)\n    \"\"\"\n    # Analytical solution (Cobb-Douglas)\n    x_star = alpha * I / p_x\n    y_star = (1 - alpha) * I / p_y\n    return x_star, y_star\n# END SOLUTION\n\n# BEGIN TESTS\nx, y = utility_max(0.5, 2, 3, 100)\nassert abs(x - 25) &lt; 0.01\nassert abs(y - 16.67) &lt; 0.01\n\n# Check budget constraint\nassert abs(2*x + 3*y - 100) &lt; 0.01\n# END TESTS\n</code></pre>"},{"location":"appendices/autograding/#problem-2-dynamic-programming","title":"Problem 2: Dynamic Programming","text":"<pre><code>## Question: Value Function Iteration\n\n# Implement VFI for consumption-savings problem\n\n# BEGIN SOLUTION\ndef value_function_iteration(beta, grid, u, tol=1e-6):\n    \"\"\"\n    Solve consumption-savings problem via VFI.\n\n    Parameters\n    ----------\n    beta : float\n        Discount factor\n    grid : np.ndarray\n        State space grid\n    u : callable\n        Utility function\n\n    Returns\n    -------\n    V : np.ndarray\n        Value function\n    policy : np.ndarray\n        Policy function\n    \"\"\"\n    n = len(grid)\n    V = np.zeros(n)\n    V_new = np.zeros(n)\n    policy = np.zeros(n, dtype=int)\n\n    while True:\n        for i in range(n):\n            candidates = np.array([\n                u(grid[i] - grid[j]) + beta * V[j]\n                for j in range(i+1)  # Feasible choices\n            ])\n            V_new[i] = np.max(candidates)\n            policy[i] = np.argmax(candidates)\n\n        if np.max(np.abs(V_new - V)) &lt; tol:\n            break\n        V = V_new.copy()\n\n    return V, policy\n# END SOLUTION\n\n# BEGIN TESTS\n# Test convergence\nbeta = 0.95\ngrid = np.linspace(0, 10, 50)\nu = lambda c: np.log(c + 1e-10)\n\nV, policy = value_function_iteration(beta, grid, u)\n\n# V should be increasing\nassert all(np.diff(V) &gt; 0)\n\n# Policy should be weakly increasing\nassert all(np.diff(policy) &gt;= 0)\n\n# Check Bellman equation approximately holds\n# END TESTS\n</code></pre>"},{"location":"appendices/autograding/#problem-3-econometrics","title":"Problem 3: Econometrics","text":"<pre><code>## Question: Difference-in-Differences\n\n# Implement DiD estimator\n\n# BEGIN SOLUTION\nimport pandas as pd\n\ndef did_estimator(data):\n    \"\"\"\n    Compute 2x2 DiD estimator.\n\n    Parameters\n    ----------\n    data : pd.DataFrame\n        Must have columns: outcome, treated, post\n\n    Returns\n    -------\n    float\n        DiD estimate\n    \"\"\"\n    # Average outcomes by group and time\n    y_treated_post = data[(data['treated']==1) &amp; (data['post']==1)]['outcome'].mean()\n    y_treated_pre = data[(data['treated']==1) &amp; (data['post']==0)]['outcome'].mean()\n    y_control_post = data[(data['treated']==0) &amp; (data['post']==1)]['outcome'].mean()\n    y_control_pre = data[(data['treated']==0) &amp; (data['post']==0)]['outcome'].mean()\n\n    did = (y_treated_post - y_treated_pre) - (y_control_post - y_control_pre)\n    return did\n# END SOLUTION\n\n# BEGIN TESTS\n# Create test data\nnp.random.seed(42)\nn = 1000\ntest_data = pd.DataFrame({\n    'treated': np.repeat([0, 1], n//2),\n    'post': np.tile([0, 1], n//2),\n    'outcome': np.random.randn(n)\n})\n# Add treatment effect\ntest_data.loc[(test_data['treated']==1) &amp; (test_data['post']==1), 'outcome'] += 5\n\nestimate = did_estimator(test_data)\nassert 4 &lt; estimate &lt; 6  # True effect is 5\n# END TESTS\n</code></pre>"},{"location":"appendices/autograding/#tips-for-effective-autograding","title":"Tips for Effective Autograding","text":""},{"location":"appendices/autograding/#for-instructors","title":"For Instructors","text":"<ol> <li>Clear Instructions: Specify function signatures, return types</li> <li>Multiple Tests: Cover normal cases and edge cases</li> <li>Informative Messages: Help students debug</li> <li>Hidden Tests: Prevent solution sharing</li> <li>Partial Credit: Reward correct partial solutions</li> <li>Time Limits: Prevent infinite loops</li> <li>Documentation: Require docstrings</li> </ol>"},{"location":"appendices/autograding/#for-students","title":"For Students","text":"<ol> <li>Read Instructions: Understand what's expected</li> <li>Test Locally: Run test cells before submitting</li> <li>Start Simple: Get basic version working first</li> <li>Check Types: Ensure correct return types</li> <li>Handle Edge Cases: Empty inputs, zeros, etc.</li> <li>Don't Hardcode: Tests use different data</li> <li>Document: Write clear code and comments</li> </ol>"},{"location":"appendices/autograding/#common-pitfalls","title":"Common Pitfalls","text":""},{"location":"appendices/autograding/#pitfall-hardcoding-solutions","title":"Pitfall: Hardcoding Solutions","text":"<p>Student tries: <code>return np.array([0, 1])</code> to pass specific test</p> <p>Prevention: Use hidden tests with different data</p>"},{"location":"appendices/autograding/#pitfall-type-mismatches","title":"Pitfall: Type Mismatches","text":"<p>Student returns: List instead of NumPy array</p> <p>Prevention: Specify exact return types, test with <code>isinstance()</code></p>"},{"location":"appendices/autograding/#pitfall-floating-point-errors","title":"Pitfall: Floating Point Errors","text":"<p>Student fails: <code>assert x == 0.3</code> fails due to rounding</p> <p>Prevention: Use <code>np.allclose()</code> or <code>assert_almost_equal()</code></p>"},{"location":"appendices/autograding/#pitfall-random-seed-issues","title":"Pitfall: Random Seed Issues","text":"<p>Inconsistent results across runs</p> <p>Prevention: Set <code>np.random.seed()</code> in tests</p>"},{"location":"appendices/autograding/#integration-with-course","title":"Integration with Course","text":""},{"location":"appendices/autograding/#weekly-problem-sets","title":"Weekly Problem Sets","text":"<pre><code>ps1/\n\u251c\u2500\u2500 ps1.ipynb              # Master with solutions\n\u251c\u2500\u2500 ps1_student.ipynb      # Generated for students\n\u251c\u2500\u2500 tests/                 # Test files\n\u2502   \u251c\u2500\u2500 q1.py\n\u2502   \u251c\u2500\u2500 q2.py\n\u2502   \u2514\u2500\u2500 q3.py\n\u251c\u2500\u2500 data/                  # Data files\n\u2502   \u2514\u2500\u2500 dataset.csv\n\u2514\u2500\u2500 autograder.zip        # For Gradescope\n</code></pre>"},{"location":"appendices/autograding/#gradebook-management","title":"Gradebook Management","text":"<pre><code># Merge Otter results with LMS gradebook\nimport pandas as pd\n\notter_results = pd.read_csv('otter_results.csv')\ngradebook = pd.read_csv('lms_export.csv')\n\nmerged = gradebook.merge(otter_results, on='student_id')\nmerged.to_csv('updated_gradebook.csv', index=False)\n</code></pre>"},{"location":"appendices/autograding/#resources","title":"Resources","text":""},{"location":"appendices/autograding/#documentation","title":"Documentation","text":"<ul> <li>Otter-Grader Docs</li> <li>Gradescope Integration Guide</li> </ul>"},{"location":"appendices/autograding/#examples","title":"Examples","text":"<ul> <li>Data 8 Assignments - UC Berkeley</li> <li>Data 100 Assignments - UC Berkeley</li> </ul>"},{"location":"appendices/autograding/#community","title":"Community","text":"<ul> <li>Otter-Grader GitHub</li> <li>Discussions</li> </ul>"},{"location":"appendices/autograding/#alternatives","title":"Alternatives","text":""},{"location":"appendices/autograding/#other-autograding-tools","title":"Other Autograding Tools","text":"<ul> <li>nbgrader: Full-featured but more complex</li> <li>OK: Another Berkeley tool, older</li> <li>Papermill: Notebook parameterization and execution</li> <li>Custom Scripts: Roll your own with unittest</li> </ul>"},{"location":"appendices/autograding/#when-to-use-otter","title":"When to Use Otter","text":"<p>\u2705 Use Otter when: - Teaching large classes - Want Gradescope integration - Need hidden tests - Prefer simple setup</p> <p>\u274c Consider alternatives when: - Very small class (manual grading okay) - Need complex rubrics - Want more customization - Using JupyterHub with nbgrader</p>"},{"location":"appendices/autograding/#assessment","title":"Assessment","text":"<p>After this appendix, you should be able to:</p> <ul> <li> Install and configure Otter-Grader</li> <li> Create master notebooks with solutions and tests</li> <li> Generate student versions of assignments</li> <li> Write effective test cases (public and hidden)</li> <li> Grade submissions locally</li> <li> Integrate with Gradescope</li> <li> Provide meaningful feedback to students</li> <li> Design problems suitable for autograding</li> </ul>"},{"location":"appendices/autograding/#practice-exercises","title":"Practice Exercises","text":"<ol> <li>Simple Assignment: Create 3-question assignment on Python basics</li> <li>Economics Problem: Auto-graded OLS implementation</li> <li>Hidden Tests: Add hidden tests to prevent hardcoding</li> <li>Gradescope: Upload and test autograder.zip</li> <li>Grade Local: Practice grading sample submissions</li> <li>Full Problem Set: Create complete problem set for your course</li> </ol>"},{"location":"appendices/autograding/#ethical-considerations","title":"Ethical Considerations","text":""},{"location":"appendices/autograding/#academic-integrity","title":"Academic Integrity","text":"<ul> <li>Don't Over-Rely: Autograding complements, doesn't replace, human judgment</li> <li>Partial Credit: Recognize partial understanding</li> <li>Second Chances: Allow resubmissions for learning</li> <li>Accessibility: Ensure tests work for all students</li> </ul>"},{"location":"appendices/autograding/#transparency","title":"Transparency","text":"<ul> <li>Share Rubrics: Students should know how they're graded</li> <li>Explain Tests: Demystify the grading process</li> <li>Provide Examples: Show what good solutions look like</li> </ul>"},{"location":"appendices/autograding/#need-help","title":"Need Help?","text":"<ul> <li>Work through <code>Appendix/02_Autograding_with_Otter.ipynb</code></li> <li>Check Otter Documentation</li> <li>Ask on GitHub Discussions</li> <li>Post in Course Discussions</li> </ul> <p>Automate grading to focus on teaching economics, not debugging syntax!</p>"},{"location":"appendices/mathematics/","title":"Mathematical Appendices","text":"<p>Essential mathematical foundations for computational economics.</p>"},{"location":"appendices/mathematics/#overview","title":"Overview","text":"<p>These appendices provide comprehensive coverage of the mathematical prerequisites for the course. While not required to complete in order, they serve as references and refreshers for the mathematical concepts used throughout the modules.</p> <p>Target Audience: Students who need to review or strengthen their mathematical foundations</p>"},{"location":"appendices/mathematics/#appendix-coverage","title":"Appendix Coverage","text":""},{"location":"appendices/mathematics/#a1-real-analysis","title":"A1: Real Analysis","text":"<p>Notebook: <code>Appendix/A1-Real-Analysis.ipynb</code></p> <p>Essential concepts from real analysis used in economic theory and optimization.</p> <p>Topics Covered:</p> <p>Sets and Functions: - Sets, subsets, and set operations - Functions, domain, and range - Injective, surjective, and bijective functions - Composition and inverse functions</p> <p>Sequences and Series: - Convergence of sequences - Cauchy sequences - Monotone convergence theorem - Infinite series and convergence tests</p> <p>Limits and Continuity: - Limits of functions - Continuity and uniform continuity - Intermediate value theorem - Extreme value theorem</p> <p>Differentiation: - Derivatives and differentiability - Mean value theorem - L'H\u00f4pital's rule - Taylor's theorem</p> <p>Integration: - Riemann integration - Fundamental theorem of calculus - Integration techniques - Improper integrals</p> <p>Metric Spaces: - Metric spaces and norms - Open and closed sets - Compactness - Completeness</p> <p>Applications in Economics: - Proving existence of equilibria - Understanding convergence in algorithms - Foundations for optimization theory - Functional analysis basics</p>"},{"location":"appendices/mathematics/#a2-multivariate-calculus","title":"A2: Multivariate Calculus","text":"<p>Notebook: <code>Appendix/A2-Multivariate-Calculus.ipynb</code></p> <p>Extension of calculus to functions of several variables, essential for economic optimization.</p> <p>Topics Covered:</p> <p>Partial Derivatives: - Partial derivatives and interpretation - Higher-order partial derivatives - Mixed partial derivatives (Schwarz's theorem) - Directional derivatives - Gradient vectors</p> <p>Multivariable Optimization: - First-order conditions (FOCs) - Second-order conditions (SOCs) - Hessian matrix and definiteness - Local vs. global optima - Convexity and concavity</p> <p>Constrained Optimization: - Equality constraints - Lagrange multipliers - Interpretation of Lagrange multipliers (shadow prices) - Kuhn-Tucker conditions (inequality constraints) - Envelope theorem - Constraint qualifications</p> <p>Implicit and Inverse Functions: - Implicit function theorem - Applications to comparative statics - Inverse function theorem</p> <p>Multiple Integration: - Double and triple integrals - Change of variables (Jacobian) - Fubini's theorem - Applications to probability</p> <p>Vector Calculus: - Vector fields - Line and surface integrals - Divergence and curl - Green's, Stokes', and Gauss' theorems</p> <p>Economic Applications: - Utility maximization - Cost minimization - Profit maximization - Comparative statics - General equilibrium theory - Optimal control problems</p>"},{"location":"appendices/mathematics/#a3-probability-theory","title":"A3: Probability Theory","text":"<p>Notebook: <code>Appendix/A3-Probability-Theory.ipynb</code></p> <p>Rigorous treatment of probability theory for econometric and stochastic modeling.</p> <p>Topics Covered:</p> <p>Probability Foundations: - Sample spaces and events - Probability axioms (Kolmogorov) - Conditional probability - Independence - Bayes' theorem</p> <p>Random Variables: - Discrete and continuous random variables - Probability mass/density functions - Cumulative distribution functions - Quantile functions</p> <p>Common Distributions: - Bernoulli, binomial, Poisson - Uniform, exponential - Normal (Gaussian) distribution - Chi-squared, t, F distributions - Multivariate normal</p> <p>Expectation and Moments: - Expected value and properties - Variance and standard deviation - Covariance and correlation - Conditional expectation - Law of iterated expectations - Moment generating functions</p> <p>Limit Theorems: - Law of large numbers (weak and strong) - Central limit theorem - Delta method - Continuous mapping theorem</p> <p>Multivariate Distributions: - Joint, marginal, and conditional distributions - Independence of random variables - Covariance matrices - Transformations of random variables</p> <p>Stochastic Processes: - Discrete-time stochastic processes - Markov chains and transition matrices - Stationarity and ergodicity - Martingales - Brownian motion (introduction)</p> <p>Economic Applications: - Decision under uncertainty - Expected utility theory - Portfolio theory - Time series analysis - Dynamic programming with uncertainty - Asymptotic theory in econometrics</p>"},{"location":"appendices/mathematics/#a4-linear-algebra","title":"A4: Linear Algebra","text":"<p>Notebook: <code>Appendix/A4-Linear-Algebra.ipynb</code></p> <p>Comprehensive coverage of linear algebra for computational economics.</p> <p>Topics Covered:</p> <p>Vectors and Matrices: - Vector spaces and subspaces - Linear independence and basis - Dimension and rank - Matrix operations (addition, multiplication) - Transpose and trace</p> <p>Matrix Types: - Symmetric and skew-symmetric matrices - Diagonal and identity matrices - Triangular matrices - Orthogonal matrices - Positive definite matrices</p> <p>Systems of Linear Equations: - Gaussian elimination - Row echelon form - Matrix inverses - Determinants - Cramer's rule</p> <p>Eigenvalues and Eigenvectors: - Characteristic polynomial - Eigenvalue decomposition - Diagonalization - Spectral theorem - Singular value decomposition (SVD)</p> <p>Matrix Decompositions: - LU decomposition - Cholesky decomposition - QR decomposition - Applications to solving linear systems</p> <p>Vector and Matrix Norms: - Vector norms (L1, L2, L\u221e) - Matrix norms - Condition numbers - Numerical stability</p> <p>Quadratic Forms: - Definition and properties - Positive/negative definite forms - Applications to optimization</p> <p>Economic Applications: - Input-output analysis (Leontief models) - Markov chains and transition matrices - Principal component analysis - Linear regression (OLS) - General equilibrium computation - Dynamic programming (value function iteration) - Solving linear DSGE models</p>"},{"location":"appendices/mathematics/#how-to-use-these-appendices","title":"How to Use These Appendices","text":""},{"location":"appendices/mathematics/#as-prerequisites","title":"As Prerequisites","text":"<p>If you're new to these topics, we recommend: 1. Complete A4 (Linear Algebra) before Module 2 2. Review A2 (Multivariate Calculus) before Module 3 3. Study A3 (Probability) before Modules 6 and 8 4. Use A1 (Real Analysis) as needed for theoretical depth</p>"},{"location":"appendices/mathematics/#as-references","title":"As References","text":"<p>Throughout the course, appendices are referenced when: - Theoretical foundations are needed - Proofs require mathematical rigor - Advanced concepts build on these basics</p> <p>Look for callouts like:</p> <p>Mathematical Note: See Appendix A2 for details on the implicit function theorem.</p>"},{"location":"appendices/mathematics/#for-review","title":"For Review","text":"<p>If you encounter unfamiliar notation or concepts: 1. Check the relevant appendix 2. Work through examples 3. Try practice problems 4. Return to the module</p>"},{"location":"appendices/mathematics/#practice-problems","title":"Practice Problems","text":"<p>Each appendix notebook contains: - Worked Examples: Step-by-step solutions - Practice Exercises: Problems for self-study - Economic Applications: Context-specific problems - Computational Exercises: Implementation in Python</p>"},{"location":"appendices/mathematics/#level-of-rigor","title":"Level of Rigor","text":"<p>These appendices balance rigor with accessibility:</p> <ul> <li>Definitions: Mathematically precise</li> <li>Theorems: Stated formally with conditions</li> <li>Proofs: Key results proven; some omitted for brevity</li> <li>Examples: Concrete applications to economics</li> <li>Intuition: Economic interpretation provided</li> </ul>"},{"location":"appendices/mathematics/#notation","title":"Notation","text":"<p>We follow standard mathematical notation:</p> <ul> <li>\\(\\mathbb{R}\\): Real numbers</li> <li>\\(\\mathbb{R}^n\\): n-dimensional Euclidean space</li> <li>\\(\\in\\): Element of</li> <li>\\(\\subseteq\\): Subset</li> <li>\\(\\forall\\): For all</li> <li>\\(\\exists\\): There exists</li> <li>\\(\\implies\\): Implies</li> <li>\\(\\iff\\): If and only if</li> <li>\\(\\nabla\\): Gradient</li> <li>\\(\\mathcal{L}\\): Lagrangian</li> </ul>"},{"location":"appendices/mathematics/#connection-to-course-modules","title":"Connection to Course Modules","text":""},{"location":"appendices/mathematics/#module-2-numerical-methods","title":"Module 2: Numerical Methods","text":"<ul> <li>Uses: A1 (convergence), A4 (linear systems)</li> <li>Key concept: Iterative algorithms and convergence</li> </ul>"},{"location":"appendices/mathematics/#module-3-economic-modeling","title":"Module 3: Economic Modeling","text":"<ul> <li>Uses: A1 (contraction mapping), A2 (optimization)</li> <li>Key concept: Bellman equations and optimality</li> </ul>"},{"location":"appendices/mathematics/#module-4-5-macromicro-models","title":"Module 4-5: Macro/Micro Models","text":"<ul> <li>Uses: A2 (constrained optimization), A4 (eigenvalues)</li> <li>Key concept: Equilibrium conditions</li> </ul>"},{"location":"appendices/mathematics/#module-6-econometrics","title":"Module 6: Econometrics","text":"<ul> <li>Uses: A3 (probability), A4 (linear algebra)</li> <li>Key concept: Asymptotic theory</li> </ul>"},{"location":"appendices/mathematics/#module-7-machine-learning","title":"Module 7: Machine Learning","text":"<ul> <li>Uses: A4 (SVD, PCA), A3 (distributions)</li> <li>Key concept: Optimization and statistical learning</li> </ul>"},{"location":"appendices/mathematics/#module-8-time-series","title":"Module 8: Time Series","text":"<ul> <li>Uses: A3 (stochastic processes), A4 (matrices)</li> <li>Key concept: Stationarity and dynamics</li> </ul>"},{"location":"appendices/mathematics/#module-9-finance","title":"Module 9: Finance","text":"<ul> <li>Uses: A3 (probability), A2 (calculus)</li> <li>Key concept: Stochastic calculus and pricing</li> </ul>"},{"location":"appendices/mathematics/#resources-for-deeper-study","title":"Resources for Deeper Study","text":""},{"location":"appendices/mathematics/#textbooks","title":"Textbooks","text":"<p>Real Analysis: - Rudin, W. (1976). Principles of Mathematical Analysis, 3<sup>rd</sup> ed. - Bartle, R. &amp; Sherbert, D. (2011). Introduction to Real Analysis, 4<sup>th</sup> ed.</p> <p>Multivariate Calculus: - Stewart, J. (2020). Multivariable Calculus, 9<sup>th</sup> ed. - Apostol, T. (1969). Calculus, Vol. 2, 2<sup>nd</sup> ed.</p> <p>Probability: - Billingsley, P. (2012). Probability and Measure, Anniversary Edition - Casella, G. &amp; Berger, R. (2001). Statistical Inference, 2<sup>nd</sup> ed. - Williams, D. (1991). Probability with Martingales</p> <p>Linear Algebra: - Strang, G. (2016). Introduction to Linear Algebra, 5<sup>th</sup> ed. - Axler, S. (2015). Linear Algebra Done Right, 3<sup>rd</sup> ed. - Horn, R. &amp; Johnson, C. (2012). Matrix Analysis, 2<sup>nd</sup> ed.</p>"},{"location":"appendices/mathematics/#online-resources","title":"Online Resources","text":"<ul> <li>MIT OpenCourseWare Mathematics</li> <li>Khan Academy - Calculus and Linear Algebra</li> <li>3Blue1Brown - Excellent visualizations</li> <li>Paul's Online Math Notes</li> </ul>"},{"location":"appendices/mathematics/#software-for-mathematics","title":"Software for Mathematics","text":""},{"location":"appendices/mathematics/#symbolic-computation","title":"Symbolic Computation","text":"<pre><code># SymPy for symbolic mathematics\nfrom sympy import *\nx, y = symbols('x y')\nf = x**2 + y**2\ngradient = [diff(f, var) for var in (x, y)]\n</code></pre>"},{"location":"appendices/mathematics/#numerical-linear-algebra","title":"Numerical Linear Algebra","text":"<pre><code># NumPy and SciPy\nimport numpy as np\nfrom scipy import linalg\n\nA = np.array([[1, 2], [3, 4]])\neigenvalues, eigenvectors = linalg.eig(A)\n</code></pre>"},{"location":"appendices/mathematics/#visualization","title":"Visualization","text":"<pre><code># Matplotlib for 3D plots\nfrom mpl_toolkits.mplot3d import Axes3D\nimport matplotlib.pyplot as plt\n</code></pre>"},{"location":"appendices/mathematics/#tips-for-mathematical-success","title":"Tips for Mathematical Success","text":"<ol> <li>Practice Regularly: Mathematics requires active practice</li> <li>Work Examples: Don't just read - work through examples</li> <li>Visualize: Graph functions, plot surfaces</li> <li>Connect to Economics: Always ask \"why does economics use this?\"</li> <li>Check Understanding: Can you explain concepts in words?</li> <li>Use Software: Verify calculations numerically</li> <li>Be Patient: Mathematical maturity develops over time</li> </ol>"},{"location":"appendices/mathematics/#common-challenges","title":"Common Challenges","text":""},{"location":"appendices/mathematics/#challenge-abstract-concepts","title":"Challenge: Abstract Concepts","text":"<p>Solution: Focus on concrete examples first, then generalize</p>"},{"location":"appendices/mathematics/#challenge-notation-overload","title":"Challenge: Notation Overload","text":"<p>Solution: Keep a notation reference sheet, practice reading proofs</p>"},{"location":"appendices/mathematics/#challenge-lack-of-intuition","title":"Challenge: Lack of Intuition","text":"<p>Solution: Visualize, use numerical examples, connect to applications</p>"},{"location":"appendices/mathematics/#challenge-proof-techniques","title":"Challenge: Proof Techniques","text":"<p>Solution: Study proof patterns, practice with exercises</p>"},{"location":"appendices/mathematics/#assessment","title":"Assessment","text":"<p>To verify your understanding:</p> <ul> <li> Can you define key concepts precisely?</li> <li> Can you state major theorems and their conditions?</li> <li> Can you work through standard examples?</li> <li> Can you apply concepts to economic problems?</li> <li> Can you implement numerical versions in Python?</li> </ul>"},{"location":"appendices/mathematics/#need-help","title":"Need Help?","text":"<ul> <li>Work through appendix notebooks systematically</li> <li>Try practice problems before looking at solutions</li> <li>Use online resources for alternative explanations</li> <li>Ask questions in Discussions</li> <li>Form study groups for difficult concepts</li> </ul> <p>Remember: Mathematics is a tool for economic analysis. Focus on understanding how these concepts enable economic insights, not just abstract manipulation.</p>"},{"location":"appendices/publishing/","title":"Publishing with Quarto","text":"<p>Learn to create professional publications from Jupyter notebooks using Quarto.</p>"},{"location":"appendices/publishing/#overview","title":"Overview","text":"<p>This appendix teaches you how to transform Jupyter notebooks into publication-quality documents using Quarto, a modern scientific publishing system. You'll learn to create PDFs, HTML documents, presentations, and even entire websites from your computational work.</p> <p>Notebook: <code>Appendix/01_Publishing_with_Quarto.ipynb</code></p>"},{"location":"appendices/publishing/#what-is-quarto","title":"What is Quarto?","text":"<p>Quarto is an open-source scientific and technical publishing system built on Pandoc that enables:</p> <ul> <li>Multi-format output: PDF, HTML, Word, PowerPoint, reveal.js slides</li> <li>Reproducible research: Embed code, results, and narrative</li> <li>Cross-referencing: Figures, tables, equations, theorems</li> <li>Citations: BibTeX integration</li> <li>Professional typography: LaTeX-quality output</li> <li>Collaboration: Version control friendly</li> </ul>"},{"location":"appendices/publishing/#why-quarto-for-economics","title":"Why Quarto for Economics?","text":"<ol> <li>Reproducibility: Code and output travel together</li> <li>Journal submissions: Many journals accept PDF from LaTeX</li> <li>Working papers: Professional-looking documents</li> <li>Presentations: Code-driven slides with live execution</li> <li>Websites: Course materials, project documentation</li> <li>Books: Multi-chapter documents with cross-references</li> </ol>"},{"location":"appendices/publishing/#installation","title":"Installation","text":""},{"location":"appendices/publishing/#basic-installation","title":"Basic Installation","text":"<pre><code># Install Quarto (one-time setup)\n# Visit https://quarto.org/docs/get-started/\n# Download and install for your OS\n\n# Verify installation\nquarto --version\n\n# Install Python packages\npip install jupyter nbformat nbclient\n</code></pre>"},{"location":"appendices/publishing/#latex-for-pdf-output","title":"LaTeX for PDF Output","text":"<pre><code># For PDF output, install TinyTeX\nquarto install tinytex\n\n# Or use existing LaTeX distribution\n# - TeX Live (Linux)\n# - MacTeX (macOS)\n# - MiKTeX (Windows)\n</code></pre>"},{"location":"appendices/publishing/#quick-start","title":"Quick Start","text":""},{"location":"appendices/publishing/#from-jupyter-notebook","title":"From Jupyter Notebook","text":"<pre><code># Render notebook to HTML\nquarto render my_analysis.ipynb\n\n# Render to PDF\nquarto render my_analysis.ipynb --to pdf\n\n# Render to Word\nquarto render my_analysis.ipynb --to docx\n\n# Render presentation\nquarto render my_slides.ipynb --to revealjs\n</code></pre>"},{"location":"appendices/publishing/#live-preview","title":"Live Preview","text":"<pre><code># Preview with auto-reload\nquarto preview my_analysis.ipynb\n</code></pre>"},{"location":"appendices/publishing/#document-structure","title":"Document Structure","text":""},{"location":"appendices/publishing/#yaml-header","title":"YAML Header","text":"<p>Add metadata to your notebook's first cell (Raw NBConvert):</p> <pre><code>---\ntitle: \"The Effect of Minimum Wage on Employment\"\nsubtitle: \"A Synthetic Control Approach\"\nauthor: \"Your Name\"\ndate: \"2024-10-24\"\nformat:\n  pdf:\n    documentclass: article\n    geometry: margin=1in\n    fontsize: 12pt\n    number-sections: true\n  html:\n    toc: true\n    toc-depth: 3\n    code-fold: true\n    theme: cosmo\nbibliography: references.bib\ncsl: econometrica.csl\n---\n</code></pre>"},{"location":"appendices/publishing/#key-features","title":"Key Features","text":""},{"location":"appendices/publishing/#1-code-execution-control","title":"1. Code Execution Control","text":"<pre><code>#| echo: false\n#| warning: false\n#| message: false\n\n# This code runs but doesn't appear in output\nimport pandas as pd\ndata = pd.read_csv('data.csv')\n</code></pre> <p>Common options: - <code>echo: false</code> - Hide code, show output - <code>eval: false</code> - Show code, don't execute - <code>include: false</code> - Execute but hide everything - <code>warning: false</code> - Suppress warnings - <code>fig-cap: \"Caption text\"</code> - Figure caption</p>"},{"location":"appendices/publishing/#2-cross-references","title":"2. Cross-References","text":"<pre><code>See @fig-scatter for the relationship between variables.\n\n```{python}\n#| label: fig-scatter\n#| fig-cap: \"Wage vs. Experience\"\n\nplt.scatter(data['experience'], data['wage'])\nplt.xlabel('Experience (years)')\nplt.ylabel('Hourly Wage ($)')\nplt.show()\n</code></pre> <p>Reference as @fig-scatter in text. <pre><code>Similarly for tables (@tbl-summary), equations (@eq-regression), sections (@sec-intro).\n\n---\n\n### 3. Citations and Bibliography\n\n```markdown\nAccording to @card1994minimum, the effect of minimum wage is...\n\nMultiple citations [@card1994minimum; @angrist2008mostly].\n\nThe DiD estimator is:\n$$\n\\hat{\\beta} = (\\bar{Y}_{T,post} - \\bar{Y}_{T,pre}) - (\\bar{Y}_{C,post} - \\bar{Y}_{C,pre})\n$$ {#eq-did}\n\nAs shown in @eq-did, the DiD estimator...\n</code></pre></p> <p>Requires <code>references.bib</code>: <pre><code>@article{card1994minimum,\n  title={Minimum wages and employment: A case study},\n  author={Card, David and Krueger, Alan B},\n  journal={American Economic Review},\n  volume={84},\n  number={4},\n  pages={772--793},\n  year={1994}\n}\n</code></pre></p>"},{"location":"appendices/publishing/#4-latex-math","title":"4. LaTeX Math","text":"<p>Inline math: <code>$\\alpha + \\beta = \\gamma$</code></p> <p>Display math: <pre><code>$$\n\\max_{c_t, k_{t+1}} \\sum_{t=0}^{\\infty} \\beta^t u(c_t)\n$$ {#eq-bellman}\n\nsubject to:\n$$\nc_t + k_{t+1} = f(k_t) + (1-\\delta)k_t\n$$\n</code></pre></p>"},{"location":"appendices/publishing/#5-callout-blocks","title":"5. Callout Blocks","text":"<pre><code>::: {.callout-note}\n## Note\nThis is important context for readers.\n:::\n\n::: {.callout-warning}\nThe parallel trends assumption may not hold.\n:::\n\n::: {.callout-tip}\n## Pro Tip\nUse robust standard errors for clustered data.\n:::\n</code></pre>"},{"location":"appendices/publishing/#output-formats","title":"Output Formats","text":""},{"location":"appendices/publishing/#pdf-academic-papers","title":"PDF (Academic Papers)","text":"<pre><code>---\ntitle: \"My Paper\"\nformat:\n  pdf:\n    documentclass: article\n    classoption: [12pt, twoside]\n    geometry:\n      - margin=1in\n    number-sections: true\n    colorlinks: true\n    keep-tex: true  # Save intermediate .tex file\n---\n</code></pre>"},{"location":"appendices/publishing/#html-web-reports","title":"HTML (Web Reports)","text":"<pre><code>---\ntitle: \"Analysis Report\"\nformat:\n  html:\n    toc: true\n    toc-location: left\n    code-fold: true\n    code-tools: true\n    theme: cosmo\n    grid:\n      sidebar-width: 300px\n    css: custom.css\n---\n</code></pre>"},{"location":"appendices/publishing/#presentations-revealjs","title":"Presentations (reveal.js)","text":"<pre><code>---\ntitle: \"Research Presentation\"\nformat:\n  revealjs:\n    theme: simple\n    slide-number: true\n    chalkboard: true\n    preview-links: auto\n    controls: true\n---\n</code></pre> <p>Use <code>##</code> for new slides.</p>"},{"location":"appendices/publishing/#word-documents","title":"Word Documents","text":"<pre><code>---\ntitle: \"Report\"\nformat:\n  docx:\n    reference-doc: template.docx\n    toc: true\n    number-sections: true\n---\n</code></pre>"},{"location":"appendices/publishing/#advanced-features","title":"Advanced Features","text":""},{"location":"appendices/publishing/#conditional-content","title":"Conditional Content","text":"<pre><code>::: {.content-visible when-format=\"html\"}\nThis appears only in HTML output.\n[Interactive Plotly visualization]\n:::\n\n::: {.content-visible when-format=\"pdf\"}\nThis appears only in PDF.\n[Static matplotlib figure]\n:::\n</code></pre>"},{"location":"appendices/publishing/#multi-column-layouts","title":"Multi-Column Layouts","text":"<pre><code>:::: {.columns}\n\n::: {.column width=\"50%\"}\nContent for left column\n:::\n\n::: {.column width=\"50%\"}\nContent for right column\n:::\n\n::::\n</code></pre>"},{"location":"appendices/publishing/#tabsets","title":"Tabsets","text":"<pre><code>::: {.panel-tabset}\n\n## Estimation Results\n[Show regression table]\n\n## Robustness Checks\n[Show alternative specifications]\n\n## Diagnostic Plots\n[Show residual plots]\n\n:::\n</code></pre>"},{"location":"appendices/publishing/#theorem-environments","title":"Theorem Environments","text":"<pre><code>::: {#thm-efficiency}\n## Gauss-Markov Theorem\nUnder assumptions 1-5, OLS is BLUE.\n:::\n\nBy @thm-efficiency, we know that...\n</code></pre>"},{"location":"appendices/publishing/#best-practices","title":"Best Practices","text":""},{"location":"appendices/publishing/#1-project-organization","title":"1. Project Organization","text":"<pre><code>project/\n\u251c\u2500\u2500 analysis.qmd or .ipynb\n\u251c\u2500\u2500 _quarto.yml           # Project config\n\u251c\u2500\u2500 references.bib        # Bibliography\n\u251c\u2500\u2500 data/\n\u2502   \u2514\u2500\u2500 dataset.csv\n\u251c\u2500\u2500 scripts/\n\u2502   \u2514\u2500\u2500 utils.py\n\u251c\u2500\u2500 output/\n\u2502   \u251c\u2500\u2500 analysis.pdf\n\u2502   \u2514\u2500\u2500 analysis.html\n\u2514\u2500\u2500 figures/\n    \u2514\u2500\u2500 saved_plots.png\n</code></pre>"},{"location":"appendices/publishing/#2-reproducibility","title":"2. Reproducibility","text":"<pre><code>#| label: setup\n#| include: false\n\n# Set random seed\nimport numpy as np\nnp.random.seed(42)\n\n# Record package versions\nimport sys\nprint(f\"Python: {sys.version}\")\nprint(f\"NumPy: {np.__version__}\")\n</code></pre>"},{"location":"appendices/publishing/#3-code-organization","title":"3. Code Organization","text":"<ul> <li>Setup cell: Imports and configuration</li> <li>Data loading: Separate from analysis</li> <li>Helper functions: In separate script or early cells</li> <li>Main analysis: Clear logical flow</li> <li>Robustness checks: Well-organized sections</li> </ul>"},{"location":"appendices/publishing/#4-figure-quality","title":"4. Figure Quality","text":"<pre><code>#| label: fig-quality\n#| fig-width: 8\n#| fig-height: 6\n#| fig-dpi: 300\n#| fig-cap: \"High-resolution figure\"\n\nimport matplotlib.pyplot as plt\nplt.figure(figsize=(8, 6), dpi=300)\n# ... plotting code ...\nplt.savefig('figure.png', dpi=300, bbox_inches='tight')\n</code></pre>"},{"location":"appendices/publishing/#academic-workflow","title":"Academic Workflow","text":""},{"location":"appendices/publishing/#working-paper","title":"Working Paper","text":"<ol> <li>Draft in Jupyter: Interactive analysis</li> <li>Add YAML: Metadata and format options</li> <li>Render to PDF: <code>quarto render paper.ipynb --to pdf</code></li> <li>Iterate: Refine analysis and narrative</li> <li>Version control: Git-friendly plain text</li> </ol>"},{"location":"appendices/publishing/#journal-submission","title":"Journal Submission","text":"<pre><code>---\nformat:\n  pdf:\n    documentclass: article\n    keep-tex: true        # Submit .tex to journal\n    cite-method: natbib   # Or biblatex\n---\n</code></pre> <p>Many journals provide Quarto templates.</p>"},{"location":"appendices/publishing/#presentations","title":"Presentations","text":"<pre><code>---\nformat:\n  revealjs:\n    theme: [default, custom.scss]\n    logo: university_logo.png\n    footer: \"Author Name | Conference 2024\"\n    incremental: true   # Bullet points appear one-by-one\n---\n</code></pre>"},{"location":"appendices/publishing/#websites-and-blogs","title":"Websites and Blogs","text":""},{"location":"appendices/publishing/#create-a-website","title":"Create a Website","text":"<pre><code># _quarto.yml\nproject:\n  type: website\n\nwebsite:\n  title: \"My Research\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - href: research.qmd\n        text: Research\n      - href: teaching.qmd\n        text: Teaching\n</code></pre> <p>Render: <code>quarto render</code></p>"},{"location":"appendices/publishing/#publish-to-github-pages","title":"Publish to GitHub Pages","text":"<pre><code>quarto publish gh-pages\n</code></pre>"},{"location":"appendices/publishing/#books-and-course-notes","title":"Books and Course Notes","text":"<pre><code># _quarto.yml\nproject:\n  type: book\n\nbook:\n  title: \"Computational Economics\"\n  author: \"Your Name\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - part: \"Part I: Foundations\"\n      chapters:\n        - ch01-python.qmd\n        - ch02-numpy.qmd\n    - references.qmd\n</code></pre>"},{"location":"appendices/publishing/#integration-with-latex","title":"Integration with LaTeX","text":""},{"location":"appendices/publishing/#custom-latex-commands","title":"Custom LaTeX Commands","text":"<pre><code>---\nformat:\n  pdf:\n    include-in-header:\n      text: |\n        \\newcommand{\\E}{\\mathbb{E}}\n        \\newcommand{\\Var}{\\text{Var}}\n        \\newcommand{\\Cov}{\\text{Cov}}\n---\n</code></pre> <p>Use in markdown: <code>$\\E[X]$</code>, <code>$\\Var(Y)$</code></p>"},{"location":"appendices/publishing/#theorem-environments_1","title":"Theorem Environments","text":"<pre><code>---\nformat:\n  pdf:\n    include-in-header:\n      text: |\n        \\newtheorem{theorem}{Theorem}\n        \\newtheorem{lemma}{Lemma}\n        \\newtheorem{proposition}{Proposition}\n---\n</code></pre>"},{"location":"appendices/publishing/#troubleshooting","title":"Troubleshooting","text":""},{"location":"appendices/publishing/#common-issues","title":"Common Issues","text":"<p>Issue: PDF rendering fails <pre><code># Check LaTeX installation\nquarto check\n\n# Install missing packages\nquarto install tinytex\n</code></pre></p> <p>Issue: Code doesn't execute - Check Python environment - Verify kernel in Jupyter - Add <code>#| eval: true</code></p> <p>Issue: References not resolving - Check <code>references.bib</code> path - Verify citation keys - Use <code>@citekey</code> syntax</p> <p>Issue: Figures not appearing - Check file paths - Verify <code>fig-cap</code> labels - Ensure code executes</p>"},{"location":"appendices/publishing/#resources","title":"Resources","text":""},{"location":"appendices/publishing/#documentation","title":"Documentation","text":"<ul> <li>Quarto Official Guide</li> <li>Quarto Gallery - Examples</li> <li>Quarto Journal Templates</li> </ul>"},{"location":"appendices/publishing/#tutorials","title":"Tutorials","text":"<ul> <li>Get Started with Quarto</li> <li>Quarto for Academics</li> </ul>"},{"location":"appendices/publishing/#citation-styles","title":"Citation Styles","text":"<ul> <li>Zotero Style Repository - Download .csl files</li> <li>Common economics styles: econometrica.csl, apa.csl, chicago.csl</li> </ul>"},{"location":"appendices/publishing/#templates","title":"Templates","text":"<ul> <li>Quarto Journal Articles</li> <li>Awesome Quarto - Community resources</li> </ul>"},{"location":"appendices/publishing/#comparison-with-alternatives","title":"Comparison with Alternatives","text":""},{"location":"appendices/publishing/#quarto-vs-jupyter-book","title":"Quarto vs. Jupyter Book","text":"<ul> <li>Quarto: Single-file notebooks, multi-format, simpler</li> <li>Jupyter Book: Better for complex books, more customization</li> </ul>"},{"location":"appendices/publishing/#quarto-vs-r-markdown","title":"Quarto vs. R Markdown","text":"<ul> <li>Quarto: Language-agnostic (Python, R, Julia), newer</li> <li>R Markdown: R-centric, mature ecosystem</li> </ul>"},{"location":"appendices/publishing/#quarto-vs-latex-directly","title":"Quarto vs. LaTeX Directly","text":"<ul> <li>Quarto: Easier, reproducible, multi-format</li> <li>LaTeX: More control, traditional academic workflow</li> </ul>"},{"location":"appendices/publishing/#example-workflow-research-paper","title":"Example Workflow: Research Paper","text":""},{"location":"appendices/publishing/#step-1-analysis-notebook","title":"Step 1: Analysis Notebook","text":"<p>Create <code>analysis.ipynb</code> with: - Data loading and cleaning - Descriptive statistics - Main analysis - Robustness checks</p>"},{"location":"appendices/publishing/#step-2-add-yaml","title":"Step 2: Add YAML","text":"<pre><code>---\ntitle: \"Effect of Policy X on Outcome Y\"\nauthor: \"Your Name\"\ndate: today\nformat:\n  pdf:\n    number-sections: true\n    colorlinks: true\nbibliography: refs.bib\n---\n</code></pre>"},{"location":"appendices/publishing/#step-3-structure-sections","title":"Step 3: Structure Sections","text":"<pre><code># Introduction\nBackground and motivation...\n\n# Data\nDescription of dataset...\n\n## Summary Statistics\n[Code for Table 1]\n\n# Empirical Strategy\nOur identification strategy...\n\n# Results\nMain findings...\n\n# Robustness\nAlternative specifications...\n\n# Conclusion\nSummary and implications...\n\n# References {.unnumbered}\n::: {#refs}\n:::\n</code></pre>"},{"location":"appendices/publishing/#step-4-render","title":"Step 4: Render","text":"<pre><code>quarto render analysis.ipynb --to pdf\n</code></pre>"},{"location":"appendices/publishing/#step-5-iterate","title":"Step 5: Iterate","text":"<ul> <li>Refine analysis</li> <li>Update narrative</li> <li>Improve figures</li> <li>Re-render</li> </ul>"},{"location":"appendices/publishing/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Start Simple: Basic YAML, then add features</li> <li>Preview Often: <code>quarto preview</code> for live updates</li> <li>Version Control: Commit <code>.ipynb</code> and <code>.qmd</code> files</li> <li>Separate Concerns: Data processing \u2260 presentation</li> <li>Reusable Code: Functions in external <code>.py</code> files</li> <li>Document Early: Write narrative alongside code</li> <li>Backup: Cloud storage for important work</li> </ol>"},{"location":"appendices/publishing/#assessment","title":"Assessment","text":"<p>After completing this appendix, you should be able to:</p> <ul> <li> Install and configure Quarto</li> <li> Render notebooks to PDF, HTML, and presentations</li> <li> Use cross-references for figures, tables, and equations</li> <li> Manage citations with BibTeX</li> <li> Create multi-format output from single source</li> <li> Publish websites with Quarto</li> <li> Integrate code, results, and narrative professionally</li> </ul>"},{"location":"appendices/publishing/#practice-exercises","title":"Practice Exercises","text":"<ol> <li>Basic Report: Render a simple analysis to PDF and HTML</li> <li>Citations: Add bibliography and cite 5+ papers</li> <li>Cross-References: Create document with numbered figures and tables</li> <li>Presentation: Convert analysis to reveal.js slides</li> <li>Website: Create personal academic website</li> <li>Full Paper: Write complete working paper with Quarto</li> </ol>"},{"location":"appendices/publishing/#need-help","title":"Need Help?","text":"<ul> <li>Work through <code>Appendix/01_Publishing_with_Quarto.ipynb</code></li> <li>Check Quarto Documentation</li> <li>Visit Quarto Discussions</li> <li>Ask in Course Discussions</li> </ul> <p>Master professional publishing and make your research reproducible and accessible!</p>"},{"location":"getting-started/installation/","title":"Installation Guide","text":"<p>This guide will help you set up the complete environment for the Computational Economics and Data Science course.</p>"},{"location":"getting-started/installation/#system-requirements","title":"System Requirements","text":"<p>Minimum Requirements</p> <ul> <li>OS: Windows 10+, macOS 10.14+, or Linux</li> <li>RAM: 8 GB minimum, 16 GB recommended</li> <li>Storage: 5 GB free space</li> <li>Python: 3.10 or higher</li> </ul> <p>Recommended Setup</p> <ul> <li>16+ GB RAM for machine learning modules</li> <li>SSD for faster data processing</li> <li>GPU (NVIDIA) for deep learning acceleration (optional)</li> </ul>"},{"location":"getting-started/installation/#installation-methods","title":"Installation Methods","text":"<p>Choose the method that works best for you:</p> Conda (Recommended)pip (Alternative)"},{"location":"getting-started/installation/#using-conda","title":"Using Conda","text":"<p>Conda is the recommended package manager for data science projects.</p>"},{"location":"getting-started/installation/#1-install-miniconda-or-anaconda","title":"1. Install Miniconda or Anaconda","text":"<p>Option A: Miniconda (lightweight, recommended) <pre><code># Download and install from:\n# https://docs.conda.io/en/latest/miniconda.html\n</code></pre></p> <p>Option B: Anaconda (includes GUI and extra packages) <pre><code># Download and install from:\n# https://www.anaconda.com/download\n</code></pre></p>"},{"location":"getting-started/installation/#2-clone-the-repository","title":"2. Clone the Repository","text":"<pre><code>git clone https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.git\ncd Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"getting-started/installation/#3-create-the-environment","title":"3. Create the Environment","text":"<pre><code>conda env create -f environment.yml\n</code></pre>"},{"location":"getting-started/installation/#4-activate-the-environment","title":"4. Activate the Environment","text":"<pre><code>conda activate computational-econ\n</code></pre>"},{"location":"getting-started/installation/#5-verify-installation","title":"5. Verify Installation","text":"<pre><code>python --version  # Should be 3.10+\njupyter lab --version\n</code></pre>"},{"location":"getting-started/installation/#using-pip","title":"Using pip","text":"<p>If you prefer using pip, follow these steps:</p>"},{"location":"getting-started/installation/#1-ensure-python-310-is-installed","title":"1. Ensure Python 3.10+ is Installed","text":"<pre><code>python --version  # Should output 3.10.0 or higher\n</code></pre>"},{"location":"getting-started/installation/#2-clone-the-repository_1","title":"2. Clone the Repository","text":"<pre><code>git clone https://github.com/AmirrezaFarnamTaheri/Computational-Economics-and-Data-Science.git\ncd Computational-Economics-and-Data-Science\n</code></pre>"},{"location":"getting-started/installation/#3-create-virtual-environment-optional-but-recommended","title":"3. Create Virtual Environment (Optional but Recommended)","text":"<pre><code>python -m venv venv\n\n# Activate on macOS/Linux:\nsource venv/bin/activate\n\n# Activate on Windows:\nvenv\\Scripts\\activate\n</code></pre>"},{"location":"getting-started/installation/#4-install-dependencies","title":"4. Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre> <p>Large Installation</p> <p>This will download about 2-3 GB of packages. Ensure you have a stable internet connection.</p>"},{"location":"getting-started/installation/#package-overview","title":"Package Overview","text":"<p>The course requires the following major packages:</p>"},{"location":"getting-started/installation/#core-scientific-computing","title":"Core Scientific Computing","text":"<ul> <li>NumPy \u2265 2.0 - Numerical arrays and linear algebra</li> <li>SciPy \u2265 1.11 - Scientific computing</li> <li>Pandas \u2265 2.0 - Data manipulation</li> <li>Matplotlib \u2265 3.8 - Data visualization</li> <li>Seaborn \u2265 0.13 - Statistical visualization</li> </ul>"},{"location":"getting-started/installation/#machine-learning","title":"Machine Learning","text":"<ul> <li>scikit-learn \u2265 1.4 - Classical ML algorithms</li> <li>TensorFlow \u2265 2.15 - Deep learning</li> <li>PyTorch \u2265 2.1 - Deep learning (alternative)</li> <li>XGBoost \u2265 2.0 - Gradient boosting</li> </ul>"},{"location":"getting-started/installation/#econometrics","title":"Econometrics","text":"<ul> <li>statsmodels \u2265 0.14 - Statistical models</li> <li>quantecon \u2265 0.7 - Quantitative economics</li> <li>arch \u2265 6.0 - ARCH/GARCH models</li> <li>pymc \u2265 5.10 - Bayesian inference</li> </ul>"},{"location":"getting-started/installation/#interactive-computing","title":"Interactive Computing","text":"<ul> <li>JupyterLab \u2265 4.0 - Interactive notebooks</li> <li>IPython \u2265 8.20 - Enhanced Python shell</li> </ul>"},{"location":"getting-started/installation/#verifying-your-installation","title":"Verifying Your Installation","text":"<p>Run this Python script to verify all packages are installed correctly:</p> <pre><code>import sys\nprint(f\"Python version: {sys.version}\")\n\n# Test core packages\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport scipy\n\nprint(f\"\u2713 NumPy {np.__version__}\")\nprint(f\"\u2713 Pandas {pd.__version__}\")\nprint(f\"\u2713 Matplotlib {matplotlib.__version__}\")\nprint(f\"\u2713 SciPy {scipy.__version__}\")\n\n# Test ML packages\ntry:\n    import sklearn\n    print(f\"\u2713 scikit-learn {sklearn.__version__}\")\nexcept ImportError:\n    print(\"\u2717 scikit-learn not installed\")\n\ntry:\n    import tensorflow as tf\n    print(f\"\u2713 TensorFlow {tf.__version__}\")\nexcept ImportError:\n    print(\"\u26a0 TensorFlow not installed (optional)\")\n\ntry:\n    import torch\n    print(f\"\u2713 PyTorch {torch.__version__}\")\nexcept ImportError:\n    print(\"\u26a0 PyTorch not installed (optional)\")\n\n# Test econometrics packages\ntry:\n    import statsmodels.api as sm\n    print(f\"\u2713 statsmodels {sm.__version__}\")\nexcept ImportError:\n    print(\"\u2717 statsmodels not installed\")\n\ntry:\n    import quantecon as qe\n    print(f\"\u2713 QuantEcon {qe.__version__}\")\nexcept ImportError:\n    print(\"\u2717 QuantEcon not installed\")\n\nprint(\"\\n\u2713 All core packages installed successfully!\")\n</code></pre>"},{"location":"getting-started/installation/#launching-jupyter-lab","title":"Launching Jupyter Lab","text":"<p>After installation, start Jupyter Lab:</p> <pre><code># Make sure you're in the course directory and environment is activated\njupyter lab\n</code></pre> <p>This will open Jupyter Lab in your default web browser at <code>http://localhost:8888</code>.</p>"},{"location":"getting-started/installation/#optional-gpu-support","title":"Optional: GPU Support","text":"<p>For deep learning with GPU acceleration:</p>"},{"location":"getting-started/installation/#nvidia-gpu-cuda","title":"NVIDIA GPU (CUDA)","text":"<ol> <li> <p>Check GPU compatibility: NVIDIA GPU with CUDA Compute Capability 3.5+</p> </li> <li> <p>Install CUDA Toolkit (version 12.x):     <pre><code># Download from: https://developer.nvidia.com/cuda-downloads\n</code></pre></p> </li> <li> <p>Install cuDNN:     <pre><code># Download from: https://developer.nvidia.com/cudnn\n</code></pre></p> </li> <li> <p>Install GPU-enabled packages:     === \"TensorFlow\"         <pre><code>pip install tensorflow[and-cuda]\n</code></pre></p> PyTorchCuPy <pre><code># Visit https://pytorch.org/get-started/locally/\n# for platform-specific instructions\n</code></pre> <pre><code>pip install cupy-cuda12x\n</code></pre> </li> <li> <p>Verify GPU is detected:     <pre><code># TensorFlow\nimport tensorflow as tf\nprint(\"GPUs:\", tf.config.list_physical_devices('GPU'))\n\n# PyTorch\nimport torch\nprint(\"CUDA available:\", torch.cuda.is_available())\nprint(\"GPU count:\", torch.cuda.device_count())\n</code></pre></p> </li> </ol>"},{"location":"getting-started/installation/#troubleshooting","title":"Troubleshooting","text":""},{"location":"getting-started/installation/#common-issues","title":"Common Issues","text":"<p>Package conflicts or installation errors?</p> <pre><code># Clear conda cache\nconda clean --all\n\n# Try creating environment again\nconda env remove -n computational-econ\nconda env create -f environment.yml\n</code></pre> <p>Jupyter kernel not found?</p> <pre><code># Install IPython kernel\npython -m ipykernel install --user --name computational-econ\n</code></pre> <p>Import errors in Jupyter notebooks?</p> <p>Make sure you've selected the correct kernel: - Click \"Kernel\" \u2192 \"Change Kernel\" \u2192 \"computational-econ\"</p> <p>Out of memory errors?</p> <ul> <li>Close other applications</li> <li>Restart Jupyter kernel</li> <li>Consider using a machine with more RAM</li> </ul>"},{"location":"getting-started/installation/#getting-help","title":"Getting Help","text":"<p>If you encounter issues:</p> <ol> <li>Check the FAQ</li> <li>Search GitHub Issues</li> <li>Create a new issue with:<ul> <li>Your OS and Python version</li> <li>Full error message</li> <li>Steps to reproduce</li> </ul> </li> </ol>"},{"location":"getting-started/installation/#next-steps","title":"Next Steps","text":"<p>Once installation is complete:</p> <ol> <li> Complete the Quick Start tutorial</li> <li> Review the Course Structure</li> <li> Begin Module 1: Foundations</li> </ol> <p>Installation Complete!</p> <p>Congratulations! You're now ready to begin the course. Head to the Quick Start guide to run your first notebook.</p>"},{"location":"getting-started/prerequisites/","title":"Prerequisites","text":"<p>What you need to know before starting the course.</p>"},{"location":"getting-started/prerequisites/#mathematics","title":"Mathematics","text":""},{"location":"getting-started/prerequisites/#required","title":"Required","text":"<ul> <li>Calculus: Single and multivariable</li> <li>Linear Algebra: Matrices, vectors, eigenvalues</li> <li>Probability &amp; Statistics: Basic concepts</li> </ul>"},{"location":"getting-started/prerequisites/#recommended","title":"Recommended","text":"<ul> <li>Real analysis</li> <li>Optimization theory</li> <li>Stochastic processes</li> </ul>"},{"location":"getting-started/prerequisites/#economics","title":"Economics","text":""},{"location":"getting-started/prerequisites/#required_1","title":"Required","text":"<ul> <li>Intermediate microeconomics</li> <li>Intermediate macroeconomics</li> </ul>"},{"location":"getting-started/prerequisites/#helpful","title":"Helpful","text":"<ul> <li>Graduate micro/macro</li> <li>Econometrics basics</li> </ul>"},{"location":"getting-started/prerequisites/#programming","title":"Programming","text":"<p>No prior experience required! Module 1 teaches from scratch.</p> <p>For installation instructions, see Installation Guide.</p>"},{"location":"getting-started/quickstart/","title":"Quick Start","text":"<p>Get up and running in 10 minutes and run your first economic analysis!</p>"},{"location":"getting-started/quickstart/#prerequisites","title":"Prerequisites","text":"<p>Before starting, make sure you have:</p> <ul> <li> Completed the Installation</li> <li> Activated the conda environment</li> <li> Basic familiarity with Jupyter notebooks (optional)</li> </ul>"},{"location":"getting-started/quickstart/#step-1-launch-jupyter-lab","title":"Step 1: Launch Jupyter Lab","text":"<p>Open a terminal and navigate to the course directory:</p> <pre><code># Navigate to course folder\ncd Computational-Economics-and-Data-Science\n\n# Activate environment\nconda activate computational-econ\n\n# Start Jupyter Lab\njupyter lab\n</code></pre> <p>Your browser will open at <code>http://localhost:8888</code> showing the Jupyter Lab interface.</p> <p>First Time Using Jupyter?</p> <p>Jupyter Lab is an interactive development environment. The left sidebar shows your files, and you can create/open notebooks in the main area.</p>"},{"location":"getting-started/quickstart/#step-2-open-your-first-notebook","title":"Step 2: Open Your First Notebook","text":"<ol> <li>In the left sidebar, navigate to <code>01-Foundations/</code></li> <li>Double-click <code>01_Introduction.ipynb</code></li> </ol> <p>The notebook will open in a new tab.</p>"},{"location":"getting-started/quickstart/#step-3-run-your-first-cells","title":"Step 3: Run Your First Cells","text":""},{"location":"getting-started/quickstart/#understanding-notebooks","title":"Understanding Notebooks","text":"<p>Jupyter notebooks consist of cells that can contain: - Code (Python code to execute) - Markdown (formatted text, like this guide)</p>"},{"location":"getting-started/quickstart/#running-cells","title":"Running Cells","text":"<p>Click on the first code cell and:</p> Keyboard ShortcutMouse <p>Press <code>Shift + Enter</code> to run the cell</p> <p>Click the \u25b6\ufe0f button in the toolbar</p> <p>The cell will execute and show output below.</p>"},{"location":"getting-started/quickstart/#try-this-simple-calculation","title":"Try This: Simple Calculation","text":"<p>Find a cell with Python code like this:</p> <pre><code># Simple calculation\n2 + 2\n</code></pre> <p>Run it with <code>Shift + Enter</code>. You should see:</p> <pre><code>4\n</code></pre> <p>Congratulations! You've run your first Python code! \ud83c\udf89</p>"},{"location":"getting-started/quickstart/#step-4-your-first-economic-analysis","title":"Step 4: Your First Economic Analysis","text":"<p>Let's do something more interesting. Navigate to:</p> <p><code>01-Foundations/15_Accessing_Economic_Data_via_APIs.ipynb</code></p>"},{"location":"getting-started/quickstart/#example-downloading-us-gdp-data","title":"Example: Downloading US GDP Data","text":"<p>Find and run these cells:</p> <pre><code># Import libraries\nimport pandas as pd\nfrom pandas_datareader import data as pdr\nimport matplotlib.pyplot as plt\n\n# Download real GDP data from FRED\ngdp = pdr.get_data_fred('GDPC1', start='2000')\n\n# Plot\nplt.figure(figsize=(12, 6))\nplt.plot(gdp.index, gdp.values)\nplt.title('US Real GDP (Billions of Chained 2012 Dollars)', fontsize=14)\nplt.xlabel('Year')\nplt.ylabel('GDP')\nplt.grid(True, alpha=0.3)\nplt.tight_layout()\nplt.show()\n</code></pre> <p>You should see a plot of US GDP over time! \ud83d\udcc8</p>"},{"location":"getting-started/quickstart/#what-just-happened","title":"What Just Happened?","text":"<p>You: 1. Imported Python libraries for data analysis 2. Downloaded real economic data from FRED (Federal Reserve) 3. Created a publication-quality plot</p> <p>This is the power of computational economics!</p>"},{"location":"getting-started/quickstart/#step-5-explore-the-course-structure","title":"Step 5: Explore the Course Structure","text":""},{"location":"getting-started/quickstart/#module-organization","title":"Module Organization","text":"<p>The course is organized in numbered folders:</p> <pre><code>01-Foundations/          \u2190 Start here\n02-Numerical-Methods/\n03-Economic-Modeling/\n04-Macro-Models/\n... and more!\n</code></pre>"},{"location":"getting-started/quickstart/#within-each-module","title":"Within Each Module","text":"<p>Each module contains:</p> <ul> <li>Numbered notebooks (e.g., <code>01_Topic.ipynb</code>, <code>02_Topic.ipynb</code>)</li> <li>Supporting Python files (utility functions)</li> <li>README (if present)</li> </ul> <p>Recommended Path</p> <p>Work through notebooks in numerical order within each module.</p>"},{"location":"getting-started/quickstart/#step-6-your-first-challenge","title":"Step 6: Your First Challenge","text":"<p>Ready for a small challenge? Try this:</p>"},{"location":"getting-started/quickstart/#challenge-unemployment-rate-analysis","title":"Challenge: Unemployment Rate Analysis","text":"<ol> <li>Open a new notebook: File \u2192 New \u2192 Notebook</li> <li>Select the Python 3 (ipykernel) kernel</li> <li>Copy and modify the GDP code to download unemployment data</li> <li>The FRED series code for unemployment is: <code>'UNRATE'</code></li> </ol> Need Help? <pre><code>import pandas as pd\nfrom pandas_datareader import data as pdr\nimport matplotlib.pyplot as plt\n\n# Download unemployment rate\nunemployment = pdr.get_data_fred('UNRATE', start='2000')\n\n# Plot\nplt.figure(figsize=(12, 6))\nplt.plot(unemployment.index, unemployment.values)\nplt.title('US Unemployment Rate (%)', fontsize=14)\nplt.xlabel('Year')\nplt.ylabel('Unemployment Rate (%)')\nplt.grid(True, alpha=0.3)\nplt.tight_layout()\nplt.show()\n</code></pre> Solution <p>Run the code above! You should see the unemployment rate over time, clearly showing recessions (2008-2009, 2020).</p>"},{"location":"getting-started/quickstart/#essential-jupyter-skills","title":"Essential Jupyter Skills","text":""},{"location":"getting-started/quickstart/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"<p>Master these shortcuts to work faster:</p> Shortcut Action <code>Shift + Enter</code> Run cell and move to next <code>Ctrl + Enter</code> Run cell and stay <code>A</code> Insert cell above <code>B</code> Insert cell below <code>D D</code> (press twice) Delete cell <code>M</code> Convert to Markdown <code>Y</code> Convert to Code <code>Ctrl + S</code> Save notebook"},{"location":"getting-started/quickstart/#cell-types","title":"Cell Types","text":"<ul> <li>Code cells: Python code (blue left border)</li> <li>Markdown cells: Text and formatting (no left border)</li> </ul>"},{"location":"getting-started/quickstart/#running-multiple-cells","title":"Running Multiple Cells","text":"<ul> <li>Run All: Cell \u2192 Run All Cells</li> <li>Run Above: Cell \u2192 Run All Above</li> <li>Restart Kernel: Kernel \u2192 Restart Kernel</li> </ul> <p>Kernel Restart</p> <p>Restarting the kernel clears all variables. You'll need to run cells again from the top.</p>"},{"location":"getting-started/quickstart/#next-steps","title":"Next Steps","text":"<p>Now that you're set up, here's what to do next:</p>"},{"location":"getting-started/quickstart/#1-complete-module-1-foundations","title":"1. Complete Module 1: Foundations","text":"<p>Work through the notebooks in order:</p> <ul> <li> 01_Introduction.ipynb</li> <li> 02_Professional_Development_Environment.ipynb</li> <li> 03_Python_Fundamentals_Data_Types.ipynb</li> <li> ... continue through all 24 notebooks</li> </ul>"},{"location":"getting-started/quickstart/#2-practice-practice-practice","title":"2. Practice, Practice, Practice","text":"<p>For each notebook:</p> <ol> <li>Read the explanations</li> <li>Run all code cells</li> <li>Modify code and experiment</li> <li>Complete exercises (if present)</li> <li>Take notes in markdown cells</li> </ol>"},{"location":"getting-started/quickstart/#3-build-something","title":"3. Build Something","text":"<p>After Module 1, try a mini-project:</p> <ul> <li>Download and analyze economic data</li> <li>Create visualizations</li> <li>Replicate a simple economic model</li> <li>Share your work on GitHub</li> </ul>"},{"location":"getting-started/quickstart/#common-issues","title":"Common Issues","text":""},{"location":"getting-started/quickstart/#kernel-is-busy","title":"Kernel is Busy","text":"<p>Symptom: Cell has <code>[*]</code> and won't finish</p> <p>Solutions: - Wait (might be running complex code) - Interrupt: Kernel \u2192 Interrupt Kernel - Restart: Kernel \u2192 Restart Kernel</p>"},{"location":"getting-started/quickstart/#import-error","title":"Import Error","text":"<p>Symptom: <code>ModuleNotFoundError: No module named 'package'</code></p> <p>Solutions: 1. Check environment is activated: <code>conda list</code> 2. Install missing package: <code>conda install package-name</code> 3. Restart Jupyter after installing</p>"},{"location":"getting-started/quickstart/#cant-save-notebook","title":"Can't Save Notebook","text":"<p>Symptom: Save icon greyed out or error message</p> <p>Solutions: - Check file permissions - Save a copy: File \u2192 Save Notebook As - Close and reopen Jupyter</p>"},{"location":"getting-started/quickstart/#learning-resources","title":"Learning Resources","text":""},{"location":"getting-started/quickstart/#while-you-learn","title":"While You Learn","text":"<p>Keep these open in browser tabs:</p> <ul> <li>Official Python Docs</li> <li>NumPy Documentation</li> <li>Pandas Documentation</li> <li>Stack Overflow (for questions)</li> </ul>"},{"location":"getting-started/quickstart/#if-you-get-stuck","title":"If You Get Stuck","text":"<ol> <li>Read error messages carefully - They're helpful!</li> <li>Google the error - Someone has likely solved it</li> <li>Check the FAQ - Course FAQ</li> <li>Ask for help - GitHub Discussions</li> </ol>"},{"location":"getting-started/quickstart/#tips-for-success","title":"Tips for Success","text":""},{"location":"getting-started/quickstart/#1-type-code-yourself","title":"1. Type Code Yourself","text":"<p>\u274c Don't: Copy-paste code \u2705 Do: Type it out manually</p> <p>Why: You learn by doing. Typing helps you remember syntax and catch mistakes.</p>"},{"location":"getting-started/quickstart/#2-experiment-freely","title":"2. Experiment Freely","text":"<ul> <li>Change parameters</li> <li>Try different data</li> <li>Break things (in a copy!)</li> <li>See what happens</li> </ul>"},{"location":"getting-started/quickstart/#3-use-version-control","title":"3. Use Version Control","text":"<p>Save your progress with Git:</p> <pre><code># Make changes to notebooks\ngit add .\ngit commit -m \"Completed Module 1.3\"\ngit push\n</code></pre>"},{"location":"getting-started/quickstart/#4-take-breaks","title":"4. Take Breaks","text":"<ul> <li>Complex material takes time</li> <li>Don't rush</li> <li>Sleep on difficult concepts</li> <li>Come back refreshed</li> </ul>"},{"location":"getting-started/quickstart/#5-join-the-community","title":"5. Join the Community","text":"<ul> <li>Share your progress</li> <li>Ask questions</li> <li>Help others</li> <li>Build your network</li> </ul>"},{"location":"getting-started/quickstart/#youre-ready","title":"You're Ready! \ud83d\ude80","text":"<p>You now know how to:</p> <ul> <li>\u2705 Launch Jupyter Lab</li> <li>\u2705 Run notebook cells</li> <li>\u2705 Download economic data</li> <li>\u2705 Create visualizations</li> <li>\u2705 Navigate the course</li> </ul> <p>Time to dive deep into computational economics!</p> <p> Start Module 1  Get Help</p> <p>Remember</p> <p>\"The best way to learn programming is to program. Don't just read \u2013 code!\"</p>"},{"location":"getting-started/structure/","title":"Course Structure","text":"<p>Overview of how the course is organized and recommended learning paths.</p>"},{"location":"getting-started/structure/#module-organization","title":"Module Organization","text":"<p>The course consists of 10 comprehensive modules plus supplementary materials:</p>"},{"location":"getting-started/structure/#core-modules-1-3","title":"Core Modules (1-3)","text":"<p>Building the foundation for computational economics.</p>"},{"location":"getting-started/structure/#application-modules-4-10","title":"Application Modules (4-10)","text":"<p>Applying methods to economics, finance, and specialized topics.</p> <p>For detailed module information, see All Modules.</p>"},{"location":"modules/","title":"All Modules","text":"<p>Explore the complete curriculum of the Computational Economics and Data Science course.</p>"},{"location":"modules/#course-structure","title":"Course Structure","text":"<p>The course is organized into 10 comprehensive modules covering everything from Python fundamentals to frontier research methods.</p>"},{"location":"modules/#foundation-modules","title":"Foundation Modules","text":""},{"location":"modules/#module-1-foundations","title":"Module 1: Foundations","text":"<p>Duration: 4-6 weeks | 24 notebooks | Beginner</p> <p>Python programming, NumPy, Pandas, data visualization, APIs, and professional development tools.</p> <p>Topics: Python fundamentals, scientific computing, data acquisition, visualization, debugging</p>"},{"location":"modules/#module-2-numerical-methods","title":"Module 2: Numerical Methods","text":"<p>Duration: 3-4 weeks | 8 notebooks | Intermediate</p> <p>Computational algorithms for solving economic problems numerically.</p> <p>Topics: Linear algebra, optimization, root-finding, interpolation, integration, differential equations</p>"},{"location":"modules/#module-3-economic-modeling","title":"Module 3: Economic Modeling","text":"<p>Duration: 3-4 weeks | 7 notebooks | Intermediate</p> <p>Core frameworks for computational economics and dynamic optimization.</p> <p>Topics: Dynamic programming, value iteration, policy iteration, continuous states, calibration</p>"},{"location":"modules/#macroeconomics-modules","title":"Macroeconomics Modules","text":""},{"location":"modules/#material-building-columns-module-4-macro-models","title":":material-building-columns: Module 4: Macro Models","text":"<p>Duration: 4-5 weeks | 7 notebooks | Advanced</p> <p>Computational macroeconomic theory and applications.</p> <p>Topics: Job search, growth models, RBC, OLG, New Keynesian, HANK, endogenous growth</p>"},{"location":"modules/#microeconomics-modules","title":"Microeconomics Modules","text":""},{"location":"modules/#material-users-module-5-micro-models","title":":material-users: Module 5: Micro Models","text":"<p>Duration: 3-4 weeks | 6 notebooks | Advanced</p> <p>Computational microeconomic theory and game theory.</p> <p>Topics: Consumer/producer theory, general equilibrium, game theory, discrete choice, contracts</p>"},{"location":"modules/#econometrics-statistics","title":"Econometrics &amp; Statistics","text":""},{"location":"modules/#module-6-econometrics","title":"Module 6: Econometrics","text":"<p>Duration: 5-6 weeks | 12 notebooks | Intermediate to Advanced</p> <p>Modern econometric methods and causal inference.</p> <p>Topics: OLS, MLE, causal inference, GMM, IV, RDD, synthetic control, DiD, Bayesian, panel data</p>"},{"location":"modules/#module-8-time-series","title":"Module 8: Time Series","text":"<p>Duration: 3-4 weeks | 6 notebooks | Advanced</p> <p>Time series econometrics and forecasting.</p> <p>Topics: ARMA, ARIMA, VAR, GARCH, cointegration, VECMs</p>"},{"location":"modules/#machine-learning","title":"Machine Learning","text":""},{"location":"modules/#module-7-machine-learning","title":"Module 7: Machine Learning","text":"<p>Duration: 6-8 weeks | 25 notebooks | Intermediate to Advanced</p> <p>Comprehensive machine learning for economists, from classical methods to deep learning.</p> <p>Topics: ML fundamentals, gradient boosting, SVM, deep learning, CNNs, RNNs, transformers, reinforcement learning, causal ML, NLP, GNNs</p>"},{"location":"modules/#finance","title":"Finance","text":""},{"location":"modules/#material-money-bill-trend-up-module-9-finance","title":":material-money-bill-trend-up: Module 9: Finance","text":"<p>Duration: 3-4 weeks | 7 notebooks | Advanced</p> <p>Computational methods in finance and asset pricing.</p> <p>Topics: Portfolio theory, asset pricing, option pricing, continuous-time finance, credit risk, high-frequency data</p>"},{"location":"modules/#advanced-topics","title":"Advanced Topics","text":""},{"location":"modules/#material-network-wired-module-10-specialized-models","title":":material-network-wired: Module 10: Specialized Models","text":"<p>Duration: 2-3 weeks | 3 notebooks | Advanced</p> <p>Cutting-edge computational methods for economics.</p> <p>Topics: Agent-based models, heterogeneous agents, network economics</p>"},{"location":"modules/#appendices","title":"Appendices","text":""},{"location":"modules/#mathematical-foundations","title":"Mathematical Foundations","text":"<p>Rigorous mathematical background for the course.</p> <p>Topics: Real analysis, multivariate calculus, probability theory, linear algebra</p>"},{"location":"modules/#course-progression","title":"Course Progression","text":""},{"location":"modules/#recommended-path","title":"Recommended Path","text":"<pre><code>graph TD\n    A[Module 1: Foundations] --&gt; B[Module 2: Numerical Methods]\n    B --&gt; C[Module 3: Economic Modeling]\n    C --&gt; D[Module 4: Macro Models]\n    C --&gt; E[Module 5: Micro Models]\n    B --&gt; F[Module 6: Econometrics]\n    F --&gt; G[Module 8: Time Series]\n    A --&gt; H[Module 7: Machine Learning]\n    C --&gt; I[Module 9: Finance]\n    D --&gt; J[Module 10: Specialized]\n    E --&gt; J</code></pre>"},{"location":"modules/#alternative-paths","title":"Alternative Paths","text":"Theory-FocusedApplied/EmpiricalFinance-Focused <ol> <li>Foundations \u2192 Numerical Methods \u2192 Economic Modeling</li> <li>Macro Models \u2192 Micro Models \u2192 Finance</li> <li>Specialized Models</li> </ol> <p>Best for: Economics PhD students</p> <ol> <li>Foundations \u2192 Econometrics \u2192 Time Series</li> <li>Machine Learning \u2192 Causal ML</li> <li>Applied projects</li> </ol> <p>Best for: Data scientists, applied economists</p> <ol> <li>Foundations \u2192 Numerical Methods</li> <li>Econometrics \u2192 Time Series</li> <li>Finance \u2192 Portfolio projects</li> </ol> <p>Best for: Quantitative finance professionals</p>"},{"location":"modules/#difficulty-progression","title":"Difficulty Progression","text":"Module Difficulty Prerequisites 1: Foundations \u2b50 Beginner None 2: Numerical Methods \u2b50\u2b50 Intermediate Module 1 3: Economic Modeling \u2b50\u2b50 Intermediate Modules 1-2 6: Econometrics \u2b50\u2b50 Intermediate Modules 1-2 7: Machine Learning \u2b50\u2b50\u2b50 Intermediate-Advanced Modules 1-2 4: Macro Models \u2b50\u2b50\u2b50 Advanced Modules 1-3 5: Micro Models \u2b50\u2b50\u2b50 Advanced Modules 1-3 8: Time Series \u2b50\u2b50\u2b50 Advanced Modules 1-2, 6 9: Finance \u2b50\u2b50\u2b50 Advanced Modules 1-3 10: Specialized \u2b50\u2b50\u2b50\u2b50 Advanced Modules 1-5"},{"location":"modules/#total-course-statistics","title":"Total Course Statistics","text":"<ul> <li>116 Jupyter notebooks</li> <li>10 core modules + appendices</li> <li>300+ hours of content</li> <li>50+ datasets included</li> <li>100+ diagrams and visualizations</li> </ul>"},{"location":"modules/#get-started","title":"Get Started","text":"<p>Ready to begin your journey?</p> <p> Install &amp; Setup  Quick Start  Module 1: Foundations</p>"},{"location":"modules/01-foundations/","title":"Module 1: Foundations","text":"<p>Duration: 4-6 weeks | Notebooks: 24 | Difficulty: Beginner to Intermediate</p>"},{"location":"modules/01-foundations/#overview","title":"Overview","text":"<p>This module provides a comprehensive introduction to Python programming, data science tools, and professional development practices. Whether you're new to programming or transitioning from another language, you'll build a solid foundation for computational economics.</p>"},{"location":"modules/01-foundations/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Write clean, efficient Python code following best practices</li> <li>\u2713 Manipulate and analyze data using NumPy and Pandas</li> <li>\u2713 Create publication-quality visualizations</li> <li>\u2713 Acquire data from APIs and web sources</li> <li>\u2713 Use Git for version control</li> <li>\u2713 Set up professional development environments</li> <li>\u2713 Debug code effectively</li> <li>\u2713 Write unit tests and document code</li> </ul>"},{"location":"modules/01-foundations/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/01-foundations/#1-introduction-setup-notebooks-01-02","title":"1. Introduction &amp; Setup (Notebooks 01-02)","text":"<p>Learn about computational economics history and set up your professional development environment.</p> <p>Key Concepts: - Evolution of computational methods in economics - Git and GitHub workflow - Conda environment management - VS Code configuration - Jupyter Lab and notebooks</p> <p>Notebooks: - <code>01_Introduction.ipynb</code> - Course overview and computational history - <code>02_Professional_Development_Environment.ipynb</code> - Setup guide</p>"},{"location":"modules/01-foundations/#2-python-fundamentals-notebooks-03-11","title":"2. Python Fundamentals (Notebooks 03-11)","text":"<p>Master core Python programming concepts with an emphasis on scientific computing.</p>"},{"location":"modules/01-foundations/#data-types-structures","title":"Data Types &amp; Structures","text":"<ul> <li>03: Python Fundamentals - Variables, types, operators</li> <li>04: Python Data Model - Object model, special methods, protocols</li> <li>05: Lists and Tuples - Sequence types and operations</li> <li>06: Advanced String Processing - String manipulation and formatting</li> <li>07: Dictionaries - Hash maps and key-value stores</li> <li>08: Sets - Set theory and operations</li> </ul>"},{"location":"modules/01-foundations/#control-flow-functions","title":"Control Flow &amp; Functions","text":"<ul> <li>09: Control Flow and Error Handling - Conditionals, loops, exceptions</li> <li>10: Advanced Functions - Higher-order functions, decorators, closures</li> <li>11: Object-Oriented Programming - Classes, inheritance, composition</li> </ul> <p>Key Skills: - Pythonic idioms and best practices - Functional programming concepts - OOP design patterns - Error handling and debugging</p>"},{"location":"modules/01-foundations/#3-scientific-computing-notebooks-12-13","title":"3. Scientific Computing (Notebooks 12-13)","text":"<p>Dive into the core libraries for numerical computing and data analysis.</p>"},{"location":"modules/01-foundations/#numpy-numerical-arrays","title":"NumPy: Numerical Arrays","text":"<p>Notebook 12: <code>12_NumPy.ipynb</code></p> <ul> <li>N-dimensional arrays and operations</li> <li>Broadcasting and vectorization</li> <li>Linear algebra operations</li> <li>Random number generation</li> <li>Performance optimization</li> </ul>"},{"location":"modules/01-foundations/#pandas-data-manipulation","title":"Pandas: Data Manipulation","text":"<p>Notebook 13: <code>13_Pandas.ipynb</code></p> <ul> <li>DataFrames and Series</li> <li>Data cleaning and transformation</li> <li>Grouping and aggregation</li> <li>Time series functionality</li> <li>Data I/O (CSV, Excel, SQL)</li> </ul>"},{"location":"modules/01-foundations/#4-data-acquisition-notebooks-14-15-18-19","title":"4. Data Acquisition (Notebooks 14-15, 18-19)","text":"<p>Learn to acquire data from various sources for economic analysis.</p> <p>Topics: - 14: Introduction to Data Acquisition - Data sources overview - 15: Accessing Economic Data via APIs - FRED API, pandas-datareader - 18: Web Scraping - BeautifulSoup, ethical scraping - 19: SQL Databases - SQL queries, database connections</p> <p>Practical Skills: - Working with REST APIs - HTML parsing and data extraction - Database queries with SQL - Data validation and cleaning</p>"},{"location":"modules/01-foundations/#5-data-visualization-notebook-16","title":"5. Data Visualization (Notebook 16)","text":"<p>Create compelling visualizations for economic data.</p> <p>Notebook 16: <code>16_Data_Visualization.ipynb</code></p> <p>Tools: - Matplotlib for publication-quality plots - Seaborn for statistical graphics - Plot customization and styling - Multi-panel figures</p> <p>Plot Types: - Time series plots - Scatter plots and correlations - Histograms and distributions - Box plots and violin plots - Heatmaps</p>"},{"location":"modules/01-foundations/#6-scientific-python-notebooks-20-21","title":"6. Scientific Python (Notebooks 20-21)","text":"<p>Advanced scientific computing with SciPy and symbolic mathematics.</p> <p>Notebook 20: <code>20_SciPy.ipynb</code> - Optimization algorithms - Integration and ODE solvers - Statistical distributions - Signal processing</p> <p>Notebook 21: <code>21_SymPy.ipynb</code> - Symbolic mathematics - Equation solving - Calculus operations - LaTeX rendering</p>"},{"location":"modules/01-foundations/#7-professional-practices-notebooks-17-22-24","title":"7. Professional Practices (Notebooks 17, 22-24)","text":"<p>Develop professional coding skills and workflows.</p> <p>Topics: - 17: Effective Debugging - Debugging strategies and tools - 22: Computational Complexity - Big-O analysis, algorithm efficiency - 23: Performance Optimization - Profiling, optimization techniques - 24: Production Code Standards - Testing, documentation, CI/CD</p> <p>Best Practices: - Test-driven development - Code documentation - Version control - Code review process</p>"},{"location":"modules/01-foundations/#prerequisites","title":"Prerequisites","text":"<ul> <li>Basic computer literacy</li> <li>High school mathematics (algebra, basic calculus)</li> <li>No prior programming experience required</li> </ul>"},{"location":"modules/01-foundations/#time-commitment","title":"Time Commitment","text":"<ul> <li>Lectures/Reading: 2-3 hours per notebook</li> <li>Exercises: 1-2 hours per notebook</li> <li>Projects: 10-15 hours total</li> <li>Total: 80-120 hours</li> </ul>"},{"location":"modules/01-foundations/#assessment","title":"Assessment","text":""},{"location":"modules/01-foundations/#exercises","title":"Exercises","text":"<p>Each notebook includes: - Guided examples with explanations - Practice problems - Challenge exercises</p>"},{"location":"modules/01-foundations/#projects","title":"Projects","text":"<ul> <li>Data acquisition and cleaning project</li> <li>Visualization portfolio</li> <li>Analysis of economic dataset</li> </ul>"},{"location":"modules/01-foundations/#resources","title":"Resources","text":""},{"location":"modules/01-foundations/#official-documentation","title":"Official Documentation","text":"<ul> <li>Python Documentation</li> <li>NumPy Documentation</li> <li>Pandas Documentation</li> <li>Matplotlib Documentation</li> </ul>"},{"location":"modules/01-foundations/#recommended-reading","title":"Recommended Reading","text":"<ul> <li>McKinney, W. (2022). Python for Data Analysis, 3<sup>rd</sup> ed.</li> <li>VanderPlas, J. (2016). Python Data Science Handbook</li> <li>Ramalho, L. (2022). Fluent Python, 2<sup>nd</sup> ed.</li> </ul>"},{"location":"modules/01-foundations/#online-resources","title":"Online Resources","text":"<ul> <li>Real Python</li> <li>Python Data Science Handbook</li> <li>NumPy Tutorial</li> </ul>"},{"location":"modules/01-foundations/#next-module","title":"Next Module","text":"<p>Once you've mastered the foundations, proceed to:</p> <p> Module 2: Numerical Methods</p> <p>Learn the computational algorithms that power economic modeling and analysis.</p>"},{"location":"modules/02-numerical-methods/","title":"Module 2: Numerical Methods","text":"<p>Master the computational techniques essential for solving economic models.</p>"},{"location":"modules/02-numerical-methods/#overview","title":"Overview","text":"<p>This module provides comprehensive coverage of numerical methods used in computational economics. You'll learn the mathematical foundations and practical implementations of algorithms for solving systems of equations, optimization problems, and differential equations.</p> <p>Duration: 4-5 weeks Difficulty: Intermediate Prerequisites: Module 1 (Foundations), Calculus, Linear Algebra</p>"},{"location":"modules/02-numerical-methods/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Solve linear systems using direct and iterative methods</li> <li>\u2713 Apply root-finding algorithms to nonlinear equations</li> <li>\u2713 Implement numerical differentiation and integration</li> <li>\u2713 Solve unconstrained and constrained optimization problems</li> <li>\u2713 Use interpolation and approximation methods</li> <li>\u2713 Solve ordinary and partial differential equations numerically</li> </ul>"},{"location":"modules/02-numerical-methods/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/02-numerical-methods/#1-linear-algebra","title":"1. Linear Algebra","text":"<p>Notebook: <code>01_Linear_Algebra.ipynb</code></p> <ul> <li>Direct methods: LU decomposition, Cholesky factorization</li> <li>Iterative methods: Jacobi, Gauss-Seidel, conjugate gradient</li> <li>Eigenvalue problems and spectral decomposition</li> <li>Sparse matrix techniques</li> <li>Applications to economic models</li> </ul> <p>Key Applications: - Input-output analysis - Markov chains and transition matrices - Solving large-scale equilibrium models</p>"},{"location":"modules/02-numerical-methods/#2-numerical-preliminaries","title":"2. Numerical Preliminaries","text":"<p>Notebook: <code>02_Numerical_Preliminaries.ipynb</code></p> <ul> <li>Floating-point arithmetic and numerical precision</li> <li>Conditioning and stability</li> <li>Error analysis</li> <li>Algorithm complexity</li> <li>Best practices for numerical computing</li> </ul>"},{"location":"modules/02-numerical-methods/#3-numerical-differentiation","title":"3. Numerical Differentiation","text":"<p>Notebook: <code>03_Numerical_Differentiation.ipynb</code></p> <ul> <li>Finite difference methods (forward, backward, central)</li> <li>Richardson extrapolation</li> <li>Automatic differentiation</li> <li>Computing Jacobians and Hessians</li> <li>Applications to economic optimization</li> </ul>"},{"location":"modules/02-numerical-methods/#4-root-finding","title":"4. Root Finding","text":"<p>Notebook: <code>04_Root_Finding.ipynb</code></p> <ul> <li>Bisection and bracketing methods</li> <li>Newton-Raphson and quasi-Newton methods</li> <li>Secant method and Brent's method</li> <li>Systems of nonlinear equations</li> <li>Fixed-point iteration</li> </ul> <p>Economic Applications: - Finding equilibrium prices - Solving Euler equations - Computing steady states</p>"},{"location":"modules/02-numerical-methods/#5-optimization","title":"5. Optimization","text":"<p>Notebook: <code>05_Optimization.ipynb</code></p> <ul> <li>Unconstrained optimization: gradient descent, Newton's method</li> <li>Constrained optimization: penalty methods, Lagrange multipliers</li> <li>Linear programming and the simplex algorithm</li> <li>Nonlinear programming: BFGS, conjugate gradient</li> <li>Global optimization methods</li> </ul> <p>Economic Applications: - Utility maximization - Cost minimization - Optimal control problems - Portfolio optimization</p>"},{"location":"modules/02-numerical-methods/#6-interpolation-and-approximation","title":"6. Interpolation and Approximation","text":"<p>Notebook: <code>06_Interpolation_and_Approximation.ipynb</code></p> <ul> <li>Polynomial interpolation (Lagrange, Newton)</li> <li>Spline interpolation (linear, cubic, B-splines)</li> <li>Chebyshev polynomials</li> <li>Function approximation methods</li> <li>Curse of dimensionality</li> </ul> <p>Applications: - Value function approximation - Policy function representation - Solving dynamic programming problems</p>"},{"location":"modules/02-numerical-methods/#7-numerical-integration","title":"7. Numerical Integration","text":"<p>Notebook: <code>07_Numerical_Integration.ipynb</code></p> <ul> <li>Riemann sums and trapezoidal rule</li> <li>Simpson's rule and adaptive quadrature</li> <li>Gaussian quadrature</li> <li>Monte Carlo integration</li> <li>Quasi-Monte Carlo methods</li> </ul> <p>Economic Applications: - Computing expected values - Welfare calculations - Numerical computation of integrals in continuous-state models</p>"},{"location":"modules/02-numerical-methods/#8-differential-equations","title":"8. Differential Equations","text":"<p>Notebook: <code>08_Differential_Equations.ipynb</code></p> <ul> <li>Initial value problems: Euler, Runge-Kutta methods</li> <li>Boundary value problems: shooting and finite difference</li> <li>Stiff equations and adaptive step sizes</li> <li>Partial differential equations (PDEs)</li> <li>Finite element methods</li> </ul> <p>Applications: - Dynamic economic models - Asset pricing (Black-Scholes PDE) - Growth models with differential equations - Spatial economics models</p>"},{"location":"modules/02-numerical-methods/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/02-numerical-methods/#required-knowledge","title":"Required Knowledge","text":"<p>Mathematics: - Single and multivariable calculus - Linear algebra (matrices, eigenvalues) - Basic real analysis</p> <p>Programming: - Python fundamentals (Module 1) - NumPy and array operations - Basic algorithm implementation</p>"},{"location":"modules/02-numerical-methods/#key-libraries","title":"Key Libraries","text":"<p>This module uses:</p> <ul> <li>NumPy: Core numerical operations</li> <li>SciPy: Scientific computing algorithms</li> <li>Matplotlib: Visualization</li> <li>QuantEcon: Economic-specific numerical tools</li> </ul>"},{"location":"modules/02-numerical-methods/#learning-path","title":"Learning Path","text":""},{"location":"modules/02-numerical-methods/#week-1-linear-systems-and-preliminaries","title":"Week 1: Linear Systems and Preliminaries","text":"<ul> <li>Complete notebooks 01-02</li> <li>Implement basic linear solvers</li> <li>Understand numerical precision</li> </ul>"},{"location":"modules/02-numerical-methods/#week-2-differentiation-and-root-finding","title":"Week 2: Differentiation and Root Finding","text":"<ul> <li>Complete notebooks 03-04</li> <li>Practice Newton's method</li> <li>Apply to economic equilibrium problems</li> </ul>"},{"location":"modules/02-numerical-methods/#week-3-optimization","title":"Week 3: Optimization","text":"<ul> <li>Complete notebook 05</li> <li>Implement optimization algorithms</li> <li>Solve constrained problems</li> </ul>"},{"location":"modules/02-numerical-methods/#week-4-approximation-and-integration","title":"Week 4: Approximation and Integration","text":"<ul> <li>Complete notebooks 06-07</li> <li>Master interpolation techniques</li> <li>Compute integrals numerically</li> </ul>"},{"location":"modules/02-numerical-methods/#week-5-differential-equations","title":"Week 5: Differential Equations","text":"<ul> <li>Complete notebook 08</li> <li>Solve ODEs and PDEs</li> <li>Apply to economic dynamics</li> </ul>"},{"location":"modules/02-numerical-methods/#practice-exercises","title":"Practice Exercises","text":"<p>Throughout the notebooks, you'll find exercises such as:</p> <ol> <li>Linear Systems: Solve large sparse systems from economic input-output tables</li> <li>Root Finding: Find equilibrium in a simple exchange economy</li> <li>Optimization: Solve a consumer's utility maximization problem</li> <li>Interpolation: Approximate value functions in dynamic programming</li> <li>Integration: Compute expected utility with numerical integration</li> <li>Differential Equations: Solve the Solow growth model</li> </ol>"},{"location":"modules/02-numerical-methods/#common-challenges","title":"Common Challenges","text":""},{"location":"modules/02-numerical-methods/#challenge-numerical-instability","title":"Challenge: Numerical Instability","text":"<p>Solution: - Use stable algorithms (e.g., QR instead of normal equations) - Check condition numbers - Rescale variables</p>"},{"location":"modules/02-numerical-methods/#challenge-slow-convergence","title":"Challenge: Slow Convergence","text":"<p>Solution: - Choose better initial guesses - Use acceleration techniques - Consider alternative algorithms</p>"},{"location":"modules/02-numerical-methods/#challenge-high-dimensionality","title":"Challenge: High Dimensionality","text":"<p>Solution: - Exploit problem structure - Use sparse methods - Consider dimension reduction</p>"},{"location":"modules/02-numerical-methods/#resources","title":"Resources","text":""},{"location":"modules/02-numerical-methods/#essential-reading","title":"Essential Reading","text":"<ul> <li>Judd, K. (1998). Numerical Methods in Economics. MIT Press</li> <li>Press, W. et al. (2007). Numerical Recipes. Cambridge</li> <li>Miranda, M. &amp; Fackler, P. (2002). Applied Computational Economics. MIT Press</li> </ul>"},{"location":"modules/02-numerical-methods/#documentation","title":"Documentation","text":"<ul> <li>NumPy Documentation</li> <li>SciPy Optimization</li> <li>QuantEcon Lectures</li> </ul>"},{"location":"modules/02-numerical-methods/#online-resources","title":"Online Resources","text":"<ul> <li>MIT OpenCourseWare: Numerical Analysis</li> <li>Stanford CME 292: Advanced MATLAB for Scientific Computing</li> <li>Numerical Tours: www.numerical-tours.com</li> </ul>"},{"location":"modules/02-numerical-methods/#assessment","title":"Assessment","text":"<p>Master the following to complete this module:</p> <ul> <li> Implement basic numerical algorithms from scratch</li> <li> Use SciPy effectively for numerical problems</li> <li> Choose appropriate methods for different problem types</li> <li> Understand stability and convergence issues</li> <li> Apply methods to economic problems</li> <li> Interpret numerical results correctly</li> </ul>"},{"location":"modules/02-numerical-methods/#next-steps","title":"Next Steps","text":"<p>After completing this module:</p> <ol> <li>Module 3: Economic Modeling - Apply these methods to dynamic programming</li> <li>Module 4: Macro Models - Use numerical methods for RBC and DSGE models</li> <li>Module 6: Econometrics - Apply optimization to estimation problems</li> </ol>"},{"location":"modules/02-numerical-methods/#need-help","title":"Need Help?","text":"<ul> <li>Review Mathematical Appendices</li> <li>Check FAQ for common issues</li> <li>Ask questions in Discussions</li> </ul> <p>Ready to dive in? Start with notebook 01_Linear_Algebra.ipynb!</p>"},{"location":"modules/03-economic-modeling/","title":"Module 3: Economic Modeling","text":"<p>Learn to solve dynamic economic models using computational methods.</p>"},{"location":"modules/03-economic-modeling/#overview","title":"Overview","text":"<p>This module teaches you how to formulate and solve economic models computationally, with a focus on dynamic programming (DP) and optimal control. You'll master the tools needed to analyze intertemporal decision-making, optimal policies, and structural estimation.</p> <p>Duration: 5-6 weeks Difficulty: Advanced Prerequisites: Modules 1-2, Dynamic optimization theory</p>"},{"location":"modules/03-economic-modeling/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Formulate economic problems as dynamic programs</li> <li>\u2713 Solve discrete and continuous-state DP problems</li> <li>\u2713 Implement value function iteration and policy iteration</li> <li>\u2713 Handle infinite-horizon and finite-horizon problems</li> <li>\u2713 Apply optimal stopping techniques</li> <li>\u2713 Use robust control methods</li> <li>\u2713 Perform structural estimation of economic models</li> </ul>"},{"location":"modules/03-economic-modeling/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/03-economic-modeling/#1-dynamic-programming","title":"1. Dynamic Programming","text":"<p>Notebook: <code>01_Dynamic_Programming.ipynb</code></p> <ul> <li>Bellman equations and optimality principles</li> <li>Value function iteration (VFI)</li> <li>Policy function iteration (PFI)</li> <li>Modified policy iteration</li> <li>Convergence theory and error bounds</li> <li>Howard improvement algorithm</li> </ul> <p>Key Concepts: - Contraction mapping theorem - Successive approximations - Speedup techniques</p> <p>Applications: - Optimal savings problems - Inventory management - Resource extraction</p>"},{"location":"modules/03-economic-modeling/#2-dp-with-continuous-states","title":"2. DP with Continuous States","text":"<p>Notebook: <code>02_DP_with_Continuous_States.ipynb</code></p> <ul> <li>Discretization methods</li> <li>Function approximation techniques</li> <li>Interpolation in DP</li> <li>Endogenous grid method (EGM)</li> <li>Time iteration vs. value iteration</li> <li>Envelope condition method</li> </ul> <p>Techniques: - Grid-based methods - Collocation - Projection methods</p> <p>Applications: - Consumption-savings problems - Income fluctuation problems - Asset accumulation models</p>"},{"location":"modules/03-economic-modeling/#3-discrete-continuous-dp","title":"3. Discrete-Continuous DP","text":"<p>Notebook: <code>03_Discrete_Continuous_DP.ipynb</code></p> <ul> <li>Mixed discrete-continuous choice problems</li> <li>Logit smoothing and discrete choice</li> <li>Nested fixed point algorithm</li> <li>MPEC (Mathematical Programming with Equilibrium Constraints)</li> <li>Hotz-Miller conditional choice probabilities</li> </ul> <p>Applications: - Labor supply with discrete hours - Discrete investment decisions - Entry/exit problems - Durable goods purchases</p>"},{"location":"modules/03-economic-modeling/#4-estimation-and-calibration","title":"4. Estimation and Calibration","text":"<p>Notebook: <code>04_Estimation_and_Calibration.ipynb</code></p> <ul> <li>Calibration vs. estimation</li> <li>Method of moments</li> <li>Simulated method of moments (SMM)</li> <li>Indirect inference</li> <li>Model validation and testing</li> <li>Sensitivity analysis</li> </ul> <p>Workflow: 1. Specify economic model 2. Choose parameters to calibrate/estimate 3. Define moment conditions or objectives 4. Optimize to match data 5. Validate and test</p> <p>Applications: - Calibrating macro models - Estimating discount factors - Matching wealth distributions</p>"},{"location":"modules/03-economic-modeling/#5-optimal-stopping-problems","title":"5. Optimal Stopping Problems","text":"<p>Notebook: <code>05_Optimal_Stopping_Problems.ipynb</code></p> <ul> <li>Theory of optimal stopping</li> <li>Reservation values and stopping rules</li> <li>Sequential decision problems</li> <li>American option pricing framework</li> <li>Search models</li> </ul> <p>Solution Methods: - Backward induction - Value function approach - Smooth pasting conditions</p> <p>Applications: - Job search models - Real options - Marriage/divorce decisions - Technology adoption timing</p>"},{"location":"modules/03-economic-modeling/#6-robust-control","title":"6. Robust Control","text":"<p>Notebook: <code>06_Robust_Control.ipynb</code></p> <ul> <li>Model uncertainty and robustness</li> <li>Risk-sensitivity and entropy</li> <li>Robust dynamic programming</li> <li>Worst-case analysis</li> <li>Robustness-performance tradeoffs</li> <li>Connection to risk aversion</li> </ul> <p>Mathematical Tools: - Multiplier preferences - Constraint preferences - Detection error probabilities</p> <p>Applications: - Robust monetary policy - Robust portfolio choice - Precautionary behavior - Model diagnostics</p>"},{"location":"modules/03-economic-modeling/#7-structural-estimation","title":"7. Structural Estimation","text":"<p>Notebook: <code>07_Structural_Estimation.ipynb</code></p> <ul> <li>Maximum likelihood estimation of DP models</li> <li>Nested fixed point (NFXP) algorithm</li> <li>Two-step estimation procedures</li> <li>Computational challenges</li> <li>Identification issues</li> <li>Standard errors and inference</li> </ul> <p>Advanced Topics: - Rust's bus engine replacement problem - Dynamic discrete choice estimation - Parallel computing for structural models - Importance sampling</p> <p>Applications: - Estimating dynamic labor supply - Consumer durable goods demand - Firm dynamics and entry/exit</p>"},{"location":"modules/03-economic-modeling/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/03-economic-modeling/#required-knowledge","title":"Required Knowledge","text":"<p>Economics: - Intermediate micro and macro - Dynamic optimization - Basic game theory concepts</p> <p>Mathematics: - Real analysis and metric spaces - Probability theory - Optimization theory</p> <p>Programming: - Modules 1-2 completed - Comfortable with NumPy and numerical methods - Experience with optimization algorithms</p>"},{"location":"modules/03-economic-modeling/#key-libraries","title":"Key Libraries","text":"<ul> <li>NumPy: Array operations</li> <li>SciPy: Optimization and interpolation</li> <li>QuantEcon: Dynamic programming tools</li> <li>Numba: JIT compilation for speed</li> <li>Matplotlib: Visualization</li> </ul>"},{"location":"modules/03-economic-modeling/#learning-path","title":"Learning Path","text":""},{"location":"modules/03-economic-modeling/#week-1-dp-foundations","title":"Week 1: DP Foundations","text":"<ul> <li>Complete notebook 01</li> <li>Master VFI and PFI</li> <li>Understand Bellman equations</li> </ul>"},{"location":"modules/03-economic-modeling/#week-2-continuous-states","title":"Week 2: Continuous States","text":"<ul> <li>Complete notebook 02</li> <li>Implement interpolation methods</li> <li>Apply EGM</li> </ul>"},{"location":"modules/03-economic-modeling/#week-3-mixed-problems","title":"Week 3: Mixed Problems","text":"<ul> <li>Complete notebook 03</li> <li>Solve discrete-continuous problems</li> <li>Learn NFXP and MPEC</li> </ul>"},{"location":"modules/03-economic-modeling/#week-4-calibration-and-estimation","title":"Week 4: Calibration and Estimation","text":"<ul> <li>Complete notebook 04</li> <li>Match model moments to data</li> <li>Perform sensitivity analysis</li> </ul>"},{"location":"modules/03-economic-modeling/#week-5-optimal-stopping","title":"Week 5: Optimal Stopping","text":"<ul> <li>Complete notebook 05</li> <li>Solve search models</li> <li>Compute reservation values</li> </ul>"},{"location":"modules/03-economic-modeling/#week-6-robustness-and-structural-estimation","title":"Week 6: Robustness and Structural Estimation","text":"<ul> <li>Complete notebooks 06-07</li> <li>Implement robust control</li> <li>Estimate structural parameters</li> </ul>"},{"location":"modules/03-economic-modeling/#practice-exercises","title":"Practice Exercises","text":"<p>Key exercises throughout the module:</p> <ol> <li>Cake Eating Problem: Solve the classic optimal consumption problem</li> <li>Income Fluctuation: Model precautionary savings with income risk</li> <li>Job Search: Implement McCall search model with reservation wages</li> <li>Rust's Bus Problem: Replicate Rust (1987) bus engine replacement</li> <li>Robust Policy: Design robust policy under model misspecification</li> <li>Structural Estimation: Estimate dynamic discrete choice model</li> </ol>"},{"location":"modules/03-economic-modeling/#computational-strategies","title":"Computational Strategies","text":""},{"location":"modules/03-economic-modeling/#speed-optimization","title":"Speed Optimization","text":"<p>Problem: DP problems can be computationally intensive</p> <p>Solutions: - Use vectorization (avoid Python loops) - Apply Numba JIT compilation - Exploit monotonicity and concavity - Use coarser grids initially - Implement smart initialization</p>"},{"location":"modules/03-economic-modeling/#numerical-stability","title":"Numerical Stability","text":"<p>Problem: Value function iteration may diverge or be unstable</p> <p>Solutions: - Check contraction mapping conditions - Use smaller step sizes - Apply relaxation: \\(V_{n+1} = \\lambda \\tilde{V}_{n+1} + (1-\\lambda) V_n\\) - Monitor convergence metrics</p>"},{"location":"modules/03-economic-modeling/#curse-of-dimensionality","title":"Curse of Dimensionality","text":"<p>Problem: State space grows exponentially with dimensions</p> <p>Solutions: - Reduce state space when possible - Use sparse grids - Apply approximation methods - Consider simulation-based approaches</p>"},{"location":"modules/03-economic-modeling/#common-challenges","title":"Common Challenges","text":""},{"location":"modules/03-economic-modeling/#challenge-slow-convergence-in-vfi","title":"Challenge: Slow Convergence in VFI","text":"<p>Solutions: - Use policy iteration instead - Implement acceleration techniques (Anderson mixing) - Better initial guess from simpler model</p>"},{"location":"modules/03-economic-modeling/#challenge-non-smooth-value-functions","title":"Challenge: Non-Smooth Value Functions","text":"<p>Solutions: - Use finer grids near kinks - Apply smoothing techniques - Consider adaptive grids</p>"},{"location":"modules/03-economic-modeling/#challenge-high-dimensional-state-space","title":"Challenge: High-Dimensional State Space","text":"<p>Solutions: - Use endogenous grid method - Apply simulation-based approaches - Reduce dimensions through aggregation</p>"},{"location":"modules/03-economic-modeling/#resources","title":"Resources","text":""},{"location":"modules/03-economic-modeling/#essential-reading","title":"Essential Reading","text":"<p>Books: - Ljungqvist, L. &amp; Sargent, T. (2018). Recursive Macroeconomic Theory, 4<sup>th</sup> ed. - Stokey, N., Lucas, R., &amp; Prescott, E. (1989). Recursive Methods in Economic Dynamics - Adda, J. &amp; Cooper, R. (2003). Dynamic Economics</p> <p>Papers: - Rust, J. (1987). \"Optimal Replacement of GMC Bus Engines\" - Hotz, V. J. &amp; Miller, R. A. (1993). \"Conditional Choice Probabilities\" - Carroll, C. (2006). \"The Method of Endogenous Gridpoints\"</p>"},{"location":"modules/03-economic-modeling/#documentation","title":"Documentation","text":"<ul> <li>QuantEcon Lectures: Dynamic Programming</li> <li>SciPy Optimization Guide</li> <li>Numba Documentation</li> </ul>"},{"location":"modules/03-economic-modeling/#real-world-applications","title":"Real-World Applications","text":"<p>This module's methods are used in:</p> <p>Academic Research: - Labor economics (lifecycle models) - Macroeconomics (heterogeneous agent models) - Industrial organization (firm dynamics) - Public finance (tax policy analysis)</p> <p>Policy Analysis: - Social Security reform - Education policy - Healthcare decisions - Environmental regulation</p> <p>Industry: - Dynamic pricing - Inventory management - Capacity planning - Investment timing</p>"},{"location":"modules/03-economic-modeling/#assessment","title":"Assessment","text":"<p>To master this module, you should be able to:</p> <ul> <li> Formulate economic problems as Bellman equations</li> <li> Implement VFI and PFI efficiently</li> <li> Solve models with continuous state spaces</li> <li> Handle discrete-continuous choice problems</li> <li> Calibrate models to match data</li> <li> Apply optimal stopping techniques</li> <li> Implement robust control methods</li> <li> Estimate structural parameters</li> </ul>"},{"location":"modules/03-economic-modeling/#next-steps","title":"Next Steps","text":"<p>After completing this module:</p> <ol> <li>Module 4: Macro Models - Apply DP to growth and business cycle models</li> <li>Module 5: Micro Models - Extend to game theory and equilibrium</li> <li>Module 6: Econometrics - Advanced estimation techniques</li> </ol>"},{"location":"modules/03-economic-modeling/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Start Simple: Master deterministic problems before adding uncertainty</li> <li>Visualize: Plot value and policy functions to build intuition</li> <li>Test: Verify solutions with analytical benchmarks when available</li> <li>Optimize: Use profiling to find bottlenecks before optimizing</li> <li>Document: Keep detailed notes on algorithm convergence</li> </ol>"},{"location":"modules/03-economic-modeling/#need-help","title":"Need Help?","text":"<ul> <li>Review Mathematical Appendices</li> <li>Check FAQ</li> <li>Join GitHub Discussions</li> <li>See References for additional reading</li> </ul> <p>Ready to start? Begin with <code>01_Dynamic_Programming.ipynb</code>!</p>"},{"location":"modules/04-macro-models/","title":"Module 4: Macroeconomic Models","text":"<p>Apply computational methods to modern macroeconomic theory and policy analysis.</p>"},{"location":"modules/04-macro-models/#overview","title":"Overview","text":"<p>This module covers the core models of modern macroeconomics, from growth theory to business cycle models. You'll learn to solve, simulate, and estimate canonical macroeconomic models using the computational techniques from previous modules.</p> <p>Duration: 6-7 weeks Difficulty: Advanced Prerequisites: Modules 1-3, Intermediate Macroeconomics</p>"},{"location":"modules/04-macro-models/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Solve and simulate growth models computationally</li> <li>\u2713 Build and analyze Real Business Cycle (RBC) models</li> <li>\u2713 Implement overlapping generations (OLG) models</li> <li>\u2713 Solve New Keynesian DSGE models</li> <li>\u2713 Work with heterogeneous agent macroeconomic models</li> <li>\u2713 Analyze endogenous growth mechanisms</li> <li>\u2713 Apply models to policy questions</li> </ul>"},{"location":"modules/04-macro-models/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/04-macro-models/#1-job-search-models","title":"1. Job Search Models","text":"<p>Notebook: <code>01_Job_Search.ipynb</code></p> <ul> <li>McCall search model</li> <li>Sequential search with learning</li> <li>On-the-job search</li> <li>Wage posting and bargaining</li> <li>Unemployment duration analysis</li> <li>Reservation wage dynamics</li> </ul> <p>Policy Applications: - Unemployment insurance design - Active labor market policies - Minimum wage effects</p> <p>Computational Methods: - Dynamic programming with continuous wages - Stationary distributions - Monte Carlo simulation</p>"},{"location":"modules/04-macro-models/#2-neoclassical-growth-models","title":"2. Neoclassical Growth Models","text":"<p>Notebook: <code>02_Neoclassical_Growth.ipynb</code></p> <ul> <li>Solow-Swan growth model</li> <li>Ramsey-Cass-Koopmans model</li> <li>Optimal growth with uncertainty</li> <li>Stochastic growth models</li> <li>Convergence dynamics</li> <li>Transitional dynamics</li> </ul> <p>Key Concepts: - Steady state analysis - Golden rule of capital accumulation - Saddle-path stability - Policy functions</p> <p>Applications: - Long-run growth determinants - Capital accumulation paths - Convergence predictions</p>"},{"location":"modules/04-macro-models/#3-real-business-cycle-rbc-models","title":"3. Real Business Cycle (RBC) Models","text":"<p>Notebook: <code>03_RBC_Models.ipynb</code></p> <ul> <li>Basic RBC framework</li> <li>Technology shocks and business cycles</li> <li>Log-linearization methods</li> <li>Impulse response functions</li> <li>Moment matching</li> <li>Model calibration</li> </ul> <p>Solution Methods: - Perturbation methods - Value function iteration - Linear-quadratic approximation</p> <p>Empirical Analysis: - Business cycle statistics - Volatilities and correlations - Model vs. data comparison</p>"},{"location":"modules/04-macro-models/#4-overlapping-generations-olg-models","title":"4. Overlapping Generations (OLG) Models","text":"<p>Notebook: <code>04_OLG_Models.ipynb</code></p> <ul> <li>Diamond OLG model</li> <li>Lifecycle consumption and saving</li> <li>Social Security systems</li> <li>Dynamic inefficiency</li> <li>Pay-as-you-go vs. funded pensions</li> <li>Intergenerational redistribution</li> </ul> <p>Computational Challenges: - Solving for equilibrium - Multiple steady states - Transitional dynamics with many cohorts</p> <p>Policy Questions: - Pension reform effects - Demographic transitions - Government debt sustainability</p>"},{"location":"modules/04-macro-models/#5-new-keynesian-models","title":"5. New Keynesian Models","text":"<p>Notebook: <code>05_New_Keynesian_Models.ipynb</code></p> <ul> <li>Sticky prices and nominal rigidities</li> <li>New Keynesian Phillips Curve</li> <li>Monetary policy rules (Taylor rule)</li> <li>Zero lower bound on interest rates</li> <li>Forward guidance</li> <li>Fiscal policy multipliers</li> </ul> <p>Solution Techniques: - Log-linearization around steady state - Blanchard-Kahn conditions - Solving linear rational expectations models</p> <p>Applications: - Optimal monetary policy - Effects of interest rate changes - Inflation dynamics</p>"},{"location":"modules/04-macro-models/#6-heterogeneous-agent-models-hank","title":"6. Heterogeneous Agent Models (HANK)","text":"<p>Notebook: <code>06_Heterogeneous_Agent_Models.ipynb</code></p> <ul> <li>Aiyagari model</li> <li>Income and wealth inequality</li> <li>Incomplete markets and idiosyncratic risk</li> <li>Precautionary savings</li> <li>General equilibrium with heterogeneity</li> <li>Distribution dynamics</li> </ul> <p>Advanced Topics: - Aggregate shocks in HA models - Transition paths - Computational methods for HA models - Sequence-space Jacobians</p> <p>Policy Analysis: - Fiscal stimulus effectiveness - Redistribution policies - Financial regulation</p>"},{"location":"modules/04-macro-models/#7-endogenous-growth-models","title":"7. Endogenous Growth Models","text":"<p>Notebook: <code>08_Endogenous_Growth.ipynb</code></p> <ul> <li>AK models</li> <li>Romer's product variety model</li> <li>Schumpeterian growth (creative destruction)</li> <li>Human capital accumulation</li> <li>R&amp;D and innovation</li> <li>Knowledge spillovers</li> </ul> <p>Computational Techniques: - Balanced growth paths - Transitional dynamics - Calibration to growth facts</p> <p>Applications: - Innovation policy - Education investment - Patent protection - Technology diffusion</p>"},{"location":"modules/04-macro-models/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/04-macro-models/#required-knowledge","title":"Required Knowledge","text":"<p>Economics: - Essential: Intermediate macro (IS-LM, AS-AD, Solow model) - Helpful: Graduate macro (dynamic optimization, rational expectations)</p> <p>Mathematics: - Dynamic optimization and optimal control - Stochastic processes - Linear algebra</p> <p>Programming: - Modules 1-3 completed - Dynamic programming proficiency - Numerical methods mastery</p>"},{"location":"modules/04-macro-models/#key-libraries","title":"Key Libraries","text":"<ul> <li>QuantEcon: Macroeconomic models and tools</li> <li>NumPy/SciPy: Numerical computations</li> <li>Numba: Performance optimization</li> <li>Matplotlib/Seaborn: Visualization</li> <li>Statsmodels: Time series analysis</li> </ul>"},{"location":"modules/04-macro-models/#learning-path","title":"Learning Path","text":""},{"location":"modules/04-macro-models/#week-1-search-and-growth-foundations","title":"Week 1: Search and Growth Foundations","text":"<ul> <li>Complete notebooks 01-02</li> <li>Understand baseline models</li> <li>Master steady-state computation</li> </ul>"},{"location":"modules/04-macro-models/#week-2-rbc-models","title":"Week 2: RBC Models","text":"<ul> <li>Complete notebook 03</li> <li>Learn linearization techniques</li> <li>Match business cycle moments</li> </ul>"},{"location":"modules/04-macro-models/#week-3-olg-models","title":"Week 3: OLG Models","text":"<ul> <li>Complete notebook 04</li> <li>Solve for equilibrium</li> <li>Analyze policy changes</li> </ul>"},{"location":"modules/04-macro-models/#week-4-new-keynesian-framework","title":"Week 4: New Keynesian Framework","text":"<ul> <li>Complete notebook 05</li> <li>Implement monetary policy rules</li> <li>Compute impulse responses</li> </ul>"},{"location":"modules/04-macro-models/#week-5-6-heterogeneous-agents","title":"Week 5-6: Heterogeneous Agents","text":"<ul> <li>Complete notebook 06</li> <li>Solve Aiyagari model</li> <li>Compute stationary distributions</li> </ul>"},{"location":"modules/04-macro-models/#week-7-endogenous-growth","title":"Week 7: Endogenous Growth","text":"<ul> <li>Complete notebook 08</li> <li>Model innovation</li> <li>Analyze growth policies</li> </ul>"},{"location":"modules/04-macro-models/#practice-exercises","title":"Practice Exercises","text":"<p>Key exercises in this module:</p> <ol> <li>Calibrate RBC Model: Match US business cycle statistics</li> <li>Social Security Reform: Analyze welfare effects in OLG model</li> <li>Monetary Policy: Design optimal Taylor rule in NK model</li> <li>Wealth Inequality: Compute Gini coefficients in Aiyagari model</li> <li>Innovation Policy: Evaluate R&amp;D subsidies in endogenous growth</li> <li>Fiscal Multipliers: Compare multipliers across different models</li> </ol>"},{"location":"modules/04-macro-models/#computational-challenges","title":"Computational Challenges","text":""},{"location":"modules/04-macro-models/#challenge-high-dimensional-state-space-hank","title":"Challenge: High-Dimensional State Space (HANK)","text":"<p>Solutions: - Use histogram methods - Apply spline interpolation - Exploit parallel computing - Consider approximation methods</p>"},{"location":"modules/04-macro-models/#challenge-solving-rational-expectations","title":"Challenge: Solving Rational Expectations","text":"<p>Solutions: - Master Blanchard-Kahn conditions - Use Klein's method - Apply Sims' gensys algorithm - Check eigenvalues carefully</p>"},{"location":"modules/04-macro-models/#challenge-transitional-dynamics","title":"Challenge: Transitional Dynamics","text":"<p>Solutions: - Shooting algorithms - Relaxation methods - Sequence-space approach - Good initial guesses</p>"},{"location":"modules/04-macro-models/#real-world-applications","title":"Real-World Applications","text":"<p>These models are actively used by:</p> <p>Central Banks: - Federal Reserve (FRB/US model) - European Central Bank (NAWM) - Bank of England - Policy scenario analysis</p> <p>Government Agencies: - Congressional Budget Office - Treasury departments - Fiscal policy analysis</p> <p>International Organizations: - IMF and World Bank - OECD economic projections</p> <p>Academia: - Business cycle research - Growth empirics - Policy evaluation</p>"},{"location":"modules/04-macro-models/#key-debates","title":"Key Debates","text":"<p>Modern macro involves active debates:</p> <ol> <li>Micro-founded vs. Reduced-form: Structural models vs. VARs</li> <li>Representative agent vs. Heterogeneity: When does aggregation fail?</li> <li>RBC vs. NK: Technology vs. demand shocks</li> <li>Calibration vs. Estimation: What's the right approach?</li> </ol> <p>Understanding these debates helps you: - Choose appropriate models - Interpret results correctly - Communicate findings effectively</p>"},{"location":"modules/04-macro-models/#resources","title":"Resources","text":""},{"location":"modules/04-macro-models/#essential-reading","title":"Essential Reading","text":"<p>Textbooks: - Ljungqvist, L. &amp; Sargent, T. (2018). Recursive Macroeconomic Theory, 4<sup>th</sup> ed. - Gal\u00ed, J. (2015). Monetary Policy, Inflation, and the Business Cycle, 2<sup>nd</sup> ed. - Acemoglu, D. (2008). Introduction to Modern Economic Growth</p> <p>Classic Papers: - Kydland, F. &amp; Prescott, E. (1982). \"Time to Build and Aggregate Fluctuations\" - Aiyagari, S. R. (1994). \"Uninsured Idiosyncratic Risk and Aggregate Saving\" - Clarida, R., Gal\u00ed, J., &amp; Gertler, M. (1999). \"The Science of Monetary Policy\"</p>"},{"location":"modules/04-macro-models/#online-resources","title":"Online Resources","text":"<ul> <li>QuantEcon Lectures</li> <li>Dynare Software - DSGE modeling toolkit</li> <li>Federal Reserve Economic Data (FRED)</li> </ul>"},{"location":"modules/04-macro-models/#policy-applications","title":"Policy Applications","text":"<p>Learn to answer questions like:</p> <ul> <li>What are the effects of monetary policy tightening?</li> <li>How do fiscal stimulus packages affect output?</li> <li>What's the optimal unemployment insurance generosity?</li> <li>How does inequality affect macroeconomic dynamics?</li> <li>What policies promote long-run growth?</li> </ul>"},{"location":"modules/04-macro-models/#assessment","title":"Assessment","text":"<p>Master these skills:</p> <ul> <li> Solve growth models analytically and numerically</li> <li> Calibrate models to match data moments</li> <li> Log-linearize DSGE models</li> <li> Compute impulse response functions</li> <li> Solve for stationary distributions in HA models</li> <li> Analyze policy counterfactuals</li> <li> Interpret model results for policy</li> </ul>"},{"location":"modules/04-macro-models/#next-steps","title":"Next Steps","text":"<p>After this module:</p> <ol> <li>Module 6: Econometrics - Estimate macro models</li> <li>Module 8: Time Series - Analyze macro data</li> <li>Module 9: Finance - Asset pricing in macro models</li> </ol>"},{"location":"modules/04-macro-models/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Master the Basics: Understand the economic intuition before coding</li> <li>Start Simple: Solve deterministic versions first</li> <li>Verify: Compare numerical solutions to analytical results when possible</li> <li>Visualize: Plot policy functions and impulse responses</li> <li>Calibrate Carefully: Use empirically realistic parameter values</li> </ol>"},{"location":"modules/04-macro-models/#need-help","title":"Need Help?","text":"<ul> <li>Review Economic Modeling for DP refresher</li> <li>Check Numerical Methods for solution techniques</li> <li>See FAQ for common issues</li> <li>Join Discussions</li> </ul> <p>Ready to explore macro models? Start with <code>01_Job_Search.ipynb</code>!</p>"},{"location":"modules/05-micro-models/","title":"Module 5: Microeconomic Models","text":"<p>Solve advanced microeconomic problems using computational methods.</p>"},{"location":"modules/05-micro-models/#overview","title":"Overview","text":"<p>This module applies computational techniques to microeconomic theory, covering consumer and producer behavior, general equilibrium, game theory, discrete choice, and information economics. You'll learn to solve complex optimization problems and strategic interactions computationally.</p> <p>Duration: 5-6 weeks Difficulty: Advanced Prerequisites: Modules 1-3, Intermediate Microeconomics</p>"},{"location":"modules/05-micro-models/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Solve consumer and producer optimization problems numerically</li> <li>\u2713 Compute competitive and general equilibrium</li> <li>\u2713 Analyze strategic games using computational methods</li> <li>\u2713 Estimate and simulate discrete choice models</li> <li>\u2713 Model principal-agent problems</li> <li>\u2713 Solve information economics problems</li> <li>\u2713 Apply auction theory computationally</li> </ul>"},{"location":"modules/05-micro-models/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/05-micro-models/#1-consumer-and-producer-theory","title":"1. Consumer and Producer Theory","text":"<p>Notebook: <code>01_Consumer_and_Producer_Theory.ipynb</code></p> <p>Consumer Theory: - Utility maximization with budget constraints - Expenditure minimization - Demand systems (CES, translog, AIDS) - Slutsky equations numerically - Welfare analysis (compensating/equivalent variation)</p> <p>Producer Theory: - Cost minimization - Profit maximization - Production functions (Cobb-Douglas, CES, translog) - Input demand and output supply - Duality in production</p> <p>Computational Methods: - Constrained optimization - Numerical comparative statics - Elasticity computation</p> <p>Applications: - Tax incidence analysis - Price changes and welfare - Technology adoption</p>"},{"location":"modules/05-micro-models/#2-general-equilibrium","title":"2. General Equilibrium","text":"<p>Notebook: <code>02_General_Equilibrium.ipynb</code></p> <ul> <li>Walrasian equilibrium computation</li> <li>Excess demand functions</li> <li>Market-clearing algorithms</li> <li>Existence and uniqueness issues</li> <li>Computable General Equilibrium (CGE) models</li> <li>Multi-sector economies</li> </ul> <p>Solution Techniques: - Fixed-point algorithms (Scarf, Merrill) - Newton methods for market clearing - Homotopy continuation - Negishi approach</p> <p>Applications: - Trade policy analysis - Tax reform evaluation - Environmental policy - Distributional effects</p>"},{"location":"modules/05-micro-models/#3-game-theory-and-auctions","title":"3. Game Theory and Auctions","text":"<p>Notebook: <code>03_Game_Theory_and_Auctions.ipynb</code></p> <p>Game Theory: - Nash equilibrium computation - Repeated games and folk theorems - Dynamic games and subgame perfection - Bayesian games - Mechanism design</p> <p>Auction Theory: - First-price sealed-bid auctions - Second-price (Vickrey) auctions - English and Dutch auctions - Revenue equivalence - Optimal auction design</p> <p>Computational Methods: - Best-response iteration - Support enumeration - Lemke-Howson algorithm - Monte Carlo simulation of games</p> <p>Applications: - Oligopoly competition - Spectrum auctions - Procurement design - Collusion detection</p>"},{"location":"modules/05-micro-models/#4-discrete-choice-models","title":"4. Discrete Choice Models","text":"<p>Notebook: <code>04_Discrete_Choice_Models.ipynb</code></p> <ul> <li>Binary choice (logit, probit)</li> <li>Multinomial logit and nested logit</li> <li>Mixed logit (random coefficients)</li> <li>Conditional logit</li> <li>Independence of Irrelevant Alternatives (IIA)</li> <li>Simulated maximum likelihood</li> </ul> <p>Computational Techniques: - Maximum likelihood estimation - Simulation-based inference - Importance sampling - Halton sequences for Monte Carlo</p> <p>Applications: - Transportation mode choice - Product differentiation - Labor force participation - Location choice</p>"},{"location":"modules/05-micro-models/#5-principal-agent-models","title":"5. Principal-Agent Models","text":"<p>Notebook: <code>05_Principal_Agent_Models.ipynb</code></p> <ul> <li>Hidden action (moral hazard)</li> <li>Hidden information (adverse selection)</li> <li>Screening and signaling</li> <li>Optimal contracts under asymmetric information</li> <li>Dynamic contracting</li> <li>Multi-agent problems</li> </ul> <p>Solution Methods: - Solving incentive compatibility constraints - Participation constraints - Revelation principle applications - Numerical contract optimization</p> <p>Applications: - Labor contracts and compensation - Insurance markets - Financial intermediation - Regulatory design</p>"},{"location":"modules/05-micro-models/#6-information-economics","title":"6. Information Economics","text":"<p>Notebook: <code>06_Information_Economics.ipynb</code></p> <ul> <li>Signaling games (Spence model)</li> <li>Screening models (Rothschild-Stiglitz)</li> <li>Search and matching</li> <li>Information aggregation</li> <li>Learning and updating</li> <li>Reputation models</li> </ul> <p>Computational Challenges: - Solving for separating/pooling equilibria - Multiple equilibria handling - Stability and refinements - Belief updating</p> <p>Applications: - Education as signal - Credit markets with asymmetric information - Job market signaling - Market design with private information</p>"},{"location":"modules/05-micro-models/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/05-micro-models/#required-knowledge","title":"Required Knowledge","text":"<p>Economics: - Essential: Intermediate microeconomics (consumer/producer theory, basic game theory) - Helpful: Graduate micro (general equilibrium, contract theory)</p> <p>Mathematics: - Constrained optimization (Lagrange, Kuhn-Tucker) - Probability theory - Game theory basics - Real analysis</p> <p>Programming: - Modules 1-3 completed - Optimization proficiency - Dynamic programming experience</p>"},{"location":"modules/05-micro-models/#key-libraries","title":"Key Libraries","text":"<ul> <li>SciPy: Optimization (scipy.optimize)</li> <li>NumPy: Numerical operations</li> <li>Statsmodels: Discrete choice estimation</li> <li>PyLogit/Biogeme: Specialized choice modeling</li> <li>Nashpy: Game theory computations</li> <li>Matplotlib/Seaborn: Visualization</li> </ul>"},{"location":"modules/05-micro-models/#learning-path","title":"Learning Path","text":""},{"location":"modules/05-micro-models/#week-1-consumer-and-producer","title":"Week 1: Consumer and Producer","text":"<ul> <li>Complete notebook 01</li> <li>Master duality concepts</li> <li>Compute demand systems</li> </ul>"},{"location":"modules/05-micro-models/#week-2-general-equilibrium","title":"Week 2: General Equilibrium","text":"<ul> <li>Complete notebook 02</li> <li>Solve for market-clearing prices</li> <li>Build simple CGE models</li> </ul>"},{"location":"modules/05-micro-models/#week-3-game-theory-and-auctions","title":"Week 3: Game Theory and Auctions","text":"<ul> <li>Complete notebook 03</li> <li>Compute Nash equilibria</li> <li>Simulate auction mechanisms</li> </ul>"},{"location":"modules/05-micro-models/#week-4-discrete-choice","title":"Week 4: Discrete Choice","text":"<ul> <li>Complete notebook 04</li> <li>Estimate logit models</li> <li>Implement mixed logit</li> </ul>"},{"location":"modules/05-micro-models/#week-5-principal-agent","title":"Week 5: Principal-Agent","text":"<ul> <li>Complete notebook 05</li> <li>Solve optimal contracts</li> <li>Handle moral hazard</li> </ul>"},{"location":"modules/05-micro-models/#week-6-information-economics","title":"Week 6: Information Economics","text":"<ul> <li>Complete notebook 06</li> <li>Analyze signaling equilibria</li> <li>Model adverse selection</li> </ul>"},{"location":"modules/05-micro-models/#practice-exercises","title":"Practice Exercises","text":"<p>Key exercises throughout the module:</p> <ol> <li>Tax Incidence: Compute welfare effects of commodity taxes</li> <li>Trade Liberalization: CGE analysis of tariff removal</li> <li>Cournot Oligopoly: Find Nash equilibrium numerically</li> <li>Auction Simulation: Compare revenue across auction formats</li> <li>Choice Modeling: Estimate discrete choice model with real data</li> <li>Optimal Contract: Design incentive-compatible wage scheme</li> <li>Lemon's Market: Solve Akerlof's adverse selection problem</li> </ol>"},{"location":"modules/05-micro-models/#computational-challenges","title":"Computational Challenges","text":""},{"location":"modules/05-micro-models/#challenge-multiple-equilibria","title":"Challenge: Multiple Equilibria","text":"<p>Solutions: - Try multiple initial values - Use homotopy/continuation methods - Apply equilibrium selection criteria - Document all equilibria found</p>"},{"location":"modules/05-micro-models/#challenge-high-dimensional-optimization","title":"Challenge: High-Dimensional Optimization","text":"<p>Solutions: - Exploit problem structure (separability) - Use gradient information - Apply global optimization methods - Consider approximation techniques</p>"},{"location":"modules/05-micro-models/#challenge-simulation-based-estimation","title":"Challenge: Simulation-Based Estimation","text":"<p>Solutions: - Use quasi-random sequences (Halton, Sobol) - Implement importance sampling - Apply variance reduction techniques - Parallelize simulations</p>"},{"location":"modules/05-micro-models/#real-world-applications","title":"Real-World Applications","text":"<p>These methods are used in:</p> <p>Antitrust Analysis: - Merger simulations - Market power assessment - Collusion detection</p> <p>Public Policy: - Tax policy design - Environmental regulation - Healthcare reform - Education policy</p> <p>Industry: - Pricing strategies - Product design - Market entry decisions - Contract design</p> <p>Academic Research: - Industrial organization - Labor economics - Public economics - Development economics</p>"},{"location":"modules/05-micro-models/#key-concepts-and-techniques","title":"Key Concepts and Techniques","text":""},{"location":"modules/05-micro-models/#duality-theory","title":"Duality Theory","text":"<ul> <li>Primal and dual problems</li> <li>Envelope theorems</li> <li>Roy's identity and Shephard's lemma</li> <li>Hotelling's lemma</li> </ul>"},{"location":"modules/05-micro-models/#equilibrium-concepts","title":"Equilibrium Concepts","text":"<ul> <li>Walrasian equilibrium</li> <li>Nash equilibrium</li> <li>Perfect Bayesian equilibrium</li> <li>Sequential equilibrium</li> </ul>"},{"location":"modules/05-micro-models/#mechanism-design","title":"Mechanism Design","text":"<ul> <li>Revelation principle</li> <li>Incentive compatibility</li> <li>Individual rationality</li> <li>Revenue equivalence</li> </ul>"},{"location":"modules/05-micro-models/#resources","title":"Resources","text":""},{"location":"modules/05-micro-models/#essential-reading","title":"Essential Reading","text":"<p>Textbooks: - Mas-Colell, A., Whinston, M., &amp; Green, J. (1995). Microeconomic Theory - Varian, H. (1992). Microeconomic Analysis, 3<sup>rd</sup> ed. - Fudenberg, D. &amp; Tirole, J. (1991). Game Theory - Train, K. (2009). Discrete Choice Methods with Simulation</p> <p>Classic Papers: - Scarf, H. (1967). \"On the Computation of Equilibrium Prices\" - McFadden, D. (1974). \"Conditional Logit Analysis of Qualitative Choice Behavior\" - Spence, M. (1973). \"Job Market Signaling\" - Myerson, R. (1981). \"Optimal Auction Design\"</p>"},{"location":"modules/05-micro-models/#software-and-tools","title":"Software and Tools","text":"<ul> <li>Nashpy - Game theory in Python</li> <li>PyLogit - Discrete choice models</li> <li>GAMS - General Algebraic Modeling System (CGE)</li> </ul>"},{"location":"modules/05-micro-models/#policy-applications","title":"Policy Applications","text":"<p>Learn to analyze:</p> <ul> <li>Merger Effects: Simulate post-merger equilibrium</li> <li>Tax Policy: Deadweight loss and incidence</li> <li>Auction Design: Revenue-maximizing mechanisms</li> <li>Regulation: Optimal regulatory contracts</li> <li>Market Failures: Information asymmetry solutions</li> </ul>"},{"location":"modules/05-micro-models/#assessment","title":"Assessment","text":"<p>To master this module, you should:</p> <ul> <li> Solve consumer/producer problems numerically</li> <li> Compute general equilibrium</li> <li> Find Nash equilibria in games</li> <li> Estimate discrete choice models</li> <li> Design optimal contracts</li> <li> Analyze signaling and screening</li> <li> Apply methods to policy questions</li> </ul>"},{"location":"modules/05-micro-models/#next-steps","title":"Next Steps","text":"<p>After completing this module:</p> <ol> <li>Module 6: Econometrics - Estimate micro models with data</li> <li>Module 7: Machine Learning - Advanced choice modeling</li> <li>Module 4: Macro Models - Combine micro and macro</li> </ol>"},{"location":"modules/05-micro-models/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Economic Intuition First: Understand the economic problem before coding</li> <li>Check Optimality: Verify FOCs and constraint qualifications</li> <li>Multiple Initializations: Try different starting points for equilibria</li> <li>Visualize: Plot reaction functions, indifference curves, contract curves</li> <li>Validate: Compare to analytical solutions when available</li> </ol>"},{"location":"modules/05-micro-models/#common-pitfalls","title":"Common Pitfalls","text":""},{"location":"modules/05-micro-models/#pitfall-ignoring-constraint-qualifications","title":"Pitfall: Ignoring Constraint Qualifications","text":"<p>Solution: Always check if Kuhn-Tucker conditions apply</p>"},{"location":"modules/05-micro-models/#pitfall-missing-equilibria","title":"Pitfall: Missing Equilibria","text":"<p>Solution: Use multiple random starting points</p>"},{"location":"modules/05-micro-models/#pitfall-iia-assumption-in-logit","title":"Pitfall: IIA Assumption in Logit","text":"<p>Solution: Use nested or mixed logit for flexible substitution patterns</p>"},{"location":"modules/05-micro-models/#need-help","title":"Need Help?","text":"<ul> <li>Review Optimization</li> <li>Check Dynamic Programming</li> <li>See FAQ</li> <li>Join Discussions</li> </ul> <p>Ready to dive into micro models? Start with <code>01_Consumer_and_Producer_Theory.ipynb</code>!</p>"},{"location":"modules/06-econometrics/","title":"Module 6: Econometrics","text":"<p>Master modern econometric methods for causal inference and statistical modeling.</p>"},{"location":"modules/06-econometrics/#overview","title":"Overview","text":"<p>This module provides comprehensive coverage of econometric methods, from classical linear models to modern causal inference techniques. You'll learn both the theory and practical implementation of methods used in applied economic research.</p> <p>Duration: 8-10 weeks Difficulty: Advanced Prerequisites: Modules 1-2, Probability &amp; Statistics, Linear Algebra</p>"},{"location":"modules/06-econometrics/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Implement and interpret linear regression models</li> <li>\u2713 Use maximum likelihood estimation effectively</li> <li>\u2713 Apply modern causal inference methods</li> <li>\u2713 Estimate models using GMM and instrumental variables</li> <li>\u2713 Conduct rigorous difference-in-differences analysis</li> <li>\u2713 Implement synthetic control methods</li> <li>\u2713 Perform regression discontinuity designs</li> <li>\u2713 Analyze time series and panel data</li> <li>\u2713 Apply Bayesian econometric methods</li> </ul>"},{"location":"modules/06-econometrics/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/06-econometrics/#1-linear-model-and-ols","title":"1. Linear Model and OLS","text":"<p>Notebook: <code>01_Linear_Model_and_OLS.ipynb</code></p> <ul> <li>Ordinary Least Squares (OLS) estimation</li> <li>Gauss-Markov theorem</li> <li>Statistical inference (standard errors, t-tests, F-tests)</li> <li>Heteroskedasticity and robust inference</li> <li>Weighted least squares</li> <li>Generalized least squares (GLS)</li> </ul> <p>Key Concepts: - Assumptions of the classical linear model - BLUE (Best Linear Unbiased Estimator) - Hypothesis testing - Confidence intervals</p> <p>Applications: - Wage regressions - Returns to education - Production function estimation</p>"},{"location":"modules/06-econometrics/#2-maximum-likelihood-estimation","title":"2. Maximum Likelihood Estimation","text":"<p>Notebook: <code>02_Maximum_Likelihood.ipynb</code></p> <ul> <li>Likelihood function and log-likelihood</li> <li>MLE properties (consistency, asymptotic normality)</li> <li>Information matrix and Cram\u00e9r-Rao bound</li> <li>Likelihood ratio, Wald, and Lagrange multiplier tests</li> <li>Quasi-maximum likelihood</li> <li>Numerical optimization for MLE</li> </ul> <p>Advanced Topics: - Profile likelihood - Concentrated likelihood - EM algorithm</p> <p>Applications: - Probit and logit models - Tobit models - Count data models (Poisson, negative binomial)</p>"},{"location":"modules/06-econometrics/#3-causal-inference","title":"3. Causal Inference","text":"<p>Notebook: <code>03_Causal_Inference.ipynb</code></p> <ul> <li>Potential outcomes framework (Rubin causal model)</li> <li>Treatment effects (ATE, ATT, LATE)</li> <li>Selection bias and confounding</li> <li>Randomized controlled trials (RCTs)</li> <li>Observational studies and identification</li> <li>Matching methods (exact, propensity score)</li> <li>Sensitivity analysis</li> </ul> <p>Fundamental Concepts: - Counterfactuals - Conditional independence assumption (CIA) - Common support - Parallel trends</p> <p>Applications: - Program evaluation - Policy impact assessment - Treatment effect heterogeneity</p>"},{"location":"modules/06-econometrics/#4-generalized-method-of-moments-gmm","title":"4. Generalized Method of Moments (GMM)","text":"<p>Notebook: <code>04_GMM.ipynb</code></p> <ul> <li>Moment conditions and identification</li> <li>One-step and two-step GMM</li> <li>Optimal weighting matrix</li> <li>Overidentification tests (Hansen's J-test)</li> <li>GMM with weakly identified parameters</li> <li>Bootstrap inference</li> </ul> <p>Computational Implementation: - Defining moment functions - Computing optimal weights - Handling nonlinear restrictions</p> <p>Applications: - Asset pricing models - Euler equation estimation - Dynamic panel data</p>"},{"location":"modules/06-econometrics/#5-instrumental-variables-iv","title":"5. Instrumental Variables (IV)","text":"<p>Notebook: <code>05_Instrumental_Variables.ipynb</code></p> <ul> <li>Endogeneity and omitted variable bias</li> <li>Two-stage least squares (2SLS)</li> <li>Instrument validity (relevance and exogeneity)</li> <li>Weak instruments problem</li> <li>Limited information maximum likelihood (LIML)</li> <li>Control function approach</li> </ul> <p>Testing: - First-stage F-statistic - Sargan-Hansen test of overidentifying restrictions - Durbin-Wu-Hausman endogeneity test</p> <p>Applications: - Returns to schooling with family background instruments - Supply and demand estimation - Peer effects</p>"},{"location":"modules/06-econometrics/#6-regression-discontinuity-design-rdd","title":"6. Regression Discontinuity Design (RDD)","text":"<p>Notebook: <code>06_Regression_Discontinuity.ipynb</code></p> <ul> <li>Sharp vs. fuzzy RD</li> <li>Continuity-based identification</li> <li>Bandwidth selection</li> <li>Local polynomial regression</li> <li>Inference and robust standard errors</li> <li>Validation tests (density, placebo, covariate balance)</li> </ul> <p>Implementation: - Choosing kernel and bandwidth - Sensitivity to specification - Graphical analysis</p> <p>Applications: - School entry age effects - Electoral competition - Policy thresholds</p>"},{"location":"modules/06-econometrics/#7-synthetic-control-methods","title":"7. Synthetic Control Methods","text":"<p>Notebook: <code>07_Synthetic_Control_Methods.ipynb</code></p> <ul> <li>Synthetic control construction</li> <li>Donor pool selection</li> <li>Optimization for weights</li> <li>Inference via placebo tests</li> <li>Augmented synthetic control</li> <li>Matrix completion methods</li> </ul> <p>Recent Extensions: - Synthetic difference-in-differences - Multiple treated units - Time-varying treatments</p> <p>Applications: - State policy evaluation (California tobacco control) - Country-level studies - Firm-level interventions</p>"},{"location":"modules/06-econometrics/#8-difference-in-differences-did","title":"8. Difference-in-Differences (DiD)","text":"<p>Notebook: <code>08_Difference_in_Differences.ipynb</code></p> <ul> <li>Classical 2\u00d72 DiD</li> <li>Parallel trends assumption</li> <li>Multiple time periods and groups</li> <li>Two-way fixed effects (TWFE)</li> <li>Recent advances (staggered adoption, heterogeneous treatment)</li> <li>Event study designs</li> <li>Triple differences</li> </ul> <p>Modern DiD Methods: - Callaway-Sant'Anna estimator - Sun-Abraham interaction-weighted estimator - Stacked DiD</p> <p>Applications: - Minimum wage effects - Medicaid expansion - Environmental policy</p>"},{"location":"modules/06-econometrics/#9-classical-time-series-analysis","title":"9. Classical Time Series Analysis","text":"<p>Notebook: <code>09_Classical_Time_Series_Analysis.ipynb</code></p> <ul> <li>Stationarity and unit root tests</li> <li>Autocorrelation and partial autocorrelation</li> <li>ARMA models</li> <li>Model selection (AIC, BIC)</li> <li>Forecasting</li> <li>Structural breaks</li> </ul> <p>Testing: - Augmented Dickey-Fuller test - Phillips-Perron test - KPSS test</p> <p>Applications: - GDP forecasting - Inflation persistence - Interest rate dynamics</p>"},{"location":"modules/06-econometrics/#10-vector-autoregression-var","title":"10. Vector Autoregression (VAR)","text":"<p>Notebook: <code>10_Vector_Autoregression.ipynb</code></p> <ul> <li>VAR specification and estimation</li> <li>Impulse response functions (IRFs)</li> <li>Forecast error variance decomposition</li> <li>Structural VAR (SVAR)</li> <li>Identification through short-run/long-run restrictions</li> <li>Sign restrictions</li> <li>Granger causality</li> </ul> <p>Computational Methods: - Bootstrap confidence intervals for IRFs - Recursive vs. rolling estimation - Optimal lag selection</p> <p>Applications: - Monetary policy shocks - Fiscal multipliers - Oil price effects</p>"},{"location":"modules/06-econometrics/#11-bayesian-econometrics","title":"11. Bayesian Econometrics","text":"<p>Notebook: <code>11_Bayesian_Econometrics.ipynb</code></p> <ul> <li>Bayesian inference basics</li> <li>Prior, likelihood, and posterior</li> <li>Conjugate priors</li> <li>Markov Chain Monte Carlo (MCMC)</li> <li>Gibbs sampling</li> <li>Metropolis-Hastings algorithm</li> <li>Bayesian model comparison (Bayes factors, DIC)</li> </ul> <p>Practical Implementation: - PyMC for Bayesian modeling - Convergence diagnostics - Posterior predictive checks</p> <p>Applications: - Bayesian linear regression - Hierarchical models - Time-varying parameter models</p>"},{"location":"modules/06-econometrics/#12-panel-data-methods","title":"12. Panel Data Methods","text":"<p>Notebook: <code>12_Panel_Data_Methods.ipynb</code></p> <ul> <li>Fixed effects (within estimator)</li> <li>Random effects (GLS estimator)</li> <li>Hausman test</li> <li>First differences</li> <li>Dynamic panel data (Arellano-Bond, Blundell-Bond)</li> <li>Correlated random effects</li> <li>Clustered standard errors</li> </ul> <p>Advanced Topics: - Unbalanced panels - Nonlinear panel models - Interactive fixed effects</p> <p>Applications: - Firm productivity - Individual wage dynamics - International trade</p>"},{"location":"modules/06-econometrics/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/06-econometrics/#required-knowledge","title":"Required Knowledge","text":"<p>Statistics: - Probability theory - Statistical inference - Hypothesis testing - Asymptotic theory basics</p> <p>Mathematics: - Linear algebra (matrices, eigenvalues) - Calculus (derivatives, optimization) - Basic real analysis</p> <p>Programming: - Modules 1-2 completed - Data manipulation with pandas - NumPy proficiency</p>"},{"location":"modules/06-econometrics/#key-libraries","title":"Key Libraries","text":"<ul> <li>Statsmodels: Comprehensive econometric models</li> <li>Linearmodels: Panel data and IV estimation</li> <li>PyMC: Bayesian statistical modeling</li> <li>CausalML: Causal inference methods</li> <li>Scikit-learn: Machine learning for causal inference</li> <li>Pandas: Data manipulation</li> <li>Matplotlib/Seaborn: Visualization</li> </ul>"},{"location":"modules/06-econometrics/#learning-path","title":"Learning Path","text":""},{"location":"modules/06-econometrics/#week-1-2-linear-models","title":"Week 1-2: Linear Models","text":"<ul> <li>Complete notebooks 01-02</li> <li>Master OLS and MLE</li> <li>Understand asymptotic theory</li> </ul>"},{"location":"modules/06-econometrics/#week-3-causal-inference-foundations","title":"Week 3: Causal Inference Foundations","text":"<ul> <li>Complete notebook 03</li> <li>Grasp potential outcomes framework</li> <li>Learn matching methods</li> </ul>"},{"location":"modules/06-econometrics/#week-4-gmm-and-iv","title":"Week 4: GMM and IV","text":"<ul> <li>Complete notebooks 04-05</li> <li>Solve endogeneity problems</li> <li>Implement IV estimators</li> </ul>"},{"location":"modules/06-econometrics/#week-5-6-quasi-experimental-methods","title":"Week 5-6: Quasi-Experimental Methods","text":"<ul> <li>Complete notebooks 06-08</li> <li>Master RDD, synthetic control, DiD</li> <li>Apply to policy evaluation</li> </ul>"},{"location":"modules/06-econometrics/#week-7-8-time-series","title":"Week 7-8: Time Series","text":"<ul> <li>Complete notebooks 09-10</li> <li>Analyze temporal data</li> <li>Compute impulse responses</li> </ul>"},{"location":"modules/06-econometrics/#week-9-bayesian-methods","title":"Week 9: Bayesian Methods","text":"<ul> <li>Complete notebook 11</li> <li>Implement MCMC</li> <li>Bayesian model comparison</li> </ul>"},{"location":"modules/06-econometrics/#week-10-panel-data","title":"Week 10: Panel Data","text":"<ul> <li>Complete notebook 12</li> <li>Fixed and random effects</li> <li>Dynamic panels</li> </ul>"},{"location":"modules/06-econometrics/#practice-exercises","title":"Practice Exercises","text":"<p>Key exercises throughout the module:</p> <ol> <li>Wage Regression: Estimate returns to education, test for heteroskedasticity</li> <li>Binary Choice: Estimate labor force participation using probit/logit</li> <li>Matching: Evaluate job training program with propensity score matching</li> <li>IV Estimation: Estimate demand elasticity with cost shifters as instruments</li> <li>RDD Analysis: Evaluate effect of class size on student achievement</li> <li>Synthetic Control: Replicate California tobacco control study</li> <li>DiD: Estimate minimum wage effects on employment</li> <li>VAR Analysis: Compute monetary policy shock effects</li> <li>Bayesian Regression: Implement Bayesian linear model with PyMC</li> <li>Panel FE: Estimate production function with firm fixed effects</li> </ol>"},{"location":"modules/06-econometrics/#computational-challenges","title":"Computational Challenges","text":""},{"location":"modules/06-econometrics/#challenge-large-datasets","title":"Challenge: Large Datasets","text":"<p>Solutions: - Use sparse matrices - Apply Dask for out-of-core computation - Optimize pandas operations - Consider sampling strategies</p>"},{"location":"modules/06-econometrics/#challenge-bootstrap-inference","title":"Challenge: Bootstrap Inference","text":"<p>Solutions: - Vectorize bootstrap loops - Use parallel processing - Apply wild bootstrap for clusters - Block bootstrap for time series</p>"},{"location":"modules/06-econometrics/#challenge-weak-identification","title":"Challenge: Weak Identification","text":"<p>Solutions: - Test instrument strength - Use LIML or GMM-CUE - Report robust confidence intervals - Consider alternative identification</p>"},{"location":"modules/06-econometrics/#real-world-applications","title":"Real-World Applications","text":"<p>Econometric methods are essential for:</p> <p>Academic Research: - Labor economics - Public economics - Development economics - Industrial organization - Macroeconomics</p> <p>Policy Analysis: - Program evaluation - Cost-benefit analysis - Impact assessment - Forecasting</p> <p>Industry: - Marketing attribution - A/B testing at scale - Demand estimation - Pricing strategy</p>"},{"location":"modules/06-econometrics/#key-debates","title":"Key Debates","text":"<p>Modern econometrics features ongoing discussions:</p> <ol> <li>Design vs. Structure: Reduced-form causal inference vs. structural modeling</li> <li>Inference: Classical vs. Bayesian approaches</li> <li>Machine Learning: Prediction vs. causal identification</li> <li>Credibility Revolution: What makes research convincing?</li> </ol> <p>Understanding these debates helps you: - Choose appropriate methods - Communicate research effectively - Navigate literature critically</p>"},{"location":"modules/06-econometrics/#resources","title":"Resources","text":""},{"location":"modules/06-econometrics/#essential-reading","title":"Essential Reading","text":"<p>Textbooks: - Wooldridge, J. (2020). Econometric Analysis of Cross Section and Panel Data, 2<sup>nd</sup> ed. - Angrist, J. &amp; Pischke, J.-S. (2008). Mostly Harmless Econometrics - Cameron, A. C. &amp; Trivedi, P. K. (2005). Microeconometrics - Hamilton, J. (1994). Time Series Analysis - Hayashi, F. (2000). Econometrics</p> <p>Key Papers: - Rubin, D. (1974). \"Estimating Causal Effects of Treatments\" - Hahn, J., Todd, P., &amp; Van der Klaauw, W. (2001). \"Identification and Estimation of Treatment Effects with RDD\" - Abadie, A., Diamond, A., &amp; Hainmueller, J. (2010). \"Synthetic Control Methods\" - Callaway, B. &amp; Sant'Anna, P. (2021). \"Difference-in-Differences with Multiple Time Periods\"</p>"},{"location":"modules/06-econometrics/#online-resources","title":"Online Resources","text":"<ul> <li>Mixtape Sessions - Causal inference</li> <li>Metrics Monday - Econometric concepts</li> <li>Nick Huntington-Klein's YouTube - Econometrics videos</li> </ul>"},{"location":"modules/06-econometrics/#software-and-tools","title":"Software and Tools","text":"<ul> <li>Stata: Industry standard (not covered, but principles transfer)</li> <li>R: Strong econometric packages (fixest, did, tidyverse)</li> <li>Python: Growing ecosystem (statsmodels, linearmodels, PyMC)</li> </ul> <p>This course focuses on Python, but concepts apply across platforms.</p>"},{"location":"modules/06-econometrics/#assessment","title":"Assessment","text":"<p>Master these skills:</p> <ul> <li> Estimate and interpret regression models</li> <li> Conduct proper statistical inference</li> <li> Apply causal inference methods appropriately</li> <li> Diagnose and address endogeneity</li> <li> Implement quasi-experimental designs</li> <li> Analyze time series data</li> <li> Use panel data methods</li> <li> Perform Bayesian analysis</li> <li> Communicate results effectively</li> </ul>"},{"location":"modules/06-econometrics/#next-steps","title":"Next Steps","text":"<p>After this module:</p> <ol> <li>Module 7: Machine Learning - Complement causal methods with prediction</li> <li>Module 8: Time Series - Deepen time series knowledge</li> <li>Real Research: Apply methods to original research questions</li> </ol>"},{"location":"modules/06-econometrics/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Understand Identification: Always ask \"What identifies the parameter?\"</li> <li>Check Assumptions: Test assumptions, don't just assume them</li> <li>Robust Inference: Use robust/clustered standard errors appropriately</li> <li>Visualize: Plot data before and after estimation</li> <li>Replicate: Reproduce published results for practice</li> <li>Report Thoroughly: Document all specification choices</li> </ol>"},{"location":"modules/06-econometrics/#common-pitfalls","title":"Common Pitfalls","text":""},{"location":"modules/06-econometrics/#pitfall-interpreting-correlation-as-causation","title":"Pitfall: Interpreting Correlation as Causation","text":"<p>Solution: Use causal inference framework, identify assumptions explicitly</p>"},{"location":"modules/06-econometrics/#pitfall-p-hacking-and-specification-search","title":"Pitfall: p-Hacking and Specification Search","text":"<p>Solution: Pre-register analyses, report robustness checks</p>"},{"location":"modules/06-econometrics/#pitfall-ignoring-clustered-dependence","title":"Pitfall: Ignoring Clustered Dependence","text":"<p>Solution: Use clustered standard errors at appropriate level</p>"},{"location":"modules/06-econometrics/#pitfall-weak-instruments","title":"Pitfall: Weak Instruments","text":"<p>Solution: Test instrument strength, report robust confidence intervals</p>"},{"location":"modules/06-econometrics/#need-help","title":"Need Help?","text":"<ul> <li>Review Numerical Methods for optimization</li> <li>Check FAQ</li> <li>See References</li> <li>Join Discussions</li> </ul> <p>Ready to master econometrics? Start with <code>01_Linear_Model_and_OLS.ipynb</code>!</p>"},{"location":"modules/07-machine-learning/","title":"Module 7: Machine Learning for Economics","text":"<p>Apply modern machine learning techniques to economic research and prediction.</p>"},{"location":"modules/07-machine-learning/#overview","title":"Overview","text":"<p>This comprehensive module covers machine learning from foundations to cutting-edge deep learning methods, with a focus on economic applications. You'll learn both classical ML and modern deep learning techniques, understanding when and how to apply them to economic problems.</p> <p>Duration: 12-15 weeks Difficulty: Advanced Prerequisites: Modules 1-2, 6 (recommended), Linear Algebra, Probability &amp; Statistics</p>"},{"location":"modules/07-machine-learning/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Apply supervised and unsupervised learning to economic data</li> <li>\u2713 Build and train deep neural networks</li> <li>\u2713 Use convolutional neural networks for image data</li> <li>\u2713 Apply recurrent networks and transformers to sequential data</li> <li>\u2713 Implement reinforcement learning algorithms</li> <li>\u2713 Use ML for causal inference</li> <li>\u2713 Work with text, images, and geospatial data</li> <li>\u2713 Apply ML to macroeconomic forecasting</li> </ul>"},{"location":"modules/07-machine-learning/#module-structure","title":"Module Structure","text":"<p>This module is organized into four parts:</p>"},{"location":"modules/07-machine-learning/#part-i-classical-machine-learning-notebooks-1-5","title":"Part I: Classical Machine Learning (Notebooks 1-5)","text":"<p>Foundations and traditional ML methods</p>"},{"location":"modules/07-machine-learning/#part-ii-deep-learning-foundations-notebooks-6-12","title":"Part II: Deep Learning Foundations (Notebooks 6-12)","text":"<p>Neural networks, CNNs, RNNs, autoencoders</p>"},{"location":"modules/07-machine-learning/#part-iii-advanced-deep-learning-notebooks-13-16","title":"Part III: Advanced Deep Learning (Notebooks 13-16)","text":"<p>Generative models, multimodal learning, reinforcement learning</p>"},{"location":"modules/07-machine-learning/#part-iv-economics-applications-notebooks-17-22","title":"Part IV: Economics Applications (Notebooks 17-22)","text":"<p>Specialized applications to economic problems</p>"},{"location":"modules/07-machine-learning/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/07-machine-learning/#part-i-classical-machine-learning","title":"Part I: Classical Machine Learning","text":""},{"location":"modules/07-machine-learning/#1-introduction-to-ml-for-economists","title":"1. Introduction to ML for Economists","text":"<p>Notebook: <code>01_Introduction_to_ML_for_Economists.ipynb</code></p> <ul> <li>ML vs. traditional econometrics</li> <li>Bias-variance tradeoff</li> <li>Cross-validation and model selection</li> <li>Overfitting and regularization</li> <li>Train/validation/test splits</li> <li>Performance metrics</li> </ul> <p>Key Concepts: - Prediction vs. causal inference - When to use ML in economics - Ethical considerations</p>"},{"location":"modules/07-machine-learning/#2-gradient-boosting-machines","title":"2. Gradient Boosting Machines","text":"<p>Notebook: <code>02_Gradient_Boosting_Machines.ipynb</code></p> <ul> <li>Boosting algorithms (AdaBoost, Gradient Boosting)</li> <li>XGBoost, LightGBM, CatBoost</li> <li>Hyperparameter tuning</li> <li>Feature importance</li> <li>Partial dependence plots</li> </ul> <p>Applications: - Credit risk modeling - Demand prediction - Price prediction</p>"},{"location":"modules/07-machine-learning/#3-support-vector-machines","title":"3. Support Vector Machines","text":"<p>Notebook: <code>03_Support_Vector_Machines.ipynb</code></p> <ul> <li>Linear SVM</li> <li>Kernel trick (RBF, polynomial)</li> <li>Soft margin classification</li> <li>Support vector regression (SVR)</li> <li>Multi-class classification</li> </ul> <p>Applications: - Binary classification problems - Non-linear decision boundaries - Text classification</p>"},{"location":"modules/07-machine-learning/#4-ensemble-methods","title":"4. Ensemble Methods","text":"<p>Notebook: <code>04_Ensemble_Methods.ipynb</code></p> <ul> <li>Bagging and Random Forests</li> <li>Stacking and blending</li> <li>Voting classifiers</li> <li>Feature engineering for ensembles</li> <li>Model interpretability</li> </ul> <p>Applications: - Combining multiple models - Robust predictions - Feature selection</p>"},{"location":"modules/07-machine-learning/#5-dimensionality-reduction-and-clustering","title":"5. Dimensionality Reduction and Clustering","text":"<p>Notebook: <code>05_Dimensionality_Reduction_and_Clustering.ipynb</code></p> <ul> <li>Principal Component Analysis (PCA)</li> <li>t-SNE and UMAP</li> <li>Factor models</li> <li>K-means clustering</li> <li>Hierarchical clustering</li> <li>DBSCAN</li> </ul> <p>Applications: - Data visualization - Feature extraction - Market segmentation - Country groupings</p>"},{"location":"modules/07-machine-learning/#part-ii-deep-learning-foundations","title":"Part II: Deep Learning Foundations","text":""},{"location":"modules/07-machine-learning/#6-deep-learning-foundations","title":"6. Deep Learning Foundations","text":"<p>Notebook: <code>06_Deep_Learning_Foundations.ipynb</code></p> <ul> <li>Neural network architecture</li> <li>Activation functions</li> <li>Backpropagation and gradient descent</li> <li>Optimizers (SGD, Adam, RMSprop)</li> <li>Regularization (dropout, batch normalization)</li> <li>Learning rate scheduling</li> </ul> <p>Frameworks: - TensorFlow/Keras basics - PyTorch basics - Model training loops</p>"},{"location":"modules/07-machine-learning/#7-convolutional-neural-networks-cnns","title":"7. Convolutional Neural Networks (CNNs)","text":"<p>Notebook: <code>07_Convolutional_Neural_Networks.ipynb</code></p> <ul> <li>Convolution and pooling operations</li> <li>CNN architectures (LeNet, AlexNet, VGG, ResNet)</li> <li>Transfer learning</li> <li>Data augmentation</li> <li>Fine-tuning pre-trained models</li> </ul> <p>Applications: - Satellite imagery analysis - Product image classification - Document processing</p>"},{"location":"modules/07-machine-learning/#8-recurrent-neural-networks-rnns","title":"8. Recurrent Neural Networks (RNNs)","text":"<p>Notebook: <code>08_Recurrent_Neural_Networks.ipynb</code></p> <ul> <li>RNN architectures</li> <li>Vanishing gradient problem</li> <li>Bidirectional RNNs</li> <li>Sequence-to-sequence models</li> <li>Teacher forcing</li> </ul> <p>Applications: - Time series prediction - Sequential decision-making - Text generation</p>"},{"location":"modules/07-machine-learning/#9-lstms-and-grus","title":"9. LSTMs and GRUs","text":"<p>Notebook: <code>09_LSTMs_and_GRUs.ipynb</code></p> <ul> <li>Long Short-Term Memory (LSTM) cells</li> <li>Gated Recurrent Units (GRUs)</li> <li>Forget gates, input gates, output gates</li> <li>Stacked LSTMs</li> <li>Attention mechanisms</li> </ul> <p>Applications: - Long-term dependencies - Text analysis - Economic time series - Speech recognition</p>"},{"location":"modules/07-machine-learning/#10-transformers","title":"10. Transformers","text":"<p>Notebook: <code>10_Transformers.ipynb</code></p> <ul> <li>Self-attention mechanism</li> <li>Multi-head attention</li> <li>Positional encoding</li> <li>Transformer architecture</li> <li>BERT, GPT models</li> <li>Fine-tuning transformers</li> </ul> <p>Applications: - Natural language processing - Document classification - Question answering - Economic text analysis</p>"},{"location":"modules/07-machine-learning/#11-autoencoders","title":"11. Autoencoders","text":"<p>Notebook: <code>11_Autoencoders.ipynb</code></p> <ul> <li>Vanilla autoencoders</li> <li>Variational autoencoders (VAE)</li> <li>Denoising autoencoders</li> <li>Sparse autoencoders</li> <li>Latent representations</li> </ul> <p>Applications: - Dimensionality reduction - Anomaly detection - Feature learning - Data compression</p>"},{"location":"modules/07-machine-learning/#12-self-supervised-learning","title":"12. Self-Supervised Learning","text":"<p>Notebook: <code>12_Self_Supervised_Learning.ipynb</code></p> <ul> <li>Contrastive learning (SimCLR, MoCo)</li> <li>Masked language modeling</li> <li>Pretext tasks</li> <li>Transfer learning strategies</li> <li>Fine-tuning approaches</li> </ul> <p>Applications: - Learning from unlabeled data - Pre-training models - Few-shot learning</p>"},{"location":"modules/07-machine-learning/#part-iii-advanced-deep-learning","title":"Part III: Advanced Deep Learning","text":""},{"location":"modules/07-machine-learning/#13-generative-models","title":"13. Generative Models","text":"<p>Notebook: <code>13_Generative_Models.ipynb</code></p> <ul> <li>Generative Adversarial Networks (GANs)</li> <li>Conditional GANs</li> <li>StyleGAN</li> <li>Diffusion models</li> <li>Applications to synthetic data</li> </ul> <p>Economic Applications: - Generating synthetic microdata - Data augmentation - Privacy-preserving analysis</p>"},{"location":"modules/07-machine-learning/#14-multi-modal-fusion","title":"14. Multi-modal Fusion","text":"<p>Notebook: <code>14_Multi_modal_Fusion.ipynb</code></p> <ul> <li>Combining text, images, and tabular data</li> <li>Cross-modal attention</li> <li>Vision-language models (CLIP, ALIGN)</li> <li>Multi-modal transformers</li> </ul> <p>Applications: - Product recommendations - Real estate valuation with images - Document understanding</p>"},{"location":"modules/07-machine-learning/#15-reinforcement-learning","title":"15. Reinforcement Learning","text":"<p>Notebook: <code>15_Reinforcement_Learning.ipynb</code></p> <ul> <li>Markov Decision Processes (MDPs)</li> <li>Value iteration and policy iteration</li> <li>Q-learning and Deep Q-Networks (DQN)</li> <li>Policy gradient methods</li> <li>Actor-Critic algorithms</li> </ul> <p>Applications: - Optimal trading strategies - Dynamic pricing - Sequential decision problems</p>"},{"location":"modules/07-machine-learning/#16-advanced-deep-rl","title":"16. Advanced Deep RL","text":"<p>Notebook: <code>16_Advanced_Deep_RL.ipynb</code></p> <ul> <li>Proximal Policy Optimization (PPO)</li> <li>Trust Region Policy Optimization (TRPO)</li> <li>Soft Actor-Critic (SAC)</li> <li>Multi-agent reinforcement learning</li> <li>Model-based RL</li> </ul> <p>Applications: - Auction design - Market making - Resource allocation</p>"},{"location":"modules/07-machine-learning/#part-iv-economics-applications","title":"Part IV: Economics Applications","text":""},{"location":"modules/07-machine-learning/#17-causal-machine-learning","title":"17. Causal Machine Learning","text":"<p>Notebook: <code>17_Causal_ML.ipynb</code></p> <ul> <li>Double/debiased machine learning (DML)</li> <li>Causal forests</li> <li>Meta-learners (S-learner, T-learner, X-learner)</li> <li>Heterogeneous treatment effects</li> <li>Causal inference with ML</li> </ul> <p>Methods: - Orthogonal/doubly-robust estimation - Generic machine learning in econometrics - Conditional average treatment effects (CATE)</p> <p>Applications: - Policy heterogeneity - Personalized treatments - Optimal targeting</p>"},{"location":"modules/07-machine-learning/#18-natural-language-processing-for-economics","title":"18. Natural Language Processing for Economics","text":"<p>Notebook: <code>18_Natural_Language_Processing.ipynb</code></p> <ul> <li>Text preprocessing and tokenization</li> <li>Word embeddings (Word2Vec, GloVe)</li> <li>Topic modeling (LDA)</li> <li>Sentiment analysis</li> <li>Named entity recognition</li> <li>Economic text analysis</li> </ul> <p>Applications: - Analyzing Fed minutes - Corporate filings analysis - News sentiment and markets - Policy document analysis</p>"},{"location":"modules/07-machine-learning/#19-graph-neural-networks","title":"19. Graph Neural Networks","text":"<p>Notebook: <code>19_Graph_Neural_Networks.ipynb</code></p> <ul> <li>Graph representation learning</li> <li>Graph convolutional networks (GCN)</li> <li>GraphSAGE and GAT</li> <li>Message passing neural networks</li> <li>Link prediction and node classification</li> </ul> <p>Applications: - Trade networks - Financial networks - Supply chains - Social networks in economics</p>"},{"location":"modules/07-machine-learning/#20-geospatial-machine-learning","title":"20. Geospatial Machine Learning","text":"<p>Notebook: <code>20_Geospatial_Data.ipynb</code></p> <ul> <li>Spatial data structures</li> <li>Geospatial features</li> <li>CNNs for satellite imagery</li> <li>Spatial prediction</li> <li>Location-based modeling</li> </ul> <p>Applications: - Poverty mapping - Urban planning - Agricultural yield prediction - Regional economics</p>"},{"location":"modules/07-machine-learning/#21-ml-for-macro-forecasting","title":"21. ML for Macro Forecasting","text":"<p>Notebook: <code>21_ML_for_Macro_Forecasting.ipynb</code></p> <ul> <li>ML methods for time series</li> <li>Macroeconomic forecasting</li> <li>Feature engineering for macro data</li> <li>Combining ML with economic theory</li> <li>Nowcasting</li> </ul> <p>Methods: - Random forests for forecasting - Neural networks for macro - Model combination strategies</p> <p>Applications: - GDP growth prediction - Inflation forecasting - Recession prediction - High-frequency indicators</p>"},{"location":"modules/07-machine-learning/#22-advanced-computer-vision","title":"22. Advanced Computer Vision","text":"<p>Notebook: <code>22_Style_Transfer_and_Advanced_Vision.ipynb</code></p> <ul> <li>Neural style transfer</li> <li>Image segmentation</li> <li>Object detection (YOLO, Faster R-CNN)</li> <li>Vision transformers</li> <li>Advanced CNN architectures</li> </ul> <p>Economic Applications: - Analyzing retail environments - Infrastructure assessment - Housing quality from images - Environmental monitoring</p>"},{"location":"modules/07-machine-learning/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/07-machine-learning/#required-knowledge","title":"Required Knowledge","text":"<p>Mathematics: - Linear algebra (matrices, eigenvalues) - Calculus (derivatives, chain rule) - Probability and statistics</p> <p>Programming: - Python proficiency (Module 1) - NumPy and pandas expertise - Basic deep learning frameworks exposure helpful</p> <p>Economics (for applications): - Econometrics (Module 6) - Causal inference concepts</p>"},{"location":"modules/07-machine-learning/#key-libraries-and-frameworks","title":"Key Libraries and Frameworks","text":""},{"location":"modules/07-machine-learning/#core-ml","title":"Core ML","text":"<ul> <li>Scikit-learn: Classical ML algorithms</li> <li>XGBoost/LightGBM: Gradient boosting</li> </ul>"},{"location":"modules/07-machine-learning/#deep-learning","title":"Deep Learning","text":"<ul> <li>TensorFlow/Keras: High-level deep learning</li> <li>PyTorch: Flexible deep learning framework</li> <li>PyTorch Lightning: Simplified PyTorch training</li> </ul>"},{"location":"modules/07-machine-learning/#nlp","title":"NLP","text":"<ul> <li>Transformers (Hugging Face): Pre-trained models</li> <li>spaCy: Industrial NLP</li> <li>NLTK: Text processing</li> </ul>"},{"location":"modules/07-machine-learning/#computer-vision","title":"Computer Vision","text":"<ul> <li>torchvision: Computer vision for PyTorch</li> <li>OpenCV: Image processing</li> <li>Pillow: Image manipulation</li> </ul>"},{"location":"modules/07-machine-learning/#specialized","title":"Specialized","text":"<ul> <li>CausalML: Causal ML methods</li> <li>EconML (Microsoft): Heterogeneous treatment effects</li> <li>Gym/Stable-Baselines3: Reinforcement learning</li> </ul>"},{"location":"modules/07-machine-learning/#learning-path","title":"Learning Path","text":""},{"location":"modules/07-machine-learning/#weeks-1-3-classical-ml","title":"Weeks 1-3: Classical ML","text":"<ul> <li>Complete notebooks 01-05</li> <li>Master bias-variance tradeoff</li> <li>Learn model selection</li> </ul>"},{"location":"modules/07-machine-learning/#weeks-4-5-deep-learning-basics","title":"Weeks 4-5: Deep Learning Basics","text":"<ul> <li>Complete notebook 06</li> <li>Understand backpropagation</li> <li>Train first neural networks</li> </ul>"},{"location":"modules/07-machine-learning/#weeks-6-7-computer-vision","title":"Weeks 6-7: Computer Vision","text":"<ul> <li>Complete notebook 07</li> <li>Apply CNNs</li> <li>Use transfer learning</li> </ul>"},{"location":"modules/07-machine-learning/#weeks-8-9-sequential-models","title":"Weeks 8-9: Sequential Models","text":"<ul> <li>Complete notebooks 08-10</li> <li>Master RNNs, LSTMs, Transformers</li> <li>Handle sequential data</li> </ul>"},{"location":"modules/07-machine-learning/#weeks-10-11-advanced-topics","title":"Weeks 10-11: Advanced Topics","text":"<ul> <li>Complete notebooks 11-16</li> <li>Explore autoencoders, GANs, RL</li> <li>Understand cutting-edge methods</li> </ul>"},{"location":"modules/07-machine-learning/#weeks-12-15-economic-applications","title":"Weeks 12-15: Economic Applications","text":"<ul> <li>Complete notebooks 17-22</li> <li>Apply ML to real economic problems</li> <li>Integrate causal inference and ML</li> </ul>"},{"location":"modules/07-machine-learning/#practice-projects","title":"Practice Projects","text":"<p>Comprehensive projects throughout:</p> <ol> <li>Credit Scoring: Build ensemble model for default prediction</li> <li>Image-Based Pricing: Predict house prices from images</li> <li>Macro Forecaster: Build ML-based GDP forecasting model</li> <li>Sentiment Trading: Analyze news sentiment for trading</li> <li>Poverty Mapping: Use satellite images to predict poverty</li> <li>Treatment Effects: Estimate heterogeneous treatment effects with causal ML</li> <li>Chatbot: Build economic Q&amp;A system with transformers</li> <li>RL Trader: Implement trading bot with deep RL</li> </ol>"},{"location":"modules/07-machine-learning/#computational-requirements","title":"Computational Requirements","text":""},{"location":"modules/07-machine-learning/#hardware-recommendations","title":"Hardware Recommendations","text":"<p>Minimum: - CPU: 4+ cores - RAM: 16GB - Storage: 50GB free</p> <p>Recommended: - GPU: NVIDIA with 8GB+ VRAM - RAM: 32GB - Storage: 100GB SSD</p> <p>Cloud Alternatives: - Google Colab (free GPU) - Kaggle Kernels (free GPU) - AWS SageMaker - Google Cloud AI Platform</p>"},{"location":"modules/07-machine-learning/#common-challenges","title":"Common Challenges","text":""},{"location":"modules/07-machine-learning/#challenge-overfitting","title":"Challenge: Overfitting","text":"<p>Solutions: - Use cross-validation - Apply regularization (L1/L2, dropout) - Get more data - Reduce model complexity - Ensemble methods</p>"},{"location":"modules/07-machine-learning/#challenge-slow-training","title":"Challenge: Slow Training","text":"<p>Solutions: - Use GPU acceleration - Reduce batch size - Use mixed precision training - Apply transfer learning - Optimize data pipeline</p>"},{"location":"modules/07-machine-learning/#challenge-imbalanced-data","title":"Challenge: Imbalanced Data","text":"<p>Solutions: - Oversample minority class (SMOTE) - Undersample majority class - Use class weights - Choose appropriate metrics (F1, AUC-ROC)</p>"},{"location":"modules/07-machine-learning/#challenge-interpretability","title":"Challenge: Interpretability","text":"<p>Solutions: - SHAP values - LIME - Partial dependence plots - Attention visualization - Model distillation</p>"},{"location":"modules/07-machine-learning/#ml-vs-econometrics","title":"ML vs. Econometrics","text":"<p>Understanding when to use each:</p>"},{"location":"modules/07-machine-learning/#use-ml-when","title":"Use ML When:","text":"<ul> <li>Primary goal is prediction</li> <li>Complex non-linear relationships</li> <li>High-dimensional data</li> <li>Image, text, or graph data</li> <li>Need flexible functional forms</li> </ul>"},{"location":"modules/07-machine-learning/#use-econometrics-when","title":"Use Econometrics When:","text":"<ul> <li>Primary goal is causal inference</li> <li>Need interpretable coefficients</li> <li>Want to test economic theory</li> <li>Require structural parameters</li> <li>Small datasets with strong assumptions</li> </ul>"},{"location":"modules/07-machine-learning/#best-practice","title":"Best Practice:","text":"<ul> <li>Combine both: Use ML for nuisance parameters in causal inference</li> <li>Double machine learning</li> <li>ML for first-stage predictions</li> </ul>"},{"location":"modules/07-machine-learning/#real-world-applications","title":"Real-World Applications","text":"<p>ML is transforming economics research:</p> <p>Academia: - Labor economics (skill prediction from text) - Development (satellite-based poverty estimation) - Trade (product classification from images) - Finance (return prediction, portfolio optimization) - Macro (nowcasting, forecast combination)</p> <p>Industry: - Credit scoring - Fraud detection - Dynamic pricing - Recommendation systems - Algorithmic trading</p> <p>Policy: - Targeting social programs - Tax enforcement (audit selection) - Regulatory compliance - Economic forecasting</p>"},{"location":"modules/07-machine-learning/#ethical-considerations","title":"Ethical Considerations","text":"<p>Critical issues when applying ML:</p> <ol> <li>Fairness: Algorithmic bias and discrimination</li> <li>Privacy: Data protection and anonymization</li> <li>Transparency: Black-box models in policy</li> <li>Accountability: Who's responsible for ML decisions?</li> <li>Economic Impacts: Job displacement, inequality</li> </ol> <p>Always consider: - Fairness metrics (demographic parity, equalized odds) - Explainability requirements - Regulatory constraints - Social welfare implications</p>"},{"location":"modules/07-machine-learning/#resources","title":"Resources","text":""},{"location":"modules/07-machine-learning/#essential-reading","title":"Essential Reading","text":"<p>Books: - Hastie, T., Tibshirani, R., &amp; Friedman, J. (2009). The Elements of Statistical Learning - Goodfellow, I., Bengio, Y., &amp; Courville, A. (2016). Deep Learning - Murphy, K. (2022). Probabilistic Machine Learning: An Introduction - Mullainathan, S. &amp; Spiess, J. (2017). \"Machine Learning: An Applied Econometric Approach\"</p> <p>Papers: - Athey, S. &amp; Imbens, G. (2019). \"Machine Learning Methods Economists Should Know About\" - Chernozhukov, V. et al. (2018). \"Double/Debiased Machine Learning\" - Wager, S. &amp; Athey, S. (2018). \"Estimation and Inference of Heterogeneous Treatment Effects\"</p>"},{"location":"modules/07-machine-learning/#online-courses","title":"Online Courses","text":"<ul> <li>Fast.ai - Practical deep learning</li> <li>Deeplearning.ai - Andrew Ng's courses</li> <li>Stanford CS229 - Machine learning</li> </ul>"},{"location":"modules/07-machine-learning/#documentation","title":"Documentation","text":"<ul> <li>Scikit-learn User Guide</li> <li>PyTorch Tutorials</li> <li>TensorFlow Guides</li> <li>Hugging Face Docs</li> </ul>"},{"location":"modules/07-machine-learning/#assessment","title":"Assessment","text":"<p>To master this module:</p> <ul> <li> Implement classical ML algorithms</li> <li> Build and train deep neural networks</li> <li> Apply CNNs to image data</li> <li> Use RNNs/Transformers for sequences</li> <li> Implement reinforcement learning</li> <li> Combine ML with causal inference</li> <li> Apply ML to real economic problems</li> <li> Interpret and explain ML models</li> <li> Consider ethical implications</li> </ul>"},{"location":"modules/07-machine-learning/#next-steps","title":"Next Steps","text":"<p>After completing this module:</p> <ol> <li>Specialize: Choose subfield (NLP, CV, RL, Causal ML)</li> <li>Research Projects: Apply to original research</li> <li>Kaggle Competitions: Practice with real competitions</li> <li>Read Papers: Follow ML conferences (NeurIPS, ICML, ICLR)</li> <li>Contribute: Open-source ML projects</li> </ol>"},{"location":"modules/07-machine-learning/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Code Along: Type every line, don't just read</li> <li>Experiment: Change hyperparameters, see what happens</li> <li>Start Simple: Master basics before advanced topics</li> <li>Use GPUs: Essential for deep learning (Google Colab is free)</li> <li>Read Papers: Understand theory behind methods</li> <li>Join Community: Kaggle, Stack Overflow, GitHub</li> <li>Build Projects: Portfolio of applied work</li> <li>Stay Current: ML evolves rapidly</li> </ol>"},{"location":"modules/07-machine-learning/#need-help","title":"Need Help?","text":"<ul> <li>Review Numerical Methods for optimization</li> <li>Check Econometrics for causal inference</li> <li>See FAQ</li> <li>Join Discussions</li> <li>Visit PyTorch Forums</li> <li>Ask on Stack Overflow</li> </ul> <p>Ready to dive into machine learning? Start with <code>01_Introduction_to_ML_for_Economists.ipynb</code>!</p>"},{"location":"modules/08-time-series/","title":"Module 8: Time Series Analysis","text":"<p>Master modern time series methods for economic and financial data.</p>"},{"location":"modules/08-time-series/#overview","title":"Overview","text":"<p>This module provides comprehensive coverage of time series econometrics, from classical ARMA models to modern volatility modeling and cointegration techniques. You'll learn to analyze, forecast, and understand temporal dynamics in economic data.</p> <p>Duration: 4-5 weeks Difficulty: Advanced Prerequisites: Module 6 (Econometrics), probability theory, basic time series concepts</p>"},{"location":"modules/08-time-series/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Model and forecast univariate time series</li> <li>\u2713 Estimate ARMA and ARIMA models</li> <li>\u2713 Test for stationarity and unit roots</li> <li>\u2713 Analyze multivariate time series with VAR</li> <li>\u2713 Model volatility using ARCH/GARCH</li> <li>\u2713 Test for and model cointegration</li> <li>\u2713 Apply error correction models</li> <li>\u2713 Forecast economic and financial variables</li> </ul>"},{"location":"modules/08-time-series/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/08-time-series/#1-introduction-to-time-series","title":"1. Introduction to Time Series","text":"<p>Notebook: <code>01_Introduction_to_Time_Series.ipynb</code></p> <ul> <li>Time series data characteristics</li> <li>Stationarity: strict vs. weak</li> <li>Autocovariance and autocorrelation functions</li> <li>Partial autocorrelation function (PACF)</li> <li>White noise and random walks</li> <li>Trends and seasonality</li> <li>Time series decomposition</li> </ul> <p>Fundamental Concepts: - Lag operator notation - Difference operator - Moving average representation - Wold decomposition theorem</p> <p>Data Handling: - Date/time indexing in pandas - Handling missing data - Seasonal adjustment - Frequency conversion</p> <p>Applications: - Exploratory time series analysis - Identifying patterns in data - Decomposing economic indicators</p>"},{"location":"modules/08-time-series/#2-arma-models","title":"2. ARMA Models","text":"<p>Notebook: <code>02_ARMA_Models.ipynb</code></p> <ul> <li>Autoregressive (AR) models</li> <li>Moving average (MA) models</li> <li>ARMA(p,q) specification</li> <li>Identification using ACF/PACF</li> <li>Maximum likelihood estimation</li> <li>Diagnostic checking</li> <li>Information criteria (AIC, BIC)</li> </ul> <p>AR Models: - AR(1) process and properties - Higher-order AR processes - Stationarity conditions - Yule-Walker equations</p> <p>MA Models: - MA(1) process and properties - Higher-order MA processes - Invertibility conditions - Identification challenges</p> <p>ARMA Estimation: - Method of moments - Maximum likelihood - Conditional sum of squares - State space methods</p> <p>Applications: - Modeling economic growth - Interest rate dynamics - Inflation persistence</p>"},{"location":"modules/08-time-series/#3-arima-and-forecasting","title":"3. ARIMA and Forecasting","text":"<p>Notebook: <code>03_ARIMA_and_Forecasting.ipynb</code></p> <ul> <li>Integrated processes and unit roots</li> <li>ARIMA(p,d,q) models</li> <li>Seasonal ARIMA (SARIMA)</li> <li>Model selection strategy (Box-Jenkins)</li> <li>Point forecasts and prediction intervals</li> <li>Rolling and recursive forecasting</li> <li>Forecast evaluation (RMSE, MAE, MAPE)</li> </ul> <p>Differencing: - First and higher-order differences - Seasonal differencing - Overdifferencing issues</p> <p>Unit Root Tests: - Augmented Dickey-Fuller (ADF) test - Phillips-Perron (PP) test - KPSS test - Interpreting test results</p> <p>Forecasting: - One-step-ahead forecasts - Multi-step-ahead forecasts - Forecast intervals - Forecast combination</p> <p>Applications: - GDP forecasting - Unemployment rate prediction - Sales forecasting</p>"},{"location":"modules/08-time-series/#4-vector-autoregression-var","title":"4. Vector Autoregression (VAR)","text":"<p>Notebook: <code>04_Vector_Autoregression.ipynb</code></p> <ul> <li>VAR model specification</li> <li>OLS estimation of VAR</li> <li>Lag length selection</li> <li>Impulse response functions (IRFs)</li> <li>Forecast error variance decomposition (FEVD)</li> <li>Granger causality testing</li> <li>Structural VAR (SVAR) identification</li> </ul> <p>VAR Theory: - Reduced-form vs. structural VAR - Stability conditions - MA representation</p> <p>Identification: - Recursive (Cholesky) identification - Short-run restrictions - Long-run restrictions - Sign restrictions</p> <p>Inference: - Bootstrap confidence intervals - Asymptotic standard errors - Bayesian VAR (BVAR)</p> <p>Applications: - Monetary policy analysis - Fiscal policy effects - Macro variable interactions - Business cycle analysis</p>"},{"location":"modules/08-time-series/#5-volatility-modeling-archgarch","title":"5. Volatility Modeling: ARCH/GARCH","text":"<p>Notebook: <code>05_Volatility_Modeling_ARCH_GARCH.ipynb</code></p> <ul> <li>Stylized facts of financial returns</li> <li>Conditional heteroskedasticity</li> <li>ARCH models</li> <li>GARCH(p,q) specification</li> <li>Extensions: EGARCH, TGARCH, FIGARCH</li> <li>Volatility forecasting</li> <li>Risk management applications</li> </ul> <p>ARCH Models: - ARCH(1) and properties - Estimation by MLE - Testing for ARCH effects - Ljung-Box test on squared residuals</p> <p>GARCH Models: - GARCH(1,1) - the workhorse model - Variance targeting - Persistence and half-life - Forecasting volatility</p> <p>Advanced Models: - EGARCH (exponential GARCH) - GJR-GARCH (threshold GARCH) - Integrated GARCH (long memory) - Multivariate GARCH</p> <p>Applications: - Stock return volatility - Exchange rate volatility - Value-at-Risk (VaR) calculation - Option pricing inputs - Portfolio risk management</p>"},{"location":"modules/08-time-series/#6-cointegration-and-error-correction-models","title":"6. Cointegration and Error Correction Models","text":"<p>Notebook: <code>06_Cointegration_and_Error_Correction_Models.ipynb</code></p> <ul> <li>Spurious regression problem</li> <li>Concept of cointegration</li> <li>Engle-Granger two-step method</li> <li>Johansen cointegration test</li> <li>Vector error correction model (VECM)</li> <li>Long-run and short-run dynamics</li> <li>Testing restrictions on cointegrating vectors</li> </ul> <p>Theory: - I(1) processes - Common stochastic trends - Granger representation theorem - Cointegration rank</p> <p>Testing: - Engle-Granger test - Johansen trace and max eigenvalue tests - Determining cointegration rank</p> <p>VECM: - Specification and estimation - Loading coefficients - Adjustment speeds - Impulse responses in VECM</p> <p>Applications: - Purchasing power parity (PPP) - Interest rate parity - Consumption and income relationships - Money demand functions - Term structure of interest rates</p>"},{"location":"modules/08-time-series/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/08-time-series/#required-knowledge","title":"Required Knowledge","text":"<p>Statistics: - Probability theory - Statistical inference - Hypothesis testing - Maximum likelihood estimation</p> <p>Mathematics: - Linear algebra - Complex numbers (for AR roots) - Calculus and optimization</p> <p>Programming: - Module 1 (Python foundations) - Module 6 (Econometrics basics) - pandas for time series</p> <p>Economics: - Basic macro concepts - Financial markets knowledge helpful</p>"},{"location":"modules/08-time-series/#key-libraries","title":"Key Libraries","text":"<ul> <li>Statsmodels: Comprehensive time series tools</li> <li><code>statsmodels.tsa.arima.model.ARIMA</code></li> <li><code>statsmodels.tsa.statespace.sarimax.SARIMAX</code></li> <li><code>statsmodels.tsa.vector_ar.var_model.VAR</code></li> <li> <p><code>statsmodels.tsa.stattools</code> (unit root tests)</p> </li> <li> <p>Arch: Volatility modeling</p> </li> <li><code>arch.univariate</code> (ARCH/GARCH)</li> <li> <p><code>arch.bootstrap</code> (inference)</p> </li> <li> <p>Pandas: Time series data structures</p> </li> <li>NumPy: Numerical operations</li> <li>Matplotlib/Seaborn: Visualization</li> </ul>"},{"location":"modules/08-time-series/#learning-path","title":"Learning Path","text":""},{"location":"modules/08-time-series/#week-1-foundations","title":"Week 1: Foundations","text":"<ul> <li>Complete notebooks 01-02</li> <li>Master stationarity concepts</li> <li>Fit ARMA models</li> </ul>"},{"location":"modules/08-time-series/#week-2-forecasting","title":"Week 2: Forecasting","text":"<ul> <li>Complete notebook 03</li> <li>Learn Box-Jenkins methodology</li> <li>Implement ARIMA forecasting</li> </ul>"},{"location":"modules/08-time-series/#week-3-multivariate-models","title":"Week 3: Multivariate Models","text":"<ul> <li>Complete notebook 04</li> <li>Estimate VAR models</li> <li>Compute impulse responses</li> </ul>"},{"location":"modules/08-time-series/#week-4-volatility","title":"Week 4: Volatility","text":"<ul> <li>Complete notebook 05</li> <li>Model conditional heteroskedasticity</li> <li>Forecast volatility</li> </ul>"},{"location":"modules/08-time-series/#week-5-cointegration","title":"Week 5: Cointegration","text":"<ul> <li>Complete notebook 06</li> <li>Test for cointegration</li> <li>Estimate VECM</li> </ul>"},{"location":"modules/08-time-series/#practice-exercises","title":"Practice Exercises","text":"<p>Key exercises throughout the module:</p> <ol> <li>ACF/PACF Analysis: Identify appropriate ARMA orders for GDP growth</li> <li>Unit Root Testing: Test various economic series for stationarity</li> <li>ARIMA Forecasting: Build forecasting model for unemployment</li> <li>VAR Analysis: Analyze monetary policy shocks with 3-variable VAR</li> <li>GARCH Estimation: Model S&amp;P 500 return volatility</li> <li>VaR Calculation: Compute 1-day ahead Value-at-Risk using GARCH</li> <li>Cointegration Test: Test PPP for exchange rates</li> <li>VECM Estimation: Model consumption-income relationship with VECM</li> </ol>"},{"location":"modules/08-time-series/#computational-challenges","title":"Computational Challenges","text":""},{"location":"modules/08-time-series/#challenge-model-selection","title":"Challenge: Model Selection","text":"<p>Solutions: - Use information criteria (AIC, BIC) - Cross-validation for forecasting - Diagnostic checking of residuals - Compare out-of-sample performance</p>"},{"location":"modules/08-time-series/#challenge-non-convergence-in-mle","title":"Challenge: Non-Convergence in MLE","text":"<p>Solutions: - Try different starting values - Simplify model (reduce parameters) - Check for identification issues - Use method of moments for initial values</p>"},{"location":"modules/08-time-series/#challenge-high-dimensional-var","title":"Challenge: High-Dimensional VAR","text":"<p>Solutions: - Apply dimension reduction - Use Bayesian VAR with shrinkage priors - Factor-augmented VAR (FAVAR) - Sparse VAR methods</p>"},{"location":"modules/08-time-series/#challenge-structural-breaks","title":"Challenge: Structural Breaks","text":"<p>Solutions: - Test for breaks (Chow test, Quandt-Andrews) - Use rolling/recursive estimation - Allow for time-varying parameters - Robust forecasting methods</p>"},{"location":"modules/08-time-series/#common-pitfalls","title":"Common Pitfalls","text":""},{"location":"modules/08-time-series/#pitfall-spurious-regression","title":"Pitfall: Spurious Regression","text":"<p>Issue: Regressing non-stationary variables gives misleading results</p> <p>Solution: - Test for unit roots first - Difference data or test for cointegration - Use appropriate specification (VECM if cointegrated)</p>"},{"location":"modules/08-time-series/#pitfall-overfitting","title":"Pitfall: Overfitting","text":"<p>Issue: Too many parameters, poor out-of-sample performance</p> <p>Solution: - Use information criteria - Validate on holdout data - Prefer parsimonious models</p>"},{"location":"modules/08-time-series/#pitfall-ignoring-structural-breaks","title":"Pitfall: Ignoring Structural Breaks","text":"<p>Issue: Parameters change over time</p> <p>Solution: - Plot data and residuals - Formal break tests - Use robust methods</p>"},{"location":"modules/08-time-series/#pitfall-misinterpreting-granger-causality","title":"Pitfall: Misinterpreting Granger Causality","text":"<p>Issue: Granger causality \u2260 true causality</p> <p>Solution: - Careful interpretation - Consider economic theory - Use with other evidence</p>"},{"location":"modules/08-time-series/#real-world-applications","title":"Real-World Applications","text":"<p>Time series methods are essential for:</p> <p>Central Banks: - Inflation forecasting - Monetary policy analysis - Nowcasting GDP - Financial stability monitoring</p> <p>Finance: - Asset return modeling - Volatility forecasting - Risk management - Trading strategies</p> <p>Businesses: - Demand forecasting - Inventory management - Revenue projection - Capacity planning</p> <p>Government: - Economic forecasting - Budget projections - Policy impact analysis</p> <p>Academia: - Business cycle research - Macro empirics - Financial econometrics</p>"},{"location":"modules/08-time-series/#model-selection-guide","title":"Model Selection Guide","text":""},{"location":"modules/08-time-series/#choose-arma-when","title":"Choose ARMA when:","text":"<ul> <li>Data is stationary</li> <li>Need to model short-term dynamics</li> <li>Interested in autocorrelation structure</li> </ul>"},{"location":"modules/08-time-series/#choose-arima-when","title":"Choose ARIMA when:","text":"<ul> <li>Data has unit roots</li> <li>Need to forecast non-stationary series</li> <li>Dealing with trending data</li> </ul>"},{"location":"modules/08-time-series/#choose-var-when","title":"Choose VAR when:","text":"<ul> <li>Multiple related time series</li> <li>Interested in dynamic interactions</li> <li>Want impulse response analysis</li> </ul>"},{"location":"modules/08-time-series/#choose-garch-when","title":"Choose GARCH when:","text":"<ul> <li>Modeling financial returns</li> <li>Volatility clustering present</li> <li>Risk management applications</li> </ul>"},{"location":"modules/08-time-series/#choose-vecm-when","title":"Choose VECM when:","text":"<ul> <li>Variables are cointegrated</li> <li>Modeling long-run relationships</li> <li>Separating short-run and long-run dynamics</li> </ul>"},{"location":"modules/08-time-series/#resources","title":"Resources","text":""},{"location":"modules/08-time-series/#essential-reading","title":"Essential Reading","text":"<p>Textbooks: - Hamilton, J. (1994). Time Series Analysis. Princeton - L\u00fctkepohl, H. (2005). New Introduction to Multiple Time Series Analysis - Tsay, R. (2010). Analysis of Financial Time Series, 3<sup>rd</sup> ed. - Enders, W. (2014). Applied Econometric Time Series, 4<sup>th</sup> ed.</p> <p>Papers: - Engle, R. (1982). \"Autoregressive Conditional Heteroskedasticity\" - Bollerslev, T. (1986). \"Generalized Autoregressive Conditional Heteroskedasticity\" - Johansen, S. (1988). \"Statistical Analysis of Cointegration Vectors\" - Sims, C. (1980). \"Macroeconomics and Reality\"</p>"},{"location":"modules/08-time-series/#online-resources","title":"Online Resources","text":"<ul> <li>Statsmodels Time Series</li> <li>NBER Time Series Analysis</li> <li>Penn State Time Series Course</li> </ul>"},{"location":"modules/08-time-series/#datasets","title":"Datasets","text":"<p>Practice with real economic data:</p> <p>Sources: - FRED - US economic data - Yahoo Finance - Financial data - Quandl - Multiple data sources - World Bank - International data - ECB Statistical Data Warehouse - European data</p> <p>Recommended Series: - GDP, unemployment, inflation (macro) - Stock indices, exchange rates (finance) - Interest rates (money markets) - Commodity prices</p>"},{"location":"modules/08-time-series/#assessment","title":"Assessment","text":"<p>To master this module, demonstrate ability to:</p> <ul> <li> Test for stationarity and understand implications</li> <li> Identify and estimate ARMA/ARIMA models</li> <li> Produce and evaluate forecasts</li> <li> Estimate and interpret VAR models</li> <li> Compute impulse response functions</li> <li> Model volatility with ARCH/GARCH</li> <li> Test for and model cointegration</li> <li> Estimate and interpret VECM</li> <li> Choose appropriate models for different contexts</li> <li> Communicate results effectively</li> </ul>"},{"location":"modules/08-time-series/#next-steps","title":"Next Steps","text":"<p>After completing this module:</p> <ol> <li>Module 7: Machine Learning - Modern forecasting with ML</li> <li>Module 9: Finance - Apply to asset pricing and portfolio theory</li> <li>Research: Use time series methods in applied work</li> <li>Advanced Topics: State space models, Bayesian methods, high-frequency data</li> </ol>"},{"location":"modules/08-time-series/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Visualize First: Always plot your data before modeling</li> <li>Check Stationarity: Test for unit roots before proceeding</li> <li>Diagnostic Checking: Examine residuals carefully</li> <li>Out-of-Sample Testing: Validate forecasts on holdout data</li> <li>Economic Intuition: Models should make economic sense</li> <li>Start Simple: Begin with parsimonious models</li> <li>Compare Models: Multiple approaches often useful</li> <li>Document Choices: Keep track of specification decisions</li> </ol>"},{"location":"modules/08-time-series/#software-tips","title":"Software Tips","text":""},{"location":"modules/08-time-series/#efficient-workflow","title":"Efficient Workflow","text":"<pre><code># Load data with datetime index\nimport pandas as pd\ndata = pd.read_csv('data.csv', index_col=0, parse_dates=True)\n\n# Quick diagnostics\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nplot_acf(data)\nplot_pacf(data)\n\n# Fit ARIMA efficiently\nfrom statsmodels.tsa.arima.model import ARIMA\nmodel = ARIMA(data, order=(1,1,1))\nresults = model.fit()\nprint(results.summary())\n\n# Forecast\nforecast = results.forecast(steps=12)\n</code></pre>"},{"location":"modules/08-time-series/#need-help","title":"Need Help?","text":"<ul> <li>Review Econometrics for statistical foundations</li> <li>Check Numerical Methods for optimization</li> <li>See FAQ</li> <li>Join Discussions</li> <li>Visit Statsmodels Community</li> </ul> <p>Ready to analyze time series? Start with <code>01_Introduction_to_Time_Series.ipynb</code>!</p>"},{"location":"modules/09-finance/","title":"Module 9: Computational Finance","text":"<p>Apply computational methods to financial economics and asset pricing.</p>"},{"location":"modules/09-finance/#overview","title":"Overview","text":"<p>This module covers computational methods in finance, from portfolio theory to derivative pricing and credit risk modeling. You'll learn to solve financial models numerically and apply modern computational techniques to real-world finance problems.</p> <p>Duration: 5-6 weeks Difficulty: Advanced Prerequisites: Modules 1-3, 8; Probability theory, Stochastic calculus basics</p>"},{"location":"modules/09-finance/#learning-objectives","title":"Learning Objectives","text":"<p>By the end of this module, you will be able to:</p> <ul> <li>\u2713 Solve financial frictions models (Bernanke-Gertler-Gilchrist)</li> <li>\u2713 Optimize portfolios using mean-variance and modern techniques</li> <li>\u2713 Price derivatives using binomial and Black-Scholes models</li> <li>\u2713 Apply stochastic calculus to continuous-time finance</li> <li>\u2713 Model and price credit risk</li> <li>\u2713 Analyze high-frequency financial data</li> <li>\u2713 Build asset pricing models</li> <li>\u2713 Implement computational trading strategies</li> </ul>"},{"location":"modules/09-finance/#topics-covered","title":"Topics Covered","text":""},{"location":"modules/09-finance/#1-financial-frictions-bgg-model","title":"1. Financial Frictions: BGG Model","text":"<p>Notebook: <code>01_Financial_Frictions_BGG.ipynb</code></p> <ul> <li>Bernanke-Gertler-Gilchrist (BGG) financial accelerator</li> <li>Costly state verification</li> <li>Agency costs and credit spreads</li> <li>Net worth dynamics</li> <li>Financial shocks and amplification</li> <li>Implementation in DSGE models</li> </ul> <p>Key Concepts: - External finance premium - Balance sheet effects - Credit constraints - Financial accelerator mechanism</p> <p>Computational Methods: - Solving nonlinear equations for contract terms - Log-linearization with financial frictions - Impulse responses to financial shocks</p> <p>Applications: - Financial crisis analysis - Monetary policy with financial frictions - Credit market interventions - Business cycle amplification</p>"},{"location":"modules/09-finance/#2-portfolio-theory","title":"2. Portfolio Theory","text":"<p>Notebook: <code>02_Portfolio_Theory.ipynb</code></p> <ul> <li>Mean-variance optimization (Markowitz)</li> <li>Efficient frontier computation</li> <li>Capital Asset Pricing Model (CAPM)</li> <li>Multi-factor models (Fama-French)</li> <li>Portfolio performance evaluation</li> <li>Risk parity and alternative strategies</li> </ul> <p>Optimization: - Quadratic programming for portfolio weights - Constraints (long-only, turnover, sector) - Robust portfolio optimization - Black-Litterman model</p> <p>Risk Measures: - Variance and standard deviation - Value-at-Risk (VaR) - Conditional VaR (CVaR/Expected Shortfall) - Maximum drawdown</p> <p>Applications: - Constructing optimal portfolios - Asset allocation strategies - Risk management - Performance attribution</p>"},{"location":"modules/09-finance/#3-asset-pricing","title":"3. Asset Pricing","text":"<p>Notebook: <code>03_Asset_Pricing.ipynb</code></p> <ul> <li>Consumption-based CAPM (CCAPM)</li> <li>Stochastic discount factor (SDF)</li> <li>Euler equation approach</li> <li>Hansen-Jagannathan bounds</li> <li>Equity premium puzzle</li> <li>Asset pricing tests</li> </ul> <p>Models: - Lucas fruit tree model - Epstein-Zin preferences - Habit formation - Long-run risk models</p> <p>Empirical Methods: - GMM estimation of asset pricing models - Testing factor models - Cross-sectional regressions</p> <p>Applications: - Explaining stock returns - Risk premia estimation - Model validation - Anomaly testing</p>"},{"location":"modules/09-finance/#4-option-pricing","title":"4. Option Pricing","text":"<p>Notebook: <code>04_Option_Pricing.ipynb</code></p> <ul> <li>Binomial option pricing model</li> <li>Black-Scholes-Merton formula</li> <li>Put-call parity</li> <li>Greeks (Delta, Gamma, Vega, Theta, Rho)</li> <li>Implied volatility</li> <li>American options</li> <li>Exotic options</li> </ul> <p>Numerical Methods: - Binomial trees (CRR, Jarrow-Rudd) - Trinomial trees - Monte Carlo simulation - Finite difference methods - Fourier transform methods</p> <p>Volatility: - Historical volatility - Implied volatility surface - SABR model - Stochastic volatility models</p> <p>Applications: - Option pricing and hedging - Portfolio insurance - Risk management with options - Trading strategies</p>"},{"location":"modules/09-finance/#5-continuous-time-finance","title":"5. Continuous-Time Finance","text":"<p>Notebook: <code>05_Continuous_Time_Finance.ipynb</code></p> <ul> <li>Brownian motion and It\u00f4 calculus</li> <li>Stochastic differential equations (SDEs)</li> <li>It\u00f4's lemma</li> <li>Girsanov theorem</li> <li>Feynman-Kac formula</li> <li>Martingale pricing</li> </ul> <p>Models: - Geometric Brownian motion - Ornstein-Uhlenbeck process - CIR and Vasicek interest rate models - Heston stochastic volatility - Jump-diffusion processes</p> <p>Numerical Methods: - Euler-Maruyama discretization - Milstein method - Monte Carlo path simulation - PDE methods for option pricing</p> <p>Applications: - Derivative pricing - Interest rate modeling - Credit risk modeling - Real options</p>"},{"location":"modules/09-finance/#6-credit-risk-modeling","title":"6. Credit Risk Modeling","text":"<p>Notebook: <code>06_Credit_Risk.ipynb</code></p> <ul> <li>Structural models (Merton, KMV)</li> <li>Reduced-form models (Jarrow-Turnbull)</li> <li>Credit default swaps (CDS)</li> <li>Credit ratings and transition matrices</li> <li>Default correlation</li> <li>Copula models</li> </ul> <p>Probability of Default: - Distance to default - Default prediction models - Credit scoring (logit/probit) - Machine learning for credit risk</p> <p>Portfolio Credit Risk: - CreditMetrics - Credit portfolio simulation - Diversification effects - Tail risk in credit portfolios</p> <p>Applications: - Corporate bond pricing - Loan portfolio risk - Credit derivatives - Bank capital requirements</p>"},{"location":"modules/09-finance/#7-high-frequency-data-analysis","title":"7. High-Frequency Data Analysis","text":"<p>Notebook: <code>07_High_Frequency_Data.ipynb</code></p> <ul> <li>Microstructure noise</li> <li>Realized volatility measures</li> <li>Bid-ask spread modeling</li> <li>Market impact models</li> <li>Order flow analysis</li> <li>Limit order book dynamics</li> </ul> <p>Realized Measures: - Realized variance - Realized kernel estimators - Two-scales realized volatility (TSRV) - Multi-scale estimators - Jump detection</p> <p>Market Microstructure: - Price formation - Liquidity measures - Transaction costs - Optimal execution (Almgren-Chriss)</p> <p>Applications: - Intraday volatility forecasting - Algorithmic trading - Market making - Transaction cost analysis</p>"},{"location":"modules/09-finance/#prerequisites","title":"Prerequisites","text":""},{"location":"modules/09-finance/#required-knowledge","title":"Required Knowledge","text":"<p>Economics/Finance: - Essential: Intermediate macro/finance - Helpful: Asset pricing theory, derivatives knowledge</p> <p>Mathematics: - Probability theory (conditional expectation, martingales) - Stochastic calculus basics (Brownian motion, It\u00f4's lemma) - Optimization theory - Differential equations</p> <p>Programming: - Modules 1-3 completed - Module 8 (Time Series) helpful - NumPy, SciPy proficiency</p>"},{"location":"modules/09-finance/#key-libraries","title":"Key Libraries","text":""},{"location":"modules/09-finance/#core-scientific","title":"Core Scientific","text":"<ul> <li>NumPy: Numerical arrays</li> <li>SciPy: Optimization, integration, statistics</li> <li>Pandas: Financial time series</li> <li>Numba: Performance optimization</li> </ul>"},{"location":"modules/09-finance/#finance-specific","title":"Finance-Specific","text":"<ul> <li>QuantLib: Comprehensive derivatives pricing library</li> <li>PyPortfolioOpt: Portfolio optimization</li> <li>yfinance: Market data download</li> <li>pandas-datareader: Economic/financial data</li> <li>zipline/Backtrader: Backtesting frameworks</li> </ul>"},{"location":"modules/09-finance/#visualization","title":"Visualization","text":"<ul> <li>Matplotlib/Seaborn: Standard plotting</li> <li>Plotly: Interactive financial charts</li> <li>mplfinance: Candlestick charts</li> </ul>"},{"location":"modules/09-finance/#learning-path","title":"Learning Path","text":""},{"location":"modules/09-finance/#week-1-financial-frictions","title":"Week 1: Financial Frictions","text":"<ul> <li>Complete notebook 01</li> <li>Understand BGG mechanism</li> <li>Solve financial accelerator model</li> </ul>"},{"location":"modules/09-finance/#week-2-portfolio-theory","title":"Week 2: Portfolio Theory","text":"<ul> <li>Complete notebook 02</li> <li>Implement Markowitz optimization</li> <li>Compute efficient frontier</li> </ul>"},{"location":"modules/09-finance/#week-3-asset-pricing","title":"Week 3: Asset Pricing","text":"<ul> <li>Complete notebook 03</li> <li>Test CAPM and factor models</li> <li>Estimate stochastic discount factors</li> </ul>"},{"location":"modules/09-finance/#week-4-option-pricing","title":"Week 4: Option Pricing","text":"<ul> <li>Complete notebook 04</li> <li>Implement Black-Scholes</li> <li>Price American options numerically</li> </ul>"},{"location":"modules/09-finance/#week-5-continuous-time-finance","title":"Week 5: Continuous-Time Finance","text":"<ul> <li>Complete notebook 05</li> <li>Simulate SDEs</li> <li>Apply It\u00f4's lemma</li> </ul>"},{"location":"modules/09-finance/#week-6-credit-risk-and-hf-data","title":"Week 6: Credit Risk and HF Data","text":"<ul> <li>Complete notebooks 06-07</li> <li>Model credit risk</li> <li>Analyze tick data</li> </ul>"},{"location":"modules/09-finance/#practice-exercises","title":"Practice Exercises","text":"<p>Key exercises throughout the module:</p> <ol> <li>BGG Impulse Responses: Compute IRFs for financial shock</li> <li>Portfolio Optimization: Build min-variance and max-Sharpe portfolios</li> <li>CAPM Test: Test CAPM using historical stock data</li> <li>Option Pricing: Price European and American options</li> <li>Greeks Computation: Calculate and verify option Greeks</li> <li>SDE Simulation: Simulate Heston stochastic volatility</li> <li>Credit Spread: Compute Merton model credit spread</li> <li>Realized Volatility: Estimate RV from high-frequency data</li> </ol>"},{"location":"modules/09-finance/#computational-challenges","title":"Computational Challenges","text":""},{"location":"modules/09-finance/#challenge-curse-of-dimensionality","title":"Challenge: Curse of Dimensionality","text":"<p>Context: High-dimensional portfolio optimization, multi-asset derivatives</p> <p>Solutions: - Use factor models for dimension reduction - Apply sparse methods - Monte Carlo with variance reduction - Quasi-Monte Carlo sequences</p>"},{"location":"modules/09-finance/#challenge-accuracy-in-option-pricing","title":"Challenge: Accuracy in Option Pricing","text":"<p>Context: Need precise prices for hedging</p> <p>Solutions: - Adaptive grid refinement - Richardson extrapolation - Control variates in Monte Carlo - Antithetic variates</p>"},{"location":"modules/09-finance/#challenge-stochastic-volatility-estimation","title":"Challenge: Stochastic Volatility Estimation","text":"<p>Context: Latent volatility in option pricing</p> <p>Solutions: - Particle filters - MCMC methods - Characteristic function methods - Fast Fourier transform techniques</p>"},{"location":"modules/09-finance/#challenge-high-frequency-data-size","title":"Challenge: High-Frequency Data Size","text":"<p>Context: Millions of observations</p> <p>Solutions: - Efficient data structures - Out-of-core computation (Dask) - Parallel processing - Smart sampling/aggregation</p>"},{"location":"modules/09-finance/#real-world-applications","title":"Real-World Applications","text":"<p>Financial computational methods are used by:</p> <p>Buy-Side: - Asset managers (portfolio optimization) - Hedge funds (algorithmic trading) - Pension funds (ALM) - Sovereign wealth funds</p> <p>Sell-Side: - Investment banks (derivatives pricing) - Market makers (HFT strategies) - Brokers (execution algorithms)</p> <p>Risk Management: - Banks (VaR, stress testing) - Insurance (ALM) - Regulators (systemic risk)</p> <p>Academia: - Asset pricing research - Market microstructure - Financial econometrics - Behavioral finance</p>"},{"location":"modules/09-finance/#key-concepts","title":"Key Concepts","text":""},{"location":"modules/09-finance/#risk-neutral-pricing","title":"Risk-Neutral Pricing","text":"<ul> <li>No-arbitrage principle</li> <li>Risk-neutral measure</li> <li>Martingale pricing</li> <li>Change of numeraire</li> </ul>"},{"location":"modules/09-finance/#greeks-and-hedging","title":"Greeks and Hedging","text":"<ul> <li>Delta hedging</li> <li>Gamma risk</li> <li>Vega exposure</li> <li>Dynamic hedging strategies</li> </ul>"},{"location":"modules/09-finance/#stochastic-calculus","title":"Stochastic Calculus","text":"<ul> <li>Brownian motion properties</li> <li>It\u00f4 integral</li> <li>Martingale representation theorem</li> <li>Applications to finance</li> </ul>"},{"location":"modules/09-finance/#credit-risk","title":"Credit Risk","text":"<ul> <li>Default probability</li> <li>Loss given default</li> <li>Exposure at default</li> <li>Expected loss</li> </ul>"},{"location":"modules/09-finance/#resources","title":"Resources","text":""},{"location":"modules/09-finance/#essential-reading","title":"Essential Reading","text":"<p>Textbooks: - Hull, J. (2021). Options, Futures, and Other Derivatives, 11<sup>th</sup> ed. - Shreve, S. (2004). Stochastic Calculus for Finance II: Continuous-Time Models - Bj\u00f6rk, T. (2009). Arbitrage Theory in Continuous Time, 3<sup>rd</sup> ed. - Cochrane, J. (2005). Asset Pricing, Revised Edition - McNeil, A., Frey, R., &amp; Embrechts, P. (2015). Quantitative Risk Management</p> <p>Classic Papers: - Black, F. &amp; Scholes, M. (1973). \"The Pricing of Options and Corporate Liabilities\" - Merton, R. (1973). \"Theory of Rational Option Pricing\" - Bernanke, B., Gertler, M., &amp; Gilchrist, S. (1999). \"The Financial Accelerator\" - Heston, S. (1993). \"A Closed-Form Solution for Options\"</p>"},{"location":"modules/09-finance/#software-documentation","title":"Software Documentation","text":"<ul> <li>QuantLib Python</li> <li>PyPortfolioOpt Docs</li> <li>Zipline Documentation</li> </ul>"},{"location":"modules/09-finance/#online-resources","title":"Online Resources","text":"<ul> <li>Quantitative Finance Stack Exchange</li> <li>QuantStart - Quant finance tutorials</li> <li>Wilmott Forums</li> </ul>"},{"location":"modules/09-finance/#data-sources","title":"Data Sources","text":""},{"location":"modules/09-finance/#market-data","title":"Market Data","text":"<ul> <li>Yahoo Finance (yfinance): Free stock/index data</li> <li>FRED: Interest rates, macro data</li> <li>Quandl: Multiple data sources</li> <li>Alpha Vantage: API for financial data</li> </ul>"},{"location":"modules/09-finance/#academic-data","title":"Academic Data","text":"<ul> <li>CRSP: Stock prices (academic access)</li> <li>Compustat: Fundamental data</li> <li>TAQ: Tick data</li> <li>OptionMetrics: Option prices</li> </ul>"},{"location":"modules/09-finance/#alternative-data","title":"Alternative Data","text":"<ul> <li>Cryptocurrency: Binance, Coinbase APIs</li> <li>FX Data: Oanda, Dukascopy</li> <li>Bloomberg/Reuters: Professional data (paid)</li> </ul>"},{"location":"modules/09-finance/#regulatory-considerations","title":"Regulatory Considerations","text":"<p>When working with financial models:</p> <ol> <li>Model Risk Management: Validate models, understand limitations</li> <li>Basel III: Capital requirements for banks</li> <li>Dodd-Frank: Derivatives regulation</li> <li>MiFID II: European markets regulation</li> <li>Fair Value Accounting: IFRS 13, ASC 820</li> </ol> <p>Always: - Document model assumptions - Perform model validation - Conduct sensitivity analysis - Understand regulatory requirements</p>"},{"location":"modules/09-finance/#assessment","title":"Assessment","text":"<p>To master this module, demonstrate:</p> <ul> <li> Solve BGG financial accelerator model</li> <li> Construct optimal portfolios</li> <li> Test asset pricing models empirically</li> <li> Price options using multiple methods</li> <li> Simulate stochastic differential equations</li> <li> Calculate option Greeks accurately</li> <li> Model credit risk</li> <li> Analyze high-frequency data</li> <li> Understand risk-neutral pricing</li> <li> Implement hedging strategies</li> </ul>"},{"location":"modules/09-finance/#next-steps","title":"Next Steps","text":"<p>After completing this module:</p> <ol> <li>Advanced Topics:</li> <li>Machine learning for finance (Module 7)</li> <li>Algorithmic trading systems</li> <li>Risk management frameworks</li> <li> <p>Financial engineering</p> </li> <li> <p>Certifications:</p> </li> <li>CFA (Chartered Financial Analyst)</li> <li>FRM (Financial Risk Manager)</li> <li> <p>CQF (Certificate in Quantitative Finance)</p> </li> <li> <p>Research:</p> </li> <li>Apply methods to original research</li> <li>Explore alternative data</li> <li>Develop trading strategies</li> </ol>"},{"location":"modules/09-finance/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Theory First: Understand the mathematics before coding</li> <li>Verify: Check numerical results against analytical solutions</li> <li>Visualize: Plot payoffs, Greeks, surfaces</li> <li>Real Data: Use actual market data for realism</li> <li>Backtesting: Always test strategies out-of-sample</li> <li>Risk Management: Never ignore risk in live trading</li> <li>Stay Current: Finance evolves rapidly</li> <li>Ethics: Consider market impact and fairness</li> </ol>"},{"location":"modules/09-finance/#common-pitfalls","title":"Common Pitfalls","text":""},{"location":"modules/09-finance/#pitfall-ignoring-transaction-costs","title":"Pitfall: Ignoring Transaction Costs","text":"<p>Solution: Always include realistic costs in backtests</p>"},{"location":"modules/09-finance/#pitfall-overfitting-trading-strategies","title":"Pitfall: Overfitting Trading Strategies","text":"<p>Solution: Use walk-forward analysis, multiple test periods</p>"},{"location":"modules/09-finance/#pitfall-misusing-black-scholes","title":"Pitfall: Misusing Black-Scholes","text":"<p>Solution: Remember assumptions (constant vol, no jumps, etc.)</p>"},{"location":"modules/09-finance/#pitfall-poor-risk-management","title":"Pitfall: Poor Risk Management","text":"<p>Solution: Position sizing, stop losses, diversification</p>"},{"location":"modules/09-finance/#need-help","title":"Need Help?","text":"<ul> <li>Review Time Series for volatility modeling</li> <li>Check Numerical Methods for PDEs</li> <li>See Economic Modeling for DP</li> <li>Visit Quantitative Finance Stack Exchange</li> <li>Join GitHub Discussions</li> </ul> <p>Ready to dive into computational finance? Start with <code>01_Financial_Frictions_BGG.ipynb</code>!</p>"},{"location":"resources/","title":"Resources","text":"<p>Additional materials to support your learning journey.</p>"},{"location":"resources/#quick-links","title":"Quick Links","text":"<ul> <li> <p> Code Style Guide</p> <p>Best practices for writing clean, maintainable Python code for economics</p> <p> View guide</p> </li> <li> <p> References</p> <p>Curated list of books, papers, and online resources</p> <p> Browse references</p> </li> <li> <p> Software Tools</p> <p>Essential tools and software for computational economics</p> <p> Explore tools</p> </li> <li> <p> Datasets</p> <p>Economic datasets used throughout the course</p> <p> See datasets</p> </li> <li> <p> FAQ</p> <p>Answers to frequently asked questions</p> <p> Read FAQ</p> </li> </ul>"},{"location":"resources/#external-resources","title":"External Resources","text":""},{"location":"resources/#online-learning-platforms","title":"Online Learning Platforms","text":""},{"location":"resources/#python-programming","title":"Python &amp; Programming","text":"<ul> <li>Real Python - Comprehensive Python tutorials</li> <li>Python Tutor - Visualize code execution</li> <li>Exercism - Practice with feedback</li> <li>LeetCode - Algorithm practice</li> </ul>"},{"location":"resources/#data-science","title":"Data Science","text":"<ul> <li>Kaggle - Competitions and datasets</li> <li>DataCamp - Interactive courses</li> <li>Fast.ai - Practical deep learning</li> </ul>"},{"location":"resources/#economics","title":"Economics","text":"<ul> <li>QuantEcon - Quantitative economics lectures</li> <li>NBER - Economic research</li> <li>Federal Reserve Data - Economic data</li> </ul>"},{"location":"resources/#documentation","title":"Documentation","text":""},{"location":"resources/#core-libraries","title":"Core Libraries","text":"<ul> <li>Python 3 Documentation</li> <li>NumPy Documentation</li> <li>Pandas Documentation</li> <li>Matplotlib Documentation</li> <li>SciPy Documentation</li> </ul>"},{"location":"resources/#machine-learning","title":"Machine Learning","text":"<ul> <li>scikit-learn Documentation</li> <li>TensorFlow Documentation</li> <li>PyTorch Documentation</li> <li>Keras Documentation</li> </ul>"},{"location":"resources/#econometrics","title":"Econometrics","text":"<ul> <li>statsmodels Documentation</li> <li>PyMC Documentation</li> <li>linearmodels Documentation</li> </ul>"},{"location":"resources/#books","title":"Books","text":""},{"location":"resources/#python-programming_1","title":"Python Programming","text":"<ul> <li>Ramalho, L. (2022). Fluent Python, 2<sup>nd</sup> ed. O'Reilly</li> <li>VanderPlas, J. (2016). Python Data Science Handbook. O'Reilly</li> <li>McKinney, W. (2022). Python for Data Analysis, 3<sup>rd</sup> ed. O'Reilly</li> </ul>"},{"location":"resources/#numerical-methods","title":"Numerical Methods","text":"<ul> <li>Press, W. et al. (2007). Numerical Recipes, 3<sup>rd</sup> ed. Cambridge</li> <li>Judd, K. (1998). Numerical Methods in Economics. MIT Press</li> <li>Miranda, M. &amp; Fackler, P. (2002). Applied Computational Economics and Finance. MIT Press</li> </ul>"},{"location":"resources/#economics_1","title":"Economics","text":"<ul> <li>Stokey, N., Lucas, R., &amp; Prescott, E. (1989). Recursive Methods in Economic Dynamics. Harvard</li> <li>Ljungqvist, L. &amp; Sargent, T. (2018). Recursive Macroeconomic Theory, 4<sup>th</sup> ed. MIT Press</li> <li>Acemoglu, D. (2008). Introduction to Modern Economic Growth. Princeton</li> </ul>"},{"location":"resources/#econometrics_1","title":"Econometrics","text":"<ul> <li>Wooldridge, J. (2020). Econometric Analysis of Cross Section and Panel Data, 2<sup>nd</sup> ed. MIT Press</li> <li>Cameron, A. C. &amp; Trivedi, P. K. (2005). Microeconometrics. Cambridge</li> <li>Hamilton, J. (1994). Time Series Analysis. Princeton</li> </ul>"},{"location":"resources/#machine-learning_1","title":"Machine Learning","text":"<ul> <li>Hastie, T., Tibshirani, R., &amp; Friedman, J. (2009). The Elements of Statistical Learning, 2<sup>nd</sup> ed. Springer</li> <li>Goodfellow, I., Bengio, Y., &amp; Courville, A. (2016). Deep Learning. MIT Press</li> <li>Murphy, K. (2022). Probabilistic Machine Learning: An Introduction. MIT Press</li> </ul>"},{"location":"resources/#video-courses","title":"Video Courses","text":""},{"location":"resources/#economics_2","title":"Economics","text":"<ul> <li>MIT OpenCourseWare: Economics</li> <li>QuantEcon Lectures</li> </ul>"},{"location":"resources/#programming-data-science","title":"Programming &amp; Data Science","text":"<ul> <li>Python for Everybody (Coursera)</li> <li>Applied Data Science with Python (Coursera)</li> <li>3Blue1Brown - Math visualizations</li> </ul>"},{"location":"resources/#machine-learning_2","title":"Machine Learning","text":"<ul> <li>Andrew Ng's Machine Learning (Coursera)</li> <li>Fast.ai Practical Deep Learning</li> <li>Stanford CS229</li> </ul>"},{"location":"resources/#communities","title":"Communities","text":""},{"location":"resources/#forums-discussion","title":"Forums &amp; Discussion","text":"<ul> <li>Stack Overflow - Programming questions</li> <li>Cross Validated - Statistics questions</li> <li>Economics Stack Exchange - Economics questions</li> </ul>"},{"location":"resources/#python-communities","title":"Python Communities","text":"<ul> <li>Python Discord</li> <li>r/Python</li> <li>r/learnpython</li> </ul>"},{"location":"resources/#economics-data-science","title":"Economics &amp; Data Science","text":"<ul> <li>r/econometrics</li> <li>r/datascience</li> <li>Kaggle Forums</li> </ul>"},{"location":"resources/#cheat-sheets","title":"Cheat Sheets","text":"<p>Download quick reference guides:</p> <ul> <li>NumPy Cheat Sheet</li> <li>Pandas Cheat Sheet</li> <li>Matplotlib Cheat Sheets</li> <li>Python Cheat Sheet</li> </ul>"},{"location":"resources/#useful-tools","title":"Useful Tools","text":""},{"location":"resources/#development-environments","title":"Development Environments","text":"<ul> <li>VS Code - Recommended IDE</li> <li>PyCharm - Full-featured Python IDE</li> <li>Jupyter Lab - Interactive notebooks</li> </ul>"},{"location":"resources/#version-control","title":"Version Control","text":"<ul> <li>Git - Version control system</li> <li>GitHub - Code hosting platform</li> <li>GitHub Desktop - Git GUI</li> </ul>"},{"location":"resources/#data-visualization","title":"Data Visualization","text":"<ul> <li>Plotly - Interactive plots</li> <li>Seaborn - Statistical visualizations</li> <li>Bokeh - Interactive web visualizations</li> </ul>"},{"location":"resources/#need-help","title":"Need Help?","text":"<p>Can't find what you're looking for?</p> <ul> <li>Check the FAQ</li> <li>Browse GitHub Discussions</li> <li>Open an Issue</li> </ul>"},{"location":"resources/code-style/","title":"Code Style Guide","text":"<p>Follow these guidelines for writing clean, maintainable code in the course.</p>"},{"location":"resources/code-style/#full-guide","title":"Full Guide","text":"<p>The complete code style guide is available in the repository:</p> <p> View Full Code Style Guide</p>"},{"location":"resources/code-style/#quick-reference","title":"Quick Reference","text":""},{"location":"resources/code-style/#naming-conventions","title":"Naming Conventions","text":"<pre><code># Classes: PascalCase\nclass EconomicAgent:\n    pass\n\n# Functions: snake_case\ndef solve_bellman_equation():\n    pass\n\n# Constants: UPPER_SNAKE_CASE\nMAX_ITERATIONS = 1000\n\n# Private: _leading_underscore\ndef _internal_helper():\n    pass\n</code></pre>"},{"location":"resources/code-style/#documentation","title":"Documentation","text":"<p>Use NumPy-style docstrings:</p> <pre><code>def present_value(fv, r, n):\n    \"\"\"\n    Calculate present value.\n\n    Parameters\n    ----------\n    fv : float\n        Future value\n    r : float\n        Discount rate\n    n : int\n        Number of periods\n\n    Returns\n    -------\n    float\n        Present value\n    \"\"\"\n    return fv / (1 + r) ** n\n</code></pre>"},{"location":"resources/code-style/#type-hints","title":"Type Hints","text":"<pre><code>from typing import Dict, List, Tuple\nimport numpy as np\nfrom numpy.typing import NDArray\n\ndef solve_model(\n    params: Dict[str, float],\n    grid_size: int = 100\n) -&gt; Tuple[NDArray[np.float64], NDArray[np.float64]]:\n    \"\"\"Solve economic model.\"\"\"\n    pass\n</code></pre>"},{"location":"resources/code-style/#error-handling","title":"Error Handling","text":"<pre><code># Validate inputs\nif consumption &lt;= 0:\n    raise ValueError(f\"Consumption must be positive, got {consumption}\")\n\n# Specific exceptions\ntry:\n    data = pd.read_csv(filename)\nexcept FileNotFoundError:\n    print(f\"File {filename} not found\")\n    raise\n</code></pre>"},{"location":"resources/code-style/#best-practices","title":"Best Practices","text":"<ul> <li>\u2713 Use descriptive variable names</li> <li>\u2713 Keep functions small and focused</li> <li>\u2713 Write tests for your code</li> <li>\u2713 Add comments explaining WHY, not WHAT</li> <li>\u2713 Use vectorization instead of loops</li> <li>\u2713 Follow PEP 8</li> </ul>"},{"location":"resources/code-style/#additional-resources","title":"Additional Resources","text":"<ul> <li>PEP 8 - Python Style Guide</li> <li>NumPy Docstring Guide</li> <li>Google Python Style Guide</li> </ul> <p> Back to Resources</p>"},{"location":"resources/datasets/","title":"Datasets","text":"<p>Economic datasets used throughout the course.</p>"},{"location":"resources/datasets/#included-datasets","title":"Included Datasets","text":""},{"location":"resources/datasets/#fred-economic-data","title":"FRED Economic Data","text":"<p>Source: Federal Reserve Economic Data (FRED)</p> <p>Files: - <code>GDPC1.csv</code> - Real GDP - <code>CPIAUCSL.csv</code> - Consumer Price Index - <code>UNRATE.csv</code> - Unemployment Rate - <code>FEDFUNDS.csv</code> - Federal Funds Rate - <code>DPIC96.csv</code> - Disposable Personal Income - <code>PCECC96.csv</code> - Personal Consumption - <code>INDPRO.csv</code> - Industrial Production</p> <p>API: Use <code>pandas-datareader</code> to download updated data</p> <pre><code>from pandas_datareader import data\ngdp = data.get_data_fred('GDPC1', start='2000')\n</code></pre>"},{"location":"resources/datasets/#finance-data","title":"Finance Data","text":"<ul> <li><code>SP500.csv</code> - S&amp;P 500 returns</li> <li><code>10_industry_portfolios.csv</code> - Industry portfolio returns</li> <li><code>fama_french_5_factors.csv</code> - Fama-French factors</li> </ul>"},{"location":"resources/datasets/#research-data","title":"Research Data","text":"<ul> <li><code>beijin_data.dta</code> - Beijing housing data (Stata format)</li> <li><code>SEntFiN.csv</code> - Sentiment/Financial data</li> </ul>"},{"location":"resources/datasets/#external-data-sources","title":"External Data Sources","text":""},{"location":"resources/datasets/#economic-data","title":"Economic Data","text":"<ul> <li>FRED - Federal Reserve data</li> <li>World Bank - Global development data</li> <li>IMF - International financial data</li> <li>OECD - OECD statistics</li> </ul>"},{"location":"resources/datasets/#financial-data","title":"Financial Data","text":"<ul> <li>Yahoo Finance - Stock market data</li> <li>Quandl - Financial and economic data</li> <li>Alpha Vantage - Market data API</li> </ul>"},{"location":"resources/datasets/#research-data_1","title":"Research Data","text":"<ul> <li>NBER - Economic research data</li> <li>Opportunity Insights - Social mobility data</li> <li>IPUMS - Census and survey data</li> </ul> <p> Back to Resources</p>"},{"location":"resources/faq/","title":"Frequently Asked Questions","text":"<p>Find answers to common questions about the course.</p>"},{"location":"resources/faq/#getting-started","title":"Getting Started","text":""},{"location":"resources/faq/#do-i-need-prior-programming-experience","title":"Do I need prior programming experience?","text":"<p>No! Module 1 starts from the basics. If you've never programmed before, you'll learn everything you need. However, familiarity with computers and willingness to practice is essential.</p>"},{"location":"resources/faq/#what-mathematics-background-do-i-need","title":"What mathematics background do I need?","text":"<p>Minimum: - Calculus (single and multivariable) - Linear algebra (matrices, vectors) - Probability and statistics</p> <p>Recommended: - Real analysis - Optimization theory - Stochastic processes</p> <p>The appendices provide mathematical reviews if you need a refresher.</p>"},{"location":"resources/faq/#what-economics-background-is-required","title":"What economics background is required?","text":"<p>Minimum: - Intermediate microeconomics - Intermediate macroeconomics - Basic econometrics</p> <p>Helpful but not required: - Graduate-level micro/macro - Dynamic optimization - Game theory</p>"},{"location":"resources/faq/#installation-setup","title":"Installation &amp; Setup","text":""},{"location":"resources/faq/#which-installation-method-should-i-use-conda-or-pip","title":"Which installation method should I use: conda or pip?","text":"<p>Conda (recommended): - \u2713 Better dependency management - \u2713 Handles non-Python packages - \u2713 Isolated environments - \u2713 Better for data science</p> <p>Pip: - \u2713 Lighter weight - \u2713 More packages available - \u2713 Faster for small installs</p> <p>For this course, conda is strongly recommended due to complex scientific packages.</p>"},{"location":"resources/faq/#the-installation-is-taking-forever-is-this-normal","title":"The installation is taking forever. Is this normal?","text":"<p>Yes! The full environment includes: - 50+ Python packages - 2-3 GB of downloads - Complex dependency resolution</p> <p>Tips: - Use a fast, stable internet connection - Consider <code>mamba</code> for faster installation: <code>conda install mamba -c conda-forge</code> - Install in stages if needed</p>"},{"location":"resources/faq/#im-getting-package-conflicts-what-should-i-do","title":"I'm getting package conflicts. What should I do?","text":"<p>Try these steps:</p> <ol> <li> <p>Update conda: <pre><code>conda update conda\n</code></pre></p> </li> <li> <p>Clear cache: <pre><code>conda clean --all\n</code></pre></p> </li> <li> <p>Create fresh environment: <pre><code>conda env remove -n computational-econ\nconda env create -f environment.yml\n</code></pre></p> </li> <li> <p>Use mamba (faster solver): <pre><code>conda install mamba -c conda-forge\nmamba env create -f environment.yml\n</code></pre></p> </li> </ol>"},{"location":"resources/faq/#can-i-use-google-colab-instead-of-installing-locally","title":"Can I use Google Colab instead of installing locally?","text":"<p>Yes, but with limitations:</p> <p>Pros: - No local installation needed - Free GPU access - Works on any device</p> <p>Cons: - Session timeouts - No persistent storage - Limited memory - Missing some packages</p> <p>Verdict: Good for getting started, but local installation recommended for serious work.</p>"},{"location":"resources/faq/#using-the-course","title":"Using the Course","text":""},{"location":"resources/faq/#in-what-order-should-i-complete-the-modules","title":"In what order should I complete the modules?","text":"<p>Recommended sequence: 1. Module 1: Foundations (required for all others) 2. Module 2: Numerical Methods (required for most others) 3. Module 3: Economic Modeling (foundation for macro/micro) 4. Then choose based on interest:    - Macro track: Modules 4 \u2192 10    - Micro track: Modules 5 \u2192 10    - Empirical track: Modules 6 \u2192 7 \u2192 8    - Finance track: Modules 6 \u2192 8 \u2192 9</p> <p>See the Course Structure for details.</p>"},{"location":"resources/faq/#how-long-does-it-take-to-complete-the-course","title":"How long does it take to complete the course?","text":"<p>Full-time study (40 hrs/week): - Fast track: 12-16 weeks - Comfortable pace: 20-24 weeks</p> <p>Part-time study (10-15 hrs/week): - 6-12 months</p> <p>Factors affecting speed: - Prior programming experience - Mathematics background - Time spent on exercises - Depth of exploration</p>"},{"location":"resources/faq/#can-i-skip-modules","title":"Can I skip modules?","text":"<p>It depends:</p> <p>Can skip if you already know: - Python basics (but review Module 1 highlights) - Specific topics you're not interested in</p> <p>Cannot skip: - Module 1 (unless strong Python background) - Module 2 (needed for almost everything) - Module 3 (needed for modules 4-5, 9-10)</p>"},{"location":"resources/faq/#are-there-solutions-to-the-exercises","title":"Are there solutions to the exercises?","text":"<p>Many notebooks include: - Worked examples with full solutions - Code cells with expected outputs - Hints and tips</p> <p>For open-ended exercises: - Multiple valid approaches exist - Focus on understanding concepts - Compare your approach to course code</p>"},{"location":"resources/faq/#can-i-use-this-course-for-teaching","title":"Can I use this course for teaching?","text":"<p>Yes! The course is open-source and free to use.</p> <p>Licensing: - Code: MIT License (use freely) - Content: CC BY 4.0 (attribution required)</p> <p>Please: - Provide attribution - Share improvements back - See License for details</p>"},{"location":"resources/faq/#technical-issues","title":"Technical Issues","text":""},{"location":"resources/faq/#jupyter-is-not-starting-what-should-i-do","title":"Jupyter is not starting. What should I do?","text":"<ol> <li> <p>Verify installation: <pre><code>conda activate computational-econ\njupyter lab --version\n</code></pre></p> </li> <li> <p>Try classic Jupyter: <pre><code>jupyter notebook\n</code></pre></p> </li> <li> <p>Check port conflicts: <pre><code>jupyter lab --port=8889\n</code></pre></p> </li> <li> <p>Reinstall Jupyter: <pre><code>conda install -c conda-forge jupyterlab --force-reinstall\n</code></pre></p> </li> </ol>"},{"location":"resources/faq/#a-notebook-is-giving-import-errors-help","title":"A notebook is giving import errors. Help!","text":"<p>Check these:</p> <ol> <li>Correct kernel selected?</li> <li> <p>Kernel \u2192 Change Kernel \u2192 computational-econ</p> </li> <li> <p>Environment activated? <pre><code>conda activate computational-econ\n</code></pre></p> </li> <li> <p>Package installed? <pre><code>conda list | grep package-name\n</code></pre></p> </li> <li> <p>Reinstall if needed: <pre><code>conda install package-name\n</code></pre></p> </li> </ol>"},{"location":"resources/faq/#my-code-is-running-very-slowly-is-this-normal","title":"My code is running very slowly. Is this normal?","text":"<p>Common causes:</p> <ol> <li>Not using vectorization</li> <li>\u274c Bad: <code>for</code> loops over arrays</li> <li> <p>\u2713 Good: NumPy vectorized operations</p> </li> <li> <p>Large dataset in memory</p> </li> <li>Use chunks for very large data</li> <li> <p>Consider Dask for out-of-core computation</p> </li> <li> <p>Inefficient algorithm</p> </li> <li>Review Module 23: Performance Optimization</li> <li> <p>Use profiling to find bottlenecks</p> </li> <li> <p>No GPU for deep learning</p> </li> <li>Consider Google Colab for free GPU</li> <li>Or install CUDA locally</li> </ol>"},{"location":"resources/faq/#im-getting-kernel-died-errors","title":"I'm getting \"Kernel died\" errors","text":"<p>Possible causes:</p> <ol> <li>Out of memory</li> <li>Close other applications</li> <li>Restart kernel</li> <li> <p>Use smaller datasets for practice</p> </li> <li> <p>Infinite loop</p> </li> <li>Check for while loops without exit condition</li> <li> <p>Add iteration limits</p> </li> <li> <p>Segmentation fault</p> </li> <li>Usually from C extensions</li> <li>Restart kernel and try again</li> </ol>"},{"location":"resources/faq/#content-questions","title":"Content Questions","text":""},{"location":"resources/faq/#why-dont-you-cover-topic-x","title":"Why don't you cover topic X?","text":"<p>The course focuses on: - Core computational methods - Widely-used techniques - Foundation for frontier research</p> <p>Topics not covered (and why): - Distributed systems \u2192 Out of scope - Quantum computing \u2192 Too specialized - Specific software (Stata, Matlab) \u2192 Python-focused - Web development \u2192 Not core to economics</p> <p>That said, contributions are welcome! See Contributing.</p>"},{"location":"resources/faq/#the-math-is-too-hard-where-can-i-get-help","title":"The math is too hard. Where can I get help?","text":"<p>Resources:</p> <ol> <li>Course appendices - Math reviews included</li> <li>Khan Academy - Free calculus and linear algebra</li> <li>3Blue1Brown - Excellent YouTube series on math</li> <li>MIT OpenCourseWare - Free university courses</li> </ol> <p>Strategy: - Don't get stuck on math details - Focus on intuition first - Come back to proofs later - Practice with code helps understanding</p>"},{"location":"resources/faq/#the-code-is-too-hard-what-should-i-do","title":"The code is too hard. What should I do?","text":"<p>Learning strategies:</p> <ol> <li>Type code yourself - Don't just read</li> <li>Run each cell - See what happens</li> <li>Modify and experiment - Change parameters</li> <li>Break down complex code - One line at a time</li> <li>Use debugger - Step through execution</li> <li>Add print statements - See intermediate values</li> </ol> <p>Resources: - Module 17: Effective Debugging - Python Tutor - Visualize execution - Real Python - Tutorials</p>"},{"location":"resources/faq/#gpu-performance","title":"GPU &amp; Performance","text":""},{"location":"resources/faq/#do-i-need-a-gpu-for-this-course","title":"Do I need a GPU for this course?","text":"<p>Not required, but helpful for: - Module 7: Machine Learning (deep learning sections) - Large-scale simulations - Training neural networks</p> <p>Alternatives if no GPU: - Google Colab (free GPU) - Use smaller examples - Pre-trained models - CPU is fine for learning</p>"},{"location":"resources/faq/#how-do-i-enable-gpu-support","title":"How do I enable GPU support?","text":"<p>For NVIDIA GPUs:</p> <ol> <li>Install CUDA Toolkit (version 12.x)</li> <li>Install cuDNN</li> <li> <p>Install GPU packages: <pre><code>pip install tensorflow[and-cuda]\npip install torch --index-url https://download.pytorch.org/whl/cu121\n</code></pre></p> </li> <li> <p>Verify: <pre><code>import tensorflow as tf\nprint(\"GPUs:\", tf.config.list_physical_devices('GPU'))\n</code></pre></p> </li> </ol> <p>See Installation Guide for details.</p>"},{"location":"resources/faq/#career-applications","title":"Career &amp; Applications","text":""},{"location":"resources/faq/#will-this-course-prepare-me-for-a-job-in-data-science","title":"Will this course prepare me for a job in data science?","text":"<p>Yes, with caveats:</p> <p>Strengths: - Strong programming foundation - Statistical/econometric methods - Machine learning skills - Real-world applications</p> <p>Also needed (not covered as much): - Software engineering - Databases and SQL - Cloud computing - Communication skills</p> <p>Verdict: Excellent foundation; supplement with applied projects and internships.</p>"},{"location":"resources/faq/#can-i-use-this-for-my-research","title":"Can I use this for my research?","text":"<p>Absolutely! The course covers: - Modern econometric methods - Computational modeling - Data analysis techniques - Machine learning for economics</p> <p>Many notebooks can be adapted for research projects.</p>"},{"location":"resources/faq/#what-jobs-can-this-prepare-me-for","title":"What jobs can this prepare me for?","text":"<p>Roles: - Economic researcher - Data scientist (economics/finance) - Quantitative analyst - Policy analyst - Computational economist - Economic consultant - Central bank researcher - Academic economist</p> <p>Skills employers value: - Python programming - Statistical analysis - Economic modeling - Machine learning - Data visualization</p>"},{"location":"resources/faq/#contributing","title":"Contributing","text":""},{"location":"resources/faq/#i-found-an-error-how-do-i-report-it","title":"I found an error. How do I report it?","text":"<p>GitHub Issues: 1. Go to GitHub repository 2. Click \"New Issue\" 3. Provide:    - Notebook name and cell number    - Description of error    - Expected vs actual behavior    - Your setup (OS, Python version)</p>"},{"location":"resources/faq/#can-i-contribute-improvements","title":"Can I contribute improvements?","text":"<p>Yes! Contributions welcome:</p> <ol> <li>Fork repository</li> <li>Make improvements</li> <li>Submit pull request</li> </ol> <p>See Contributing Guide.</p> <p>Good contributions: - Bug fixes - Clarifications - Additional examples - New exercises - Better visualizations</p>"},{"location":"resources/faq/#still-have-questions","title":"Still Have Questions?","text":"<ul> <li> GitHub Discussions</li> <li> GitHub Issues</li> <li> Email: Contact</li> </ul>"},{"location":"resources/references/","title":"References","text":"<p>Curated list of books, papers, and online resources.</p>"},{"location":"resources/references/#essential-books","title":"Essential Books","text":""},{"location":"resources/references/#programming","title":"Programming","text":"<ul> <li>Ramalho, L. (2022). Fluent Python, 2<sup>nd</sup> ed. O'Reilly</li> <li>McKinney, W. (2022). Python for Data Analysis, 3<sup>rd</sup> ed. O'Reilly</li> <li>VanderPlas, J. (2016). Python Data Science Handbook. O'Reilly</li> </ul>"},{"location":"resources/references/#numerical-methods","title":"Numerical Methods","text":"<ul> <li>Judd, K. (1998). Numerical Methods in Economics. MIT Press</li> <li>Miranda, M. &amp; Fackler, P. (2002). Applied Computational Economics. MIT Press</li> <li>Press, W. et al. (2007). Numerical Recipes, 3<sup>rd</sup> ed. Cambridge</li> </ul>"},{"location":"resources/references/#economics","title":"Economics","text":"<ul> <li>Ljungqvist, L. &amp; Sargent, T. (2018). Recursive Macroeconomic Theory, 4<sup>th</sup> ed. MIT Press</li> <li>Stokey, N., Lucas, R., &amp; Prescott, E. (1989). Recursive Methods. Harvard</li> <li>Acemoglu, D. (2008). Introduction to Modern Economic Growth. Princeton</li> </ul>"},{"location":"resources/references/#econometrics","title":"Econometrics","text":"<ul> <li>Wooldridge, J. (2020). Econometric Analysis. MIT Press</li> <li>Cameron, A. C. &amp; Trivedi, P. K. (2005). Microeconometrics. Cambridge</li> <li>Hamilton, J. (1994). Time Series Analysis. Princeton</li> </ul>"},{"location":"resources/references/#machine-learning","title":"Machine Learning","text":"<ul> <li>Hastie, T., Tibshirani, R., &amp; Friedman, J. (2009). Elements of Statistical Learning. Springer</li> <li>Goodfellow, I., Bengio, Y., &amp; Courville, A. (2016). Deep Learning. MIT Press</li> </ul>"},{"location":"resources/references/#online-courses","title":"Online Courses","text":"<ul> <li>MIT OpenCourseWare: Economics</li> <li>QuantEcon Lectures</li> <li>Fast.ai</li> </ul> <p> Back to Resources</p>"},{"location":"resources/tools/","title":"Software Tools","text":"<p>Essential tools and software for computational economics and data science.</p>"},{"location":"resources/tools/#core-tools","title":"Core Tools","text":""},{"location":"resources/tools/#python","title":"Python","text":"<p>Download: python.org</p> <p>The foundation of the course. Use Python 3.10 or higher.</p>"},{"location":"resources/tools/#condaminiconda","title":"Conda/Miniconda","text":"<p>Download: Miniconda</p> <p>Package and environment management. Highly recommended.</p>"},{"location":"resources/tools/#jupyter-lab","title":"Jupyter Lab","text":"<p>Install: <code>conda install jupyterlab</code></p> <p>Interactive development environment for notebooks.</p>"},{"location":"resources/tools/#ides-editors","title":"IDEs &amp; Editors","text":""},{"location":"resources/tools/#vs-code-recommended","title":"VS Code (Recommended)","text":"<p>Download: code.visualstudio.com</p> <p>Essential Extensions: - Python - Jupyter - GitLens - Code Spell Checker</p>"},{"location":"resources/tools/#pycharm","title":"PyCharm","text":"<p>Download: jetbrains.com/pycharm</p> <p>Full-featured Python IDE. Free community edition available.</p>"},{"location":"resources/tools/#version-control","title":"Version Control","text":""},{"location":"resources/tools/#git","title":"Git","text":"<p>Download: git-scm.com</p> <p>Essential for version control and collaboration.</p>"},{"location":"resources/tools/#github-desktop","title":"GitHub Desktop","text":"<p>Download: desktop.github.com</p> <p>GUI for Git. Good for beginners.</p>"},{"location":"resources/tools/#productivity-tools","title":"Productivity Tools","text":""},{"location":"resources/tools/#terminal","title":"Terminal","text":"<ul> <li>Windows: Windows Terminal, Git Bash</li> <li>macOS: iTerm2, built-in Terminal</li> <li>Linux: GNOME Terminal, Konsole</li> </ul>"},{"location":"resources/tools/#documentation","title":"Documentation","text":"<ul> <li>Markdown: Typora, Mark Text</li> <li>LaTeX: Overleaf, TeXstudio</li> </ul> <p> Back to Resources</p>"}]}